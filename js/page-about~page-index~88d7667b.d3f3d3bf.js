(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["page-about~page-index~88d7667b"],{"75bf":function(e,t,n){"use strict";(function(e,r,a,s,i){n.d(t,"a",(function(){return Ose})),n.d(t,"b",(function(){return kne})),n.d(t,"c",(function(){return mne})),n.d(t,"d",(function(){return rse})),n.d(t,"e",(function(){return qne})),n.d(t,"f",(function(){return Dse})),n.d(t,"g",(function(){return Qne})),n.d(t,"h",(function(){return cse})),n.d(t,"i",(function(){return fse})),n.d(t,"j",(function(){return dse}));var o=Object.defineProperty,l=(e=>n("01f3"))(),u=(e,t)=>{for(var n in t)o(e,n,{get:t[n],enumerable:!0})},h={};u(h,{Abs:()=>Ye,Acos:()=>Ze,Acosh:()=>Je,AdadeltaOptimizer:()=>wb,AdagradOptimizer:()=>vb,AdamOptimizer:()=>kb,AdamaxOptimizer:()=>Ib,Add:()=>Qe,AddN:()=>et,All:()=>tt,Any:()=>nt,ArgMax:()=>rt,ArgMin:()=>at,Asin:()=>st,Asinh:()=>it,Atan:()=>ot,Atan2:()=>ut,Atanh:()=>lt,AvgPool:()=>ht,AvgPool3D:()=>dt,AvgPool3DGrad:()=>ct,AvgPoolGrad:()=>pt,BackendWasm:()=>fte,BatchMatMul:()=>ft,BatchToSpaceND:()=>mt,Bincount:()=>gt,BroadcastArgs:()=>bt,BroadcastTo:()=>yt,Callback:()=>TR,CallbackList:()=>kT,Cast:()=>xt,Ceil:()=>wt,ClipByValue:()=>vt,Complex:()=>kt,ComplexAbs:()=>It,Concat:()=>St,Conv2D:()=>Nt,Conv2DBackpropFilter:()=>Tt,Conv2DBackpropInput:()=>Ct,Conv3D:()=>_t,Conv3DBackpropFilterV2:()=>Et,Conv3DBackpropInputV2:()=>At,Cos:()=>$t,Cosh:()=>Rt,CropAndResize:()=>Mt,Cumprod:()=>Ft,Cumsum:()=>Dt,CustomCallback:()=>NT,DataStorage:()=>V,DenseBincount:()=>Ot,DepthToSpace:()=>Lt,DepthwiseConv2dNative:()=>zt,DepthwiseConv2dNativeBackpropFilter:()=>Pt,DepthwiseConv2dNativeBackpropInput:()=>Bt,Diag:()=>Wt,Dilation2D:()=>Vt,Dilation2DBackpropFilter:()=>Gt,Dilation2DBackpropInput:()=>Ut,ENV:()=>He,EarlyStopping:()=>ER,Einsum:()=>jt,Elu:()=>qt,EluGrad:()=>Kt,Environment:()=>Pe,Equal:()=>Yt,Erf:()=>Xt,Exp:()=>Zt,ExpandDims:()=>Jt,Expm1:()=>Qt,FFT:()=>en,Fill:()=>tn,FlipLeftRight:()=>nn,Floor:()=>rn,FloorDiv:()=>an,FromPixels:()=>sa,FusedBatchNorm:()=>sn,FusedConv2D:()=>la,FusedDepthwiseConv2D:()=>ua,GPGPUContext:()=>Rq,GatherNd:()=>ln,GatherV2:()=>on,GraphModel:()=>VD,Greater:()=>un,GreaterEqual:()=>hn,History:()=>ST,IFFT:()=>dn,Identity:()=>pn,Imag:()=>cn,InputSpec:()=>yN,IsFinite:()=>fn,IsInf:()=>mn,IsNan:()=>gn,KernelBackend:()=>U,LRN:()=>En,LRNGrad:()=>An,LayerVariable:()=>cN,LayersModel:()=>r_,LeakyRelu:()=>yn,Less:()=>bn,LessEqual:()=>xn,LinSpace:()=>wn,Log:()=>vn,Log1p:()=>kn,LogSoftmax:()=>Cn,LogicalAnd:()=>In,LogicalNot:()=>Sn,LogicalOr:()=>Nn,LogicalXor:()=>Tn,LowerBound:()=>_n,MathBackendWebGL:()=>hX,Max:()=>$n,MaxPool:()=>Fn,MaxPool3D:()=>Mn,MaxPool3DGrad:()=>On,MaxPoolGrad:()=>Dn,MaxPoolWithArgmax:()=>Ln,Maximum:()=>Rn,Mean:()=>zn,Min:()=>Pn,Minimum:()=>Bn,MirrorPad:()=>Wn,Mod:()=>Vn,MomentumOptimizer:()=>Nb,Multinomial:()=>Un,Multiply:()=>Gn,Neg:()=>Hn,NonMaxSuppressionV3:()=>qn,NonMaxSuppressionV4:()=>Kn,NonMaxSuppressionV5:()=>Xn,NotEqual:()=>jn,OP_SCOPE_SUFFIX:()=>ei,OneHot:()=>Zn,OnesLike:()=>Yn,Optimizer:()=>xb,OptimizerConstructors:()=>Wx,Pack:()=>Jn,PadV2:()=>Qn,Pool:()=>er,Pow:()=>tr,Prelu:()=>nr,Prod:()=>rr,RMSPropOptimizer:()=>Tb,RNN:()=>gE,RaggedGather:()=>ar,RaggedRange:()=>sr,RaggedTensorToTensor:()=>ir,Range:()=>or,Rank:()=>ws,Real:()=>lr,RealDiv:()=>Ht,Reciprocal:()=>ur,Reduction:()=>Ty,Relu:()=>hr,Relu6:()=>gr,Reshape:()=>pr,ResizeBilinear:()=>fr,ResizeBilinearGrad:()=>mr,ResizeNearestNeighbor:()=>dr,ResizeNearestNeighborGrad:()=>cr,Reverse:()=>yr,RotateWithOffset:()=>ia,Round:()=>br,Rsqrt:()=>xr,SGDOptimizer:()=>Sb,ScatterNd:()=>wr,SearchSorted:()=>vr,Select:()=>kr,Selu:()=>Ir,Sequential:()=>u_,Sigmoid:()=>_r,Sign:()=>Cr,Sin:()=>Nr,Sinh:()=>Tr,Slice:()=>Sr,Softmax:()=>Dr,Softplus:()=>Er,SpaceToBatchND:()=>Rr,SparseFillEmptyRows:()=>Mr,SparseReshape:()=>Or,SparseSegmentMean:()=>Lr,SparseSegmentSum:()=>zr,SparseToDense:()=>Pr,SplitV:()=>Fr,Sqrt:()=>Ar,Square:()=>Wr,SquaredDifference:()=>Br,Step:()=>aa,StridedSlice:()=>Vr,StringNGrams:()=>Ur,StringSplit:()=>Gr,StringToHashBucketFast:()=>Hr,Sub:()=>jr,Sum:()=>$r,SymbolicTensor:()=>bN,Tan:()=>qr,Tanh:()=>Kr,Tensor:()=>ys,TensorBuffer:()=>ps,Tile:()=>Xr,TopK:()=>Yr,Transform:()=>Zr,Transpose:()=>Jr,Unique:()=>Qr,Unpack:()=>ea,UnsortedSegmentSum:()=>ta,UpperBound:()=>na,Variable:()=>xs,ZerosLike:()=>ra,_FusedMatMul:()=>oa,abs:()=>Qo,acos:()=>tl,acosh:()=>rl,add:()=>Ho,addN:()=>sl,all:()=>ol,any:()=>ul,argMax:()=>pl,argMin:()=>cl,asin:()=>ml,asinh:()=>yl,atan:()=>xl,atan2:()=>vl,atanh:()=>Il,avgPool:()=>jl,avgPool3d:()=>Kl,backend:()=>Vo,backend_util:()=>jx,basicLSTMCell:()=>iu,batchNorm:()=>pu,batchNorm2d:()=>cu,batchNorm3d:()=>mu,batchNorm4d:()=>yu,batchToSpaceND:()=>lu,bincount:()=>xu,booleanMaskAsync:()=>Pm,broadcastArgs:()=>vu,broadcastTo:()=>Iu,broadcast_util:()=>mh,browser:()=>lx,buffer:()=>go,callbacks:()=>FR,cast:()=>bo,ceil:()=>Nu,clipByValue:()=>_u,clone:()=>wo,complex:()=>ri,concat:()=>Yl,concat1d:()=>Au,concat2d:()=>Ru,concat3d:()=>Du,concat4d:()=>Ou,constraints:()=>PN,conv1d:()=>Bu,conv2d:()=>zu,conv2dTranspose:()=>Gu,conv3d:()=>ju,conv3dTranspose:()=>Yu,copyRegisteredKernels:()=>va,cos:()=>Ju,cosh:()=>eh,cosineWindow:()=>sg,cumprod:()=>nh,cumsum:()=>ah,customGrad:()=>Zp,data:()=>qD,denseBincount:()=>ih,deprecationWarn:()=>To,depthToSpace:()=>lh,depthwiseConv2d:()=>hh,deregisterOp:()=>zR,device_util:()=>Us,diag:()=>dh,dilation2d:()=>fh,disableDeprecationWarnings:()=>No,dispose:()=>Ro,disposeVariables:()=>Co,div:()=>Xo,divNoNan:()=>Th,dot:()=>_h,dropout:()=>rg,einsum:()=>Ah,elu:()=>Rh,enableDebugMode:()=>So,enableProdMode:()=>Io,enclosingPowerOfTwo:()=>ag,engine:()=>_o,env:()=>Ue,equal:()=>wh,erf:()=>Dh,euclideanNorm:()=>ip,exp:()=>lp,expandDims:()=>hp,expm1:()=>dp,eye:()=>gp,fft:()=>Yf,fill:()=>Tu,findBackend:()=>Po,findBackendFactory:()=>Bo,floor:()=>bp,floorDiv:()=>qo,forceHalfFloat:()=>cX,fused:()=>lg,gather:()=>wp,gatherND:()=>eg,gather_util:()=>yx,getBackend:()=>Lo,getGradient:()=>ma,getKernel:()=>fa,getKernelsForBackend:()=>ga,getThreadsCount:()=>Ate,gpgpu_util:()=>uq,grad:()=>jp,grads:()=>qp,greater:()=>kp,greaterEqual:()=>Sp,ifft:()=>Jf,imag:()=>Tp,image:()=>hb,inTopKAsync:()=>og,initializers:()=>eT,input:()=>d_,io:()=>Eb,irfft:()=>em,isFinite:()=>_p,isInf:()=>Ap,isNaN:()=>Rp,keep:()=>Fo,kernel_impls:()=>Jw,layers:()=>yT,leakyRelu:()=>Dp,less:()=>Op,lessEqual:()=>zp,linalg:()=>pb,linspace:()=>Pp,loadGraphModel:()=>UD,loadGraphModelSync:()=>GD,loadLayersModel:()=>i_,localResponseNormalization:()=>Wp,log:()=>Up,log1p:()=>Hp,logSigmoid:()=>ad,logSoftmax:()=>ld,logSumExp:()=>hd,logicalAnd:()=>dd,logicalNot:()=>fd,logicalOr:()=>gd,logicalXor:()=>bd,losses:()=>db,lowerBound:()=>kd,matMul:()=>Jl,math:()=>ax,max:()=>Gh,maxPool:()=>Sd,maxPool3d:()=>Td,maxPoolWithArgmax:()=>_d,maximum:()=>Ad,mean:()=>Rd,memory:()=>Eo,meshgrid:()=>Md,metrics:()=>sR,min:()=>jh,minimum:()=>Ld,mirrorPad:()=>Pd,mod:()=>Wd,model:()=>h_,models:()=>vR,moments:()=>Ud,movingAverage:()=>Um,mul:()=>Zo,multiRNNCell:()=>Hd,multinomial:()=>qd,neg:()=>ed,nextFrame:()=>Gx,norm:()=>ap,notEqual:()=>Xd,oneHot:()=>Zd,ones:()=>Dd,onesLike:()=>Qd,op:()=>ti,outerProduct:()=>tc,pad:()=>rc,pad1d:()=>sc,pad2d:()=>oc,pad3d:()=>uc,pad4d:()=>pc,pool:()=>yc,pow:()=>Kh,prelu:()=>xc,print:()=>vo,prod:()=>vc,profile:()=>Ao,raggedGather:()=>Ic,raggedRange:()=>Nc,raggedTensorToTensor:()=>Cc,rand:()=>Ec,randomGamma:()=>Yc,randomNormal:()=>Jc,randomStandardNormal:()=>ef,randomUniform:()=>nf,range:()=>rf,ready:()=>Oo,real:()=>sf,reciprocal:()=>lf,registerBackend:()=>Wo,registerCallbackConstructor:()=>c_,registerGradient:()=>ba,registerKernel:()=>ya,registerOp:()=>OR,regularizers:()=>kR,relu:()=>hf,relu6:()=>df,removeBackend:()=>zo,reshape:()=>Gl,reverse:()=>ff,reverse1d:()=>gf,reverse2d:()=>bf,reverse3d:()=>wf,reverse4d:()=>kf,rfft:()=>am,round:()=>Sf,rsqrt:()=>Tf,scalar:()=>Xh,scatterND:()=>Xm,scatter_util:()=>Gm,searchSorted:()=>vd,selu:()=>_f,separableConv2d:()=>Af,sequential:()=>p_,serialization:()=>mb,setBackend:()=>Mo,setPlatform:()=>Uo,setThreadsCount:()=>Ete,setWasmPath:()=>Nte,setWasmPaths:()=>Tte,setWebGLContext:()=>PG,setdiff1dAsync:()=>Rf,sigmoid:()=>eu,sign:()=>Df,signal:()=>ub,sin:()=>Of,sinh:()=>zf,slice:()=>nu,slice1d:()=>Bf,slice2d:()=>Vf,slice3d:()=>Gf,slice4d:()=>jf,slice_util:()=>xx,softmax:()=>Kf,softplus:()=>nd,spaceToBatchND:()=>cc,sparse:()=>cb,sparseToDense:()=>Jm,spectral:()=>lb,split:()=>nm,sqrt:()=>Zh,square:()=>Qh,squaredDifference:()=>im,squeeze:()=>lm,stack:()=>hm,step:()=>dm,stridedSlice:()=>fm,string:()=>fb,sub:()=>id,sum:()=>tp,sumOutType:()=>_s,tan:()=>gm,tanh:()=>au,tensor:()=>si,tensor1d:()=>ym,tensor2d:()=>bm,tensor3d:()=>xm,tensor4d:()=>wm,tensor5d:()=>vm,tensor6d:()=>km,tensor_util:()=>Ns,test_util:()=>$c,tidy:()=>$o,tile:()=>fp,time:()=>Do,topk:()=>Sm,train:()=>Vx,transpose:()=>Wm,truncatedNormal:()=>Tm,unique:()=>_m,unregisterGradient:()=>wa,unregisterKernel:()=>xa,unsortedSegmentSum:()=>Am,unstack:()=>Rm,upcastType:()=>Cs,upperBound:()=>Fm,util:()=>Ia,valueAndGrad:()=>Kp,valueAndGrads:()=>Xp,variable:()=>Dm,variableGrads:()=>Yp,version:()=>zte,version_converter:()=>jD,version_core:()=>Bx,version_layers:()=>CC,version_wasm:()=>$te,version_webgl:()=>dX,webgl:()=>fX,webgl_util:()=>FG,where:()=>kh,whereAsync:()=>Lm,zeros:()=>Fd,zerosLike:()=>Sh});var p=Object.create,d=Object.defineProperty,c=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var n in t)d(e,n,{get:t[n],enumerable:!0})},x=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of f(t))!g.call(e,a)&&a!==n&&d(e,a,{get:()=>t[a],enumerable:!(r=c(t,a))||r.enumerable});return e},w=(e,t,n)=>(n=null!=e?p(m(e)):{},x(!t&&e&&e.__esModule?n:d(n,"default",{value:e,enumerable:!0}),e)),v=y((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(_){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(r=i[e],r)?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(r=s[e],r)?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n))}function l(e,t){if(isNaN(e))return t?w:x;if(t){if(e<0)return w;if(e>=g)return N}else{if(e<=-y)return T;if(e+1>=y)return S}return e<0?l(-e,t).neg():u(e%m|0,e/m|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var h=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"==typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var a=l(h(n,8)),s=x,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(h(n,o));s=s.mul(d).add(l(u))}else s=s.mul(a),s=s.add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=p,r.fromValue=d;var c=65536,f=1<<24,m=c*c,g=m*m,y=g/2,b=o(f),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var v=o(1);r.ONE=v;var k=o(1,!0);r.UONE=k;var I=o(-1);r.NEG_ONE=I;var S=u(-1,2147483647,!1);r.MAX_VALUE=S;var N=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=N;var T=u(0,-2147483648,!1);r.MIN_VALUE=T;var C=r.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},C.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(h(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=s.sub(o.mul(a)).toInt()>>>0,p=u.toString(e);if(s=o,s.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(v)},C.neg=C.negate,C.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,h=65535&e.low,p=0,c=0,f=0,m=0;return m+=s+h,f+=m>>>16,m&=65535,f+=r+l,c+=f>>>16,f&=65535,c+=n+o,p+=c>>>16,c&=65535,p+=t+i,p&=65535,u(f<<16|m,p<<16|c,this.unsigned)},C.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return x;if(a(e)||(e=d(e)),n){var t=n.mul(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(e.isZero())return x;if(this.eq(T))return e.isOdd()?T:x;if(e.eq(T))return this.isOdd()?T:x;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return l(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,h=e.high>>>16,p=65535&e.high,c=e.low>>>16,f=65535&e.low,m=0,g=0,y=0,w=0;return w+=o*f,y+=w>>>16,w&=65535,y+=i*f,g+=y>>>16,y&=65535,y+=o*c,g+=y>>>16,y&=65535,g+=s*f,m+=g>>>16,g&=65535,g+=i*c,m+=g>>>16,g&=65535,g+=o*p,m+=g>>>16,g&=65535,m+=r*f+s*c+i*p+o*h,m&=65535,u(y<<16|w,m<<16|g,this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var r,s,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return k;i=w}else{if(this.eq(T)){if(e.eq(v)||e.eq(I))return T;if(e.eq(T))return v;var o=this.shr(1);return r=o.div(e).shl(1),r.eq(x)?e.isNegative()?v:I:(s=this.sub(e.mul(r)),i=r.add(s.div(e)),i)}if(e.eq(T))return this.unsigned?w:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=x}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var p=Math.ceil(Math.log(r)/Math.LN2),c=p<=48?1:h(2,p-48),f=l(r),m=f.mul(e);m.isNegative()||m.gt(s);)r-=c,f=l(r,this.unsigned),m=f.mul(e);f.isZero()&&(f=v),i=i.add(f),s=s.sub(m)}return i},C.div=C.divide,C.modulo=function(e){if(a(e)||(e=d(e)),n){var t=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return u(n>>>e|t<<32-e,t>>>e,this.unsigned)}return u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),k=y(()=>{}),I=y(()=>{}),S=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n=i();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}function i(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),N=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),T=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),C=y((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24,e=r[a+1&7],n^=e^e>>>10,e=r[a+3&7],n^=e^e>>>3,e=r[a+4&7],n^=e^e<<7,e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},n(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),_=y((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},n(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),E=y((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)}),A=y(()=>{}),$=y((e,t)=>{(function(e,r,a){var s,i=256,o=6,l=52,u="random",h=a.pow(i,o),p=a.pow(2,l),d=2*p,c=i-1;function f(e,t,n){var s=[];t=1==t?{entropy:!0}:t||{};var l=b(y(t.entropy?[e,w(r)]:null==e?x():e,3),s),c=new m(s),f=function(){for(var e=c.g(o),t=h,n=0;e<p;)e=(e+n)*i,t*=i,n=c.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return f.int32=function(){return 0|c.g(4)},f.quick=function(){return c.g(4)/4294967296},f.double=f,b(w(c.S),r),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,c),e.state=function(){return g(c,{})}),n?(a[u]=e,t):e})(f,l,"global"in t?t.global:this==a,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return w(t)}function x(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),w(t)}catch(o){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,w(r)]}}function w(e){return String.fromCharCode.apply(0,e)}if(b(a.random(),r),"object"==typeof t&&t.exports){t.exports=f;try{s=A()}catch(v){}}else"function"==typeof define&&n("3c35")?define((function(){return f})):a["seed"+u]=f})("undefined"!=typeof self?self:e,[],Math)}),R=y((e,t)=>{var n=S(),r=N(),a=T(),s=C(),i=_(),o=E(),l=$();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),F=y(()=>{}),D=y(()=>{}),M=y(()=>{}),O=y(()=>{}),L=y(()=>{}),z=y(()=>{}),P=y((t,i)=>{var o=(()=>{var t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return t=t||e,function(e){function n(){return B.buffer!=H&&ne(B.buffer),j}function i(){return B.buffer!=H&&ne(B.buffer),q}function o(){return B.buffer!=H&&ne(B.buffer),K}function l(){return B.buffer!=H&&ne(B.buffer),X}function u(){return B.buffer!=H&&ne(B.buffer),Y}e=e||{};var h,p,d,c="undefined"!=typeof e?e:{};c.ready=new Promise((function(e,t){h=e,p=t})),"undefined"!=typeof r&&r.listeners&&(d={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var f,m,g,y=Object.assign({},c),b=[],x=(e,t)=>{throw t},w="object"==typeof window,v="function"==typeof importScripts,k="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,I=c.ENVIRONMENT_IS_PTHREAD||!1,S="";function N(e){return c.locateFile?c.locateFile(e,S):S+e}function T(e){e instanceof Ee||R("exiting due to exception: "+e)}if(k){var C=D(),_=M();let e;S=v?_.dirname(S)+"/":a+"/",f=(e,t)=>(e=Se(e)?new URL(e):_.normalize(e),C.readFileSync(e,t?void 0:"utf8")),g=e=>{var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),t},m=(e,t,n)=>{e=Se(e)?new URL(e):_.normalize(e),C.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),b=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof Ee))throw e})),r.on("unhandledRejection",(function(e){throw e})),x=(e,t)=>{if(le())throw r.exitCode=e,t;T(t),r.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{e=O()}catch(Gt){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Gt}s.Worker=e.Worker}else(w||v)&&(v?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),"undefined"!=typeof t&&t&&(S=t),S=0!==S.indexOf("blob:")?S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):"",k||(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},v&&(g=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}),e=>document.title=e);k&&"undefined"==typeof performance&&(s.performance=L().performance);var E=console.log.bind(console),A=console.warn.bind(console);k&&(E=e=>C.writeSync(1,e+"\n"),A=e=>C.writeSync(2,e+"\n"));var $=c.print||E,R=c.printErr||A;Object.assign(c,y),y=null,c.arguments&&(b=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(x=c.quit);var F;Atomics.load,Atomics.store,Atomics.compareExchange;c.wasmBinary&&(F=c.wasmBinary);var P=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var B,W,V,U=!1;function G(e,t){e||we(t)}var H,j,q,K,X,Y,Z="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function J(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&Z)return Z.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function Q(e,t){return e?J(i(),e,t):""}function ee(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function te(e,t,n){return ee(e,i(),t,n)}function ne(e){H=e,c.HEAP8=j=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=K=new Int32Array(e),c.HEAPU8=q=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=X=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=Y=new Float64Array(e)}I&&(H=c.buffer);var re=c.INITIAL_MEMORY||16777216;if(I)B=c.wasmMemory,H=c.buffer;else if(c.wasmMemory)B=c.wasmMemory;else if(B=new WebAssembly.Memory({initial:re/65536,maximum:32768,shared:!0}),!(B.buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),k&&R("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");B&&(H=B.buffer),re=H.byteLength,ne(H);var ae,se=[],ie=[],oe=[];function le(){return P}function ue(){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)de(c.preRun.shift());Pe(se)}function he(){!0,!I&&Pe(ie)}function pe(){if(!I){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)fe(c.postRun.shift());Pe(oe)}}function de(e){se.unshift(e)}function ce(e){ie.unshift(e)}function fe(e){oe.unshift(e)}var me=0,ge=null,ye=null;function be(e){me++,c.monitorRunDependencies&&c.monitorRunDependencies(me)}function xe(e){if(me--,c.monitorRunDependencies&&c.monitorRunDependencies(me),0==me&&(null!==ge&&(clearInterval(ge),ge=null),ye)){var t=ye;ye=null,t()}}function we(e){c.onAbort&&c.onAbort(e),e="Aborted("+e+")",R(e),U=!0,V=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw p(t),t}var ve,ke="data:application/octet-stream;base64,";function Ie(e){return e.startsWith(ke)}function Se(e){return e.startsWith("file://")}function Ne(e){try{if(e==ve&&F)return new Uint8Array(F);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(Gt){we(Gt)}}function Te(){if(!F&&(w||v)){if("function"==typeof fetch&&!Se(ve))return fetch(ve,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ve+"'";return e.arrayBuffer()})).catch((function(){return Ne(ve)}));if(m)return new Promise((function(e,t){m(ve,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ne(ve)}))}function Ce(){var e={env:$t,wasi_snapshot_preview1:$t};function t(e,t){var n=e.exports;if(c.asm=n,He(c.asm._emscripten_tls_init),ae=c.asm.__indirect_function_table,ce(c.asm.__wasm_call_ctors),W=t,!I){var r=ze.unusedWorkers.length;ze.unusedWorkers.forEach((function(e){ze.loadWasmModuleToWorker(e,(function(){--r||xe("wasm-instantiate")}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),we(e)}))}function a(){return F||"function"!=typeof WebAssembly.instantiateStreaming||Ie(ve)||Se(ve)||k||"function"!=typeof fetch?r(n):fetch(ve,{credentials:"same-origin"}).then((function(t){var a=WebAssembly.instantiateStreaming(t,e);return a.then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))}if(I||be("wasm-instantiate"),c.instantiateWasm)try{var s=c.instantiateWasm(e,t);return s}catch(i){R("Module.instantiateWasm callback failed with error: "+i),p(i)}return a().catch(p),{}}ve="tfjs-backend-wasm-threaded-simd.wasm",Ie(ve)||(ve=N(ve));var _e={};function Ee(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ae(e){var t=ze.pthreads[e];delete ze.pthreads[e],t.terminate(),Ot(e),ze.runningWorkers.splice(ze.runningWorkers.indexOf(t),1),t.pthread_ptr=0}function $e(e){var t=ze.pthreads[e];t.postMessage({cmd:"cancel"})}function Re(e){var t=ze.pthreads[e];G(t),ze.returnWorkerToPool(t)}function Fe(e){var t=ze.getNewWorker();if(!t)return 6;ze.runningWorkers.push(t),ze.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{k&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function De(e){if(I)return dt(1,1,e);V=e,le()||(ze.terminateAllThreads(),c.onExit&&c.onExit(e),U=!0),x(e,new Ee(e))}function Me(e,t){if(V=e,!t&&I)throw We(e),"unwind";De(e)}var Oe=Me;function Le(e){if(e instanceof Ee||"unwind"==e)return V;x(1,e)}var ze={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){I?ze.initWorker():ze.initMainThread()},initMainThread:function(){for(var e=8;e--;)ze.allocateUnusedWorker()},initWorker:function(){P=!1},setExitStatus:function(e){V=e},terminateAllThreads:function(){for(var e of Object.values(ze.pthreads))ze.returnWorkerToPool(e);for(var e of ze.unusedWorkers)e.terminate();ze.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete ze.pthreads[t],ze.unusedWorkers.push(e),ze.runningWorkers.splice(ze.runningWorkers.indexOf(e),1),e.pthread_ptr=0,k&&e.unref(),Ot(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){ze.tlsInitFunctions.forEach(e=>e())},loadWasmModuleToWorker:function(e,n){e.onmessage=t=>{var r=t.data,a=r.cmd;if(e.pthread_ptr&&(ze.currentProxiedOperationCallerThread=e.pthread_ptr),r.targetThread&&r.targetThread!=Rt()){var s=ze.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):R('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ze.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===a?et(r.queue):"spawnThread"===a?Fe(r):"cleanupThread"===a?Re(r.thread):"killThread"===a?Ae(r.thread):"cancelThread"===a?$e(r.thread):"loaded"===a?(e.loaded=!0,k&&e.unref(),n&&n(e),e.runPthread&&e.runPthread()):"print"===a?$("Thread "+r.threadId+": "+r.text):"printErr"===a?R("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"callHandler"===a?c[r.handler](...r.args):a&&R("worker sent an unknown command "+a),ze.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{var t="worker sent an error!";throw R(t+" "+e.filename+":"+e.lineno+": "+e.message),e},k&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){})));var r=[],a=["onExit","onAbort","print","printErr"];for(var s of a)c.hasOwnProperty(s)&&r.push(s);e.postMessage({cmd:"load",handlers:r,urlOrBlob:c.mainScriptUrlOrBlob||t,wasmMemory:B,wasmModule:W})},allocateUnusedWorker:function(){var e,t=N("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),ze.unusedWorkers.push(e)},getNewWorker:function(){return 0==ze.unusedWorkers.length&&(ze.allocateUnusedWorker(),ze.loadWasmModuleToWorker(ze.unusedWorkers[0])),ze.unusedWorkers.pop()}};function Pe(e){for(;e.length>0;)e.shift()(c)}function Be(){var e=Rt(),t=o()[e+52>>2],n=o()[e+56>>2],r=t-n;zt(t,r),Bt(t)}function We(e){if(I)return dt(2,0,e);try{Oe(e)}catch(Gt){Le(Gt)}}c.PThread=ze,c.establishStackSpace=Be;var Ve=[];function Ue(e){var t=Ve[e];return t||(e>=Ve.length&&(Ve.length=e+1),Ve[e]=t=ae.get(e)),t}function Ge(e,t){var n=Ue(e)(t);le()?ze.setExitStatus(n):Lt(n)}function He(e){ze.tlsInitFunctions.push(e)}function je(e){Ft(e,!v,1,!w),ze.threadInitTLS()}function qe(e){I?postMessage({cmd:"cleanupThread",thread:e}):Re(e)}function Ke(e,t,n,r){return I?dt(3,1,e,t,n,r):Xe(e,t,n,r)}function Xe(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[],s=0;if(I&&(0===a.length||s))return Ke(e,t,n,r);if(s)return s;var i={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return I?(i.cmd="spawnThread",postMessage(i,a),0):Fe(i)}function Ye(){return 65536}c.invokeEntryPoint=Ge;var Ze,Je=!0;function Qe(){return Je}function et(e){Atomics.store(o(),e>>2,1),Rt()&&Mt(e),Atomics.compareExchange(o(),e>>2,1,0)}function tt(e,t,n,r){if(e==t)setTimeout(()=>et(r));else if(I)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=ze.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1}function nt(e,t,n){return-1}function rt(){we("")}function at(e){at.shown||(at.shown={}),at.shown[e]||(at.shown[e]=1,k&&(e="warning: "+e),R(e))}function st(){k||v||at("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function it(){return Date.now()}function ot(){return 2147483648}function lt(){return ot()}function ut(e,t,n){i().copyWithin(e,t,t+n)}function ht(){return k?z().cpus().length:navigator.hardwareConcurrency}function pt(e){var t=Pt(),n=e();return Bt(t),n}function dt(e,t){var n=arguments.length-2,r=arguments;return pt(()=>{for(var a=n,s=Wt(8*a),i=s>>3,o=0;o<n;o++){var l=r[2+o];u()[i+o]=l}return Dt(e,a,s,t)})}c.executeNotifiedProxyingQueue=et,Ze=k?()=>{var e=r.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var ct=[];function ft(e,t,n){ct.length=t;for(var r=n>>3,a=0;a<t;a++)ct[a]=u()[r+a];var s=e<0,i=s?_e[-e-1]:At[e];return i.apply(null,ct)}function mt(e){try{return B.grow(e-H.byteLength+65535>>>16),ne(B.buffer),1}catch(Gt){}}function gt(e){var t=i().length;if(e>>>=0,e<=t)return!1;var n=ot();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);s=Math.min(s,e+100663296);var o=Math.min(n,r(Math.max(e,s),65536)),l=mt(o);if(l)return!0}return!1}function yt(){throw"unwind"}function bt(e){return I?dt(4,1,e):52}function xt(e,t,n,r,a){return I?dt(5,1,e,t,n,r,a):70}var wt=[null,[],[]];function vt(e,t){var n=wt[e];0===t||10===t?((1===e?$:R)(J(n,0)),n.length=0):n.push(t)}function kt(e,t,n,r){if(I)return dt(6,1,e,t,n,r);for(var a=0,s=0;s<n;s++){var o=l()[t>>2],u=l()[t+4>>2];t+=8;for(var h=0;h<u;h++)vt(e,i()[o+h]);a+=u}return l()[r>>2]=a,0}function It(e){var t=c["_"+e];return t}function St(e,t){n().set(e,t)}function Nt(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=Wt(n),te(e,t,n)}return t},array:e=>{var t=Wt(e.length);return St(e,t),t}};function i(e){return"string"===t?Q(e):"boolean"===t?Boolean(e):e}var o=It(e),l=[],u=0;if(r)for(var h=0;h<r.length;h++){var p=s[n[h]];p?(0===u&&(u=Pt()),l[h]=p(r[h])):l[h]=r[h]}var d=o.apply(null,l);function c(e){return 0!==u&&Bt(u),i(e)}return d=c(d),d}function Tt(e,t,n,r){n=n||[];var a=n.every(e=>"number"===e||"boolean"===e),s="string"!==t;return s&&a&&!r?It(e):function(){return Nt(e,t,n,arguments,r)}}ze.init();var Ct,_t,Et,At=[null,De,We,Ke,bt,xt,kt],$t={__emscripten_init_main_thread_js:je,__emscripten_thread_cleanup:qe,__pthread_create_js:Xe,_emscripten_default_pthread_stack_size:Ye,_emscripten_get_now_is_monotonic:Qe,_emscripten_notify_task_queue:tt,_emscripten_set_offscreencanvas_size:nt,abort:rt,emscripten_check_blocking_allowed:st,emscripten_date_now:it,emscripten_get_heap_max:lt,emscripten_get_now:Ze,emscripten_memcpy_big:ut,emscripten_num_logical_cores:ht,emscripten_receive_on_main_thread_js:ft,emscripten_resize_heap:gt,emscripten_unwind_to_js_event_loop:yt,exit:Oe,fd_close:bt,fd_seek:xt,fd_write:kt,memory:B||c.wasmMemory},Rt=(Ce(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.__wasm_call_ctors).apply(null,arguments)},c._init=function(){return(c._init=c.asm.init).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.init_with_threads_count).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.get_threads_count).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.register_tensor).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.dispose_data).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.dispose).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.Abs).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.Add).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.AddN).apply(null,arguments)},c._All=function(){return(c._All=c.asm.All).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.Any).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.ArgMax).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.AvgPool).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.BatchMatMul).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.Ceil).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.ClipByValue).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Conv2D).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.Conv2DBackpropInput).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.Cos).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.Cosh).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.CropAndResize).apply(null,arguments)},c._Cumprod=function(){return(c._Cumprod=c.asm.Cumprod).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Cumsum).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.DepthToSpace).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.DepthwiseConv2dNative).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.Elu).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Equal).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Exp).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.FlipLeftRight).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.Floor).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.FloorDiv).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.FusedBatchNorm).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.FusedConv2D).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.FusedDepthwiseConv2D).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.Gather).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.GatherNd).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.Greater).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.GreaterEqual).apply(null,arguments)},c._IsNan=function(){return(c._IsNan=c.asm.IsNan).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.LeakyRelu).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.Less).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.LessEqual).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.Log).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.LogicalAnd).apply(null,arguments)},c._LogicalNot=function(){return(c._LogicalNot=c.asm.LogicalNot).apply(null,arguments)},c._LogicalOr=function(){return(c._LogicalOr=c.asm.LogicalOr).apply(null,arguments)},c._LogicalXor=function(){return(c._LogicalXor=c.asm.LogicalXor).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.Max).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.MaxPool).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.Maximum).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.Mean).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.Min).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.Minimum).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.MirrorPad).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.Multiply).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.Neg).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.NonMaxSuppressionV3).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.NonMaxSuppressionV4).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.NonMaxSuppressionV5).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.NotEqual).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.OneHot).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.PadV2).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Pow).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Prelu).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Prod).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.RealDiv).apply(null,arguments)},c._Reciprocal=function(){return(c._Reciprocal=c.asm.Reciprocal).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Relu).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Relu6).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.ResizeBilinear).apply(null,arguments)},c._ResizeNearestNeighbor=function(){return(c._ResizeNearestNeighbor=c.asm.ResizeNearestNeighbor).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Reverse).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.RotateWithOffset).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Round).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Rsqrt).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.ScatterNd).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.SelectV2).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Sigmoid).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Sin).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Softmax).apply(null,arguments)},c._SparseFillEmptyRows=function(){return(c._SparseFillEmptyRows=c.asm.SparseFillEmptyRows).apply(null,arguments)},c._SparseReshape=function(){return(c._SparseReshape=c.asm.SparseReshape).apply(null,arguments)},c._SparseSegmentReduction=function(){return(c._SparseSegmentReduction=c.asm.SparseSegmentReduction).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sqrt).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Square).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.SquaredDifference).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Step).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.StridedSlice).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Sub).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Sum).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Tan).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Tanh).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.Tile).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.TopK).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.Transform).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.Transpose).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm._FusedMatMul).apply(null,arguments)},c._malloc=function(){return(c._malloc=c.asm.malloc).apply(null,arguments)},c._free=function(){return(c._free=c.asm.free).apply(null,arguments)},c.__emscripten_tls_init=function(){return(c.__emscripten_tls_init=c.asm._emscripten_tls_init).apply(null,arguments)},c._pthread_self=function(){return(Rt=c._pthread_self=c.asm.pthread_self).apply(null,arguments)}),Ft=(c.___errno_location=function(){return(c.___errno_location=c.asm.__errno_location).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Ft=c.__emscripten_thread_init=c.asm._emscripten_thread_init).apply(null,arguments)}),Dt=(c.__emscripten_thread_crashed=function(){return(c.__emscripten_thread_crashed=c.asm._emscripten_thread_crashed).apply(null,arguments)},c._emscripten_main_thread_process_queued_calls=function(){return(c._emscripten_main_thread_process_queued_calls=c.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},c._emscripten_main_browser_thread_id=function(){return(c._emscripten_main_browser_thread_id=c.asm.emscripten_main_browser_thread_id).apply(null,arguments)},c._emscripten_run_in_main_runtime_thread_js=function(){return(Dt=c._emscripten_run_in_main_runtime_thread_js=c.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Mt=(c._emscripten_dispatch_to_thread_=function(){return(c._emscripten_dispatch_to_thread_=c.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},c.__emscripten_proxy_execute_task_queue=function(){return(Mt=c.__emscripten_proxy_execute_task_queue=c.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Ot=c.__emscripten_thread_free_data=function(){return(Ot=c.__emscripten_thread_free_data=c.asm._emscripten_thread_free_data).apply(null,arguments)},Lt=c.__emscripten_thread_exit=function(){return(Lt=c.__emscripten_thread_exit=c.asm._emscripten_thread_exit).apply(null,arguments)},zt=c._emscripten_stack_set_limits=function(){return(zt=c._emscripten_stack_set_limits=c.asm.emscripten_stack_set_limits).apply(null,arguments)},Pt=c.stackSave=function(){return(Pt=c.stackSave=c.asm.stackSave).apply(null,arguments)},Bt=c.stackRestore=function(){return(Bt=c.stackRestore=c.asm.stackRestore).apply(null,arguments)},Wt=c.stackAlloc=function(){return(Wt=c.stackAlloc=c.asm.stackAlloc).apply(null,arguments)};c.dynCall_iijjiiii=function(){return(c.dynCall_iijjiiii=c.asm.dynCall_iijjiiii).apply(null,arguments)},c.dynCall_jiji=function(){return(c.dynCall_jiji=c.asm.dynCall_jiji).apply(null,arguments)};function Vt(e){if(e=e||b,!(me>0)){if(I)return h(c),he(),void startWorker(c);ue(),me>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Ct||(Ct=!0,c.calledRun=!0,!U&&(he(),h(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),pe()))}}if(c.keepRuntimeAlive=le,c.wasmMemory=B,c.cwrap=Tt,c.ExitStatus=Ee,c.PThread=ze,ye=function e(){Ct||Vt(),Ct||(ye=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();if(Vt(),d&&(_t={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Et=WasmBackendModule;else{if("undefined"==typeof e)throw new Error("Could not find wasm module in post.js");Et=e}if(_t){var Ut=Et._dispose;Et._dispose=function(){Ut(),_t.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),_t.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready}})();"object"==typeof t&&"object"==typeof i?i.exports=o:"function"==typeof define&&n("3c35")?define([],(function(){return o})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=o)}),B=y((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'}),W=y((t,s)=>{var i=(()=>{var t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return t=t||e,function(e){e=e||{};var n,s,i,o="undefined"!=typeof e?e:{};o.ready=new Promise((function(e,t){n=e,s=t})),"undefined"!=typeof r&&r.listeners&&(i={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var l,u,h,p=Object.assign({},o),d=[],c="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof r&&"object"==typeof r.versions&&"string"==typeof r.versions.node,g="";function y(e){return o.locateFile?o.locateFile(e,g):g+e}function b(e){e instanceof le||k("exiting due to exception: "+e)}if(m){var x=D(),w=M();g=f?w.dirname(g)+"/":a+"/",l=(e,t)=>(e=ae(e)?new URL(e):w.normalize(e),x.readFileSync(e,t?void 0:"utf8")),h=e=>{var t=l(e,!0);return t.buffer||(t=new Uint8Array(t)),t},u=(e,t,n)=>{e=ae(e)?new URL(e):w.normalize(e),x.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),d=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),r.on("unhandledRejection",(function(e){throw e})),(e,t)=>{if(V())throw r.exitCode=e,t;b(t),r.exit(e)},o.inspect=function(){return"[Emscripten Module object]"}}else(c||f)&&(f?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),t&&(g=t),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),u=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)},e=>document.title=e);var v=o.print||console.log.bind(console),k=o.printErr||console.warn.bind(console);Object.assign(o,p),p=null,o.arguments&&(d=o.arguments),o.thisProgram&&o.thisProgram,o.quit&&o.quit;var I;o.wasmBinary&&(I=o.wasmBinary);var S=o.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var N,T=!1;var C,_,E,A,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&$)return $.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function F(e,t){return e?R(E,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function L(e,t,n){return O(e,E,t,n)}function z(e){C=e,o.HEAP8=_=new Int8Array(e),o.HEAP16=new Int16Array(e),o.HEAP32=new Int32Array(e),o.HEAPU8=E=new Uint8Array(e),o.HEAPU16=new Uint16Array(e),o.HEAPU32=A=new Uint32Array(e),o.HEAPF32=new Float32Array(e),o.HEAPF64=new Float64Array(e)}o.INITIAL_MEMORY;var P=[],B=[],W=[];function V(){return S}function U(){if(o.preRun)for("function"==typeof o.preRun&&(o.preRun=[o.preRun]);o.preRun.length;)j(o.preRun.shift());ue(P)}function G(){!0,ue(B)}function H(){if(o.postRun)for("function"==typeof o.postRun&&(o.postRun=[o.postRun]);o.postRun.length;)K(o.postRun.shift());ue(W)}function j(e){P.unshift(e)}function q(e){B.unshift(e)}function K(e){W.unshift(e)}var X=0,Y=null,Z=null;function J(e){X++,o.monitorRunDependencies&&o.monitorRunDependencies(X)}function Q(e){if(X--,o.monitorRunDependencies&&o.monitorRunDependencies(X),0==X&&(null!==Y&&(clearInterval(Y),Y=null),Z)){var t=Z;Z=null,t()}}function ee(e){o.onAbort&&o.onAbort(e),e="Aborted("+e+")",k(e),T=!0,1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw s(t),t}var te,ne="data:application/octet-stream;base64,";function re(e){return e.startsWith(ne)}function ae(e){return e.startsWith("file://")}function se(e){try{if(e==te&&I)return new Uint8Array(I);if(h)return h(e);throw"both async and sync fetching of the wasm failed"}catch(t){ee(t)}}function ie(){if(!I&&(c||f)){if("function"==typeof fetch&&!ae(te))return fetch(te,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+te+"'";return e.arrayBuffer()})).catch((function(){return se(te)}));if(u)return new Promise((function(e,t){u(te,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return se(te)}))}function oe(){var e={env:_e,wasi_snapshot_preview1:_e};function t(e,t){var n=e.exports;o.asm=n,N=o.asm.memory,z(N.buffer),o.asm.__indirect_function_table,q(o.asm.__wasm_call_ctors),Q("wasm-instantiate")}function n(e){t(e.instance)}function r(t){return ie().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),ee(e)}))}function a(){return I||"function"!=typeof WebAssembly.instantiateStreaming||re(te)||ae(te)||m||"function"!=typeof fetch?r(n):fetch(te,{credentials:"same-origin"}).then((function(t){var a=WebAssembly.instantiateStreaming(t,e);return a.then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))}if(J("wasm-instantiate"),o.instantiateWasm)try{var i=o.instantiateWasm(e,t);return i}catch(l){k("Module.instantiateWasm callback failed with error: "+l),s(l)}return a().catch(s),{}}function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){for(;e.length>0;)e.shift()(o)}function he(){ee("")}function pe(){return 2147483648}function de(){return pe()}function ce(e,t,n){E.copyWithin(e,t,t+n)}function fe(e){try{return N.grow(e-C.byteLength+65535>>>16),z(N.buffer),1}catch(t){}}function me(e){var t=E.length;e>>>=0;var n=pe();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);s=Math.min(s,e+100663296);var i=Math.min(n,r(Math.max(e,s),65536)),o=fe(i);if(o)return!0}return!1}te="tfjs-backend-wasm.wasm",re(te)||(te=y(te));function ge(e){return 52}function ye(e,t,n,r,a){return 70}var be=[null,[],[]];function xe(e,t){var n=be[e];0===t||10===t?((1===e?v:k)(R(n,0)),n.length=0):n.push(t)}function we(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=A[t>>2],o=A[t+4>>2];t+=8;for(var l=0;l<o;l++)xe(e,E[i+l]);a+=o}return A[r>>2]=a,0}function ve(e){var t=o["_"+e];return t}function ke(e,t){_.set(e,t)}function Ie(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=$e(n),L(e,t,n)}return t},array:e=>{var t=$e(e.length);return ke(e,t),t}};function i(e){return"string"===t?F(e):"boolean"===t?Boolean(e):e}var o=ve(e),l=[],u=0;if(r)for(var h=0;h<r.length;h++){var p=s[n[h]];p?(0===u&&(u=Ee()),l[h]=p(r[h])):l[h]=r[h]}var d=o.apply(null,l);function c(e){return 0!==u&&Ae(u),i(e)}return d=c(d),d}function Se(e,t,n,r){n=n||[];var a=n.every(e=>"number"===e||"boolean"===e),s="string"!==t;return s&&a&&!r?ve(e):function(){return Ie(e,t,n,arguments,r)}}var Ne,Te,Ce,_e={abort:he,emscripten_get_heap_max:de,emscripten_memcpy_big:ce,emscripten_resize_heap:me,fd_close:ge,fd_seek:ye,fd_write:we},Ee=(oe(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.__wasm_call_ctors).apply(null,arguments)},o._init=function(){return(o._init=o.asm.init).apply(null,arguments)},o._init_with_threads_count=function(){return(o._init_with_threads_count=o.asm.init_with_threads_count).apply(null,arguments)},o._get_threads_count=function(){return(o._get_threads_count=o.asm.get_threads_count).apply(null,arguments)},o._register_tensor=function(){return(o._register_tensor=o.asm.register_tensor).apply(null,arguments)},o._dispose_data=function(){return(o._dispose_data=o.asm.dispose_data).apply(null,arguments)},o._dispose=function(){return(o._dispose=o.asm.dispose).apply(null,arguments)},o._Abs=function(){return(o._Abs=o.asm.Abs).apply(null,arguments)},o._Add=function(){return(o._Add=o.asm.Add).apply(null,arguments)},o._AddN=function(){return(o._AddN=o.asm.AddN).apply(null,arguments)},o._All=function(){return(o._All=o.asm.All).apply(null,arguments)},o._Any=function(){return(o._Any=o.asm.Any).apply(null,arguments)},o._ArgMax=function(){return(o._ArgMax=o.asm.ArgMax).apply(null,arguments)},o._AvgPool=function(){return(o._AvgPool=o.asm.AvgPool).apply(null,arguments)},o._BatchMatMul=function(){return(o._BatchMatMul=o.asm.BatchMatMul).apply(null,arguments)},o._Ceil=function(){return(o._Ceil=o.asm.Ceil).apply(null,arguments)},o._ClipByValue=function(){return(o._ClipByValue=o.asm.ClipByValue).apply(null,arguments)},o._Conv2D=function(){return(o._Conv2D=o.asm.Conv2D).apply(null,arguments)},o._Conv2DBackpropInput=function(){return(o._Conv2DBackpropInput=o.asm.Conv2DBackpropInput).apply(null,arguments)},o._Cos=function(){return(o._Cos=o.asm.Cos).apply(null,arguments)},o._Cosh=function(){return(o._Cosh=o.asm.Cosh).apply(null,arguments)},o._CropAndResize=function(){return(o._CropAndResize=o.asm.CropAndResize).apply(null,arguments)},o._Cumprod=function(){return(o._Cumprod=o.asm.Cumprod).apply(null,arguments)},o._Cumsum=function(){return(o._Cumsum=o.asm.Cumsum).apply(null,arguments)},o._DepthToSpace=function(){return(o._DepthToSpace=o.asm.DepthToSpace).apply(null,arguments)},o._DepthwiseConv2dNative=function(){return(o._DepthwiseConv2dNative=o.asm.DepthwiseConv2dNative).apply(null,arguments)},o._Elu=function(){return(o._Elu=o.asm.Elu).apply(null,arguments)},o._Equal=function(){return(o._Equal=o.asm.Equal).apply(null,arguments)},o._Exp=function(){return(o._Exp=o.asm.Exp).apply(null,arguments)},o._FlipLeftRight=function(){return(o._FlipLeftRight=o.asm.FlipLeftRight).apply(null,arguments)},o._Floor=function(){return(o._Floor=o.asm.Floor).apply(null,arguments)},o._FloorDiv=function(){return(o._FloorDiv=o.asm.FloorDiv).apply(null,arguments)},o._FusedBatchNorm=function(){return(o._FusedBatchNorm=o.asm.FusedBatchNorm).apply(null,arguments)},o._FusedConv2D=function(){return(o._FusedConv2D=o.asm.FusedConv2D).apply(null,arguments)},o._FusedDepthwiseConv2D=function(){return(o._FusedDepthwiseConv2D=o.asm.FusedDepthwiseConv2D).apply(null,arguments)},o._Gather=function(){return(o._Gather=o.asm.Gather).apply(null,arguments)},o._GatherNd=function(){return(o._GatherNd=o.asm.GatherNd).apply(null,arguments)},o._Greater=function(){return(o._Greater=o.asm.Greater).apply(null,arguments)},o._GreaterEqual=function(){return(o._GreaterEqual=o.asm.GreaterEqual).apply(null,arguments)},o._IsNan=function(){return(o._IsNan=o.asm.IsNan).apply(null,arguments)},o._LeakyRelu=function(){return(o._LeakyRelu=o.asm.LeakyRelu).apply(null,arguments)},o._Less=function(){return(o._Less=o.asm.Less).apply(null,arguments)},o._LessEqual=function(){return(o._LessEqual=o.asm.LessEqual).apply(null,arguments)},o._Log=function(){return(o._Log=o.asm.Log).apply(null,arguments)},o._LogicalAnd=function(){return(o._LogicalAnd=o.asm.LogicalAnd).apply(null,arguments)},o._LogicalNot=function(){return(o._LogicalNot=o.asm.LogicalNot).apply(null,arguments)},o._LogicalOr=function(){return(o._LogicalOr=o.asm.LogicalOr).apply(null,arguments)},o._LogicalXor=function(){return(o._LogicalXor=o.asm.LogicalXor).apply(null,arguments)},o._Max=function(){return(o._Max=o.asm.Max).apply(null,arguments)},o._MaxPool=function(){return(o._MaxPool=o.asm.MaxPool).apply(null,arguments)},o._Maximum=function(){return(o._Maximum=o.asm.Maximum).apply(null,arguments)},o._Mean=function(){return(o._Mean=o.asm.Mean).apply(null,arguments)},o._Min=function(){return(o._Min=o.asm.Min).apply(null,arguments)},o._Minimum=function(){return(o._Minimum=o.asm.Minimum).apply(null,arguments)},o._MirrorPad=function(){return(o._MirrorPad=o.asm.MirrorPad).apply(null,arguments)},o._Multiply=function(){return(o._Multiply=o.asm.Multiply).apply(null,arguments)},o._Neg=function(){return(o._Neg=o.asm.Neg).apply(null,arguments)},o._NonMaxSuppressionV3=function(){return(o._NonMaxSuppressionV3=o.asm.NonMaxSuppressionV3).apply(null,arguments)},o._NonMaxSuppressionV4=function(){return(o._NonMaxSuppressionV4=o.asm.NonMaxSuppressionV4).apply(null,arguments)},o._NonMaxSuppressionV5=function(){return(o._NonMaxSuppressionV5=o.asm.NonMaxSuppressionV5).apply(null,arguments)},o._NotEqual=function(){return(o._NotEqual=o.asm.NotEqual).apply(null,arguments)},o._OneHot=function(){return(o._OneHot=o.asm.OneHot).apply(null,arguments)},o._PadV2=function(){return(o._PadV2=o.asm.PadV2).apply(null,arguments)},o._Pow=function(){return(o._Pow=o.asm.Pow).apply(null,arguments)},o._Prelu=function(){return(o._Prelu=o.asm.Prelu).apply(null,arguments)},o._Prod=function(){return(o._Prod=o.asm.Prod).apply(null,arguments)},o._RealDiv=function(){return(o._RealDiv=o.asm.RealDiv).apply(null,arguments)},o._Reciprocal=function(){return(o._Reciprocal=o.asm.Reciprocal).apply(null,arguments)},o._Relu=function(){return(o._Relu=o.asm.Relu).apply(null,arguments)},o._Relu6=function(){return(o._Relu6=o.asm.Relu6).apply(null,arguments)},o._ResizeBilinear=function(){return(o._ResizeBilinear=o.asm.ResizeBilinear).apply(null,arguments)},o._ResizeNearestNeighbor=function(){return(o._ResizeNearestNeighbor=o.asm.ResizeNearestNeighbor).apply(null,arguments)},o._Reverse=function(){return(o._Reverse=o.asm.Reverse).apply(null,arguments)},o._RotateWithOffset=function(){return(o._RotateWithOffset=o.asm.RotateWithOffset).apply(null,arguments)},o._Round=function(){return(o._Round=o.asm.Round).apply(null,arguments)},o._Rsqrt=function(){return(o._Rsqrt=o.asm.Rsqrt).apply(null,arguments)},o._ScatterNd=function(){return(o._ScatterNd=o.asm.ScatterNd).apply(null,arguments)},o._SelectV2=function(){return(o._SelectV2=o.asm.SelectV2).apply(null,arguments)},o._Sigmoid=function(){return(o._Sigmoid=o.asm.Sigmoid).apply(null,arguments)},o._Sin=function(){return(o._Sin=o.asm.Sin).apply(null,arguments)},o._Softmax=function(){return(o._Softmax=o.asm.Softmax).apply(null,arguments)},o._SparseFillEmptyRows=function(){return(o._SparseFillEmptyRows=o.asm.SparseFillEmptyRows).apply(null,arguments)},o._SparseReshape=function(){return(o._SparseReshape=o.asm.SparseReshape).apply(null,arguments)},o._SparseSegmentReduction=function(){return(o._SparseSegmentReduction=o.asm.SparseSegmentReduction).apply(null,arguments)},o._Sqrt=function(){return(o._Sqrt=o.asm.Sqrt).apply(null,arguments)},o._Square=function(){return(o._Square=o.asm.Square).apply(null,arguments)},o._SquaredDifference=function(){return(o._SquaredDifference=o.asm.SquaredDifference).apply(null,arguments)},o._Step=function(){return(o._Step=o.asm.Step).apply(null,arguments)},o._StridedSlice=function(){return(o._StridedSlice=o.asm.StridedSlice).apply(null,arguments)},o._Sub=function(){return(o._Sub=o.asm.Sub).apply(null,arguments)},o._Sum=function(){return(o._Sum=o.asm.Sum).apply(null,arguments)},o._Tan=function(){return(o._Tan=o.asm.Tan).apply(null,arguments)},o._Tanh=function(){return(o._Tanh=o.asm.Tanh).apply(null,arguments)},o._Tile=function(){return(o._Tile=o.asm.Tile).apply(null,arguments)},o._TopK=function(){return(o._TopK=o.asm.TopK).apply(null,arguments)},o._Transform=function(){return(o._Transform=o.asm.Transform).apply(null,arguments)},o._Transpose=function(){return(o._Transpose=o.asm.Transpose).apply(null,arguments)},o.__FusedMatMul=function(){return(o.__FusedMatMul=o.asm._FusedMatMul).apply(null,arguments)},o._malloc=function(){return(o._malloc=o.asm.malloc).apply(null,arguments)},o._free=function(){return(o._free=o.asm.free).apply(null,arguments)},o.___errno_location=function(){return(o.___errno_location=o.asm.__errno_location).apply(null,arguments)},o.stackSave=function(){return(Ee=o.stackSave=o.asm.stackSave).apply(null,arguments)}),Ae=o.stackRestore=function(){return(Ae=o.stackRestore=o.asm.stackRestore).apply(null,arguments)},$e=o.stackAlloc=function(){return($e=o.stackAlloc=o.asm.stackAlloc).apply(null,arguments)};o.dynCall_iijjiiii=function(){return(o.dynCall_iijjiiii=o.asm.dynCall_iijjiiii).apply(null,arguments)},o.dynCall_jiji=function(){return(o.dynCall_jiji=o.asm.dynCall_jiji).apply(null,arguments)};function Re(e){function t(){Ne||(Ne=!0,o.calledRun=!0,!T&&(G(),n(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),H()))}e=e||d,X>0||(U(),X>0)||(o.setStatus?(o.setStatus("Running..."),setTimeout((function(){setTimeout((function(){o.setStatus("")}),1),t()}),1)):t())}if(o.cwrap=Se,Z=function e(){Ne||Re(),Ne||(Z=e)},o.preInit)for("function"==typeof o.preInit&&(o.preInit=[o.preInit]);o.preInit.length>0;)o.preInit.pop()();if(Re(),i&&(Te={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!i.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!i.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof e)Ce=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ce=WasmBackendModuleThreadedSimd}if(Te){var Fe=Ce._dispose;Ce._dispose=function(){Fe(),Te.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),Te.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return e.ready}})();"object"==typeof t&&"object"==typeof s?s.exports=i:"function"==typeof define&&n("3c35")?define([],(function(){return i})):"object"==typeof t&&(t.WasmBackendModule=i)}),V=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},U=class{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r,a){return G("move")}createTensorFromGPUData(e,t,n){return G("createTensorFromGPUData")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}};function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,X(e,t,n)}function j(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,X(e,n,r),X(t,n,r)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2===0?e:e+1}function X(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function Y(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Z(e,t){let n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t,n=""){Q(ae(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function te(e){Q(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function re(e){return 0===e.length}function ae(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function se(e){return e%1===0}function ie(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function oe(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function le(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H(t),t}function ue(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function he(e,t=(e=>0),n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()})}function pe(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function de(e,t){let n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),Q(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),Q(e.every(e=>se(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function ce(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:de(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function fe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function ge(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ye(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function be(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function xe(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function we(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function ve(e){return"string"==typeof e||e instanceof String}function ke(e){return"boolean"==typeof e}function Ie(e){return"number"==typeof e}function Se(e){return Array.isArray(e)?Se(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ie(e)?"float32":ve(e)?"string":ke(e)?"bool":"float32"}function Ne(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Te(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Ce(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function _e(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=_e(e+t*o,i,n,r)}return a}function Ee(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return _e(0,e,t,n)}function Ae(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype "+t)}function $e(e,t){let n=Re(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Fe(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Ee(e,new Float32Array(n));if("int32"===t)return Ee(e,new Int32Array(n));if("bool"===t)return Ee(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function De(e){e.forEach(t=>{Q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Me(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Oe(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Le(e){return e&&e.then&&"function"==typeof e.then}var ze="tfjsflags",Pe=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Be,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Le(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);ze in e&&e[ze].split(",").forEach(e=>{let[t,n]=e.split(":");this.urlFlags[t]=Ve(t,n)})}};function Be(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(We(t,n[0],n[1]),n.join("="))),t}function We(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Ve(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Ue(){return He}var Ge,He=null;function je(e){He=e}function qe(){if(null==Ge){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof s)e=s;else if("undefined"!=typeof r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ge=e}return Ge}function Ke(){let e=qe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function Xe(e,t){let n=Ke();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ye="Abs",Ze="Acos",Je="Acosh",Qe="Add",et="AddN",tt="All",nt="Any",rt="ArgMax",at="ArgMin",st="Asin",it="Asinh",ot="Atan",lt="Atanh",ut="Atan2",ht="AvgPool",pt="AvgPoolGrad",dt="AvgPool3D",ct="AvgPool3DGrad",ft="BatchMatMul",mt="BatchToSpaceND",gt="Bincount",yt="BroadcastTo",bt="BroadcastArgs",xt="Cast",wt="Ceil",vt="ClipByValue",kt="Complex",It="ComplexAbs",St="Concat",Nt="Conv2D",Tt="Conv2DBackpropFilter",Ct="Conv2DBackpropInput",_t="Conv3D",Et="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",$t="Cos",Rt="Cosh",Ft="Cumprod",Dt="Cumsum",Mt="CropAndResize",Ot="DenseBincount",Lt="DepthToSpace",zt="DepthwiseConv2dNative",Pt="DepthwiseConv2dNativeBackpropFilter",Bt="DepthwiseConv2dNativeBackpropInput",Wt="Diag",Vt="Dilation2D",Ut="Dilation2DBackpropInput",Gt="Dilation2DBackpropFilter",Ht="RealDiv",jt="Einsum",qt="Elu",Kt="EluGrad",Xt="Erf",Yt="Equal",Zt="Exp",Jt="ExpandDims",Qt="Expm1",en="FFT",tn="Fill",nn="FlipLeftRight",rn="Floor",an="FloorDiv",sn="FusedBatchNorm",on="GatherV2",ln="GatherNd",un="Greater",hn="GreaterEqual",pn="Identity",dn="IFFT",cn="Imag",fn="IsFinite",mn="IsInf",gn="IsNan",yn="LeakyRelu",bn="Less",xn="LessEqual",wn="LinSpace",vn="Log",kn="Log1p",In="LogicalAnd",Sn="LogicalNot",Nn="LogicalOr",Tn="LogicalXor",Cn="LogSoftmax",_n="LowerBound",En="LRN",An="LRNGrad",$n="Max",Rn="Maximum",Fn="MaxPool",Dn="MaxPoolGrad",Mn="MaxPool3D",On="MaxPool3DGrad",Ln="MaxPoolWithArgmax",zn="Mean",Pn="Min",Bn="Minimum",Wn="MirrorPad",Vn="Mod",Un="Multinomial",Gn="Multiply",Hn="Neg",jn="NotEqual",qn="NonMaxSuppressionV3",Kn="NonMaxSuppressionV4",Xn="NonMaxSuppressionV5",Yn="OnesLike",Zn="OneHot",Jn="Pack",Qn="PadV2",er="Pool",tr="Pow",nr="Prelu",rr="Prod",ar="RaggedGather",sr="RaggedRange",ir="RaggedTensorToTensor",or="Range",lr="Real",ur="Reciprocal",hr="Relu",pr="Reshape",dr="ResizeNearestNeighbor",cr="ResizeNearestNeighborGrad",fr="ResizeBilinear",mr="ResizeBilinearGrad",gr="Relu6",yr="Reverse",br="Round",xr="Rsqrt",wr="ScatterNd",vr="SearchSorted",kr="Select",Ir="Selu",Sr="Slice",Nr="Sin",Tr="Sinh",Cr="Sign",_r="Sigmoid",Er="Softplus",Ar="Sqrt",$r="Sum",Rr="SpaceToBatchND",Fr="SplitV",Dr="Softmax",Mr="SparseFillEmptyRows",Or="SparseReshape",Lr="SparseSegmentMean",zr="SparseSegmentSum",Pr="SparseToDense",Br="SquaredDifference",Wr="Square",Vr="StridedSlice",Ur="StringNGrams",Gr="StringSplit",Hr="StringToHashBucketFast",jr="Sub",qr="Tan",Kr="Tanh",Xr="Tile",Yr="TopK",Zr="Transform",Jr="Transpose",Qr="Unique",ea="Unpack",ta="UnsortedSegmentSum",na="UpperBound",ra="ZerosLike",aa="Step",sa="FromPixels",ia="RotateWithOffset",oa="_FusedMatMul",la="FusedConv2D",ua="FusedDepthwiseConv2D";function ha(...e){Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(...e)}function pa(...e){Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.log(...e)}var da=Xe("kernelRegistry",()=>new Map),ca=Xe("gradRegistry",()=>new Map);function fa(e,t){let n=ka(e,t);return da.get(n)}function ma(e){return ca.get(e)}function ga(e){let t=da.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ya(e){let{kernelName:t,backendName:n}=e,r=ka(t,n);da.has(r)&&ha(`The kernel '${t}' for backend '${n}' is already registered`),da.set(r,e)}function ba(e){let{kernelName:t}=e;ca.has(t)&&Ue().getBool("DEBUG")&&ha(`Overriding the gradient for '${t}'`),ca.set(t,e)}function xa(e,t){let n=ka(e,t);if(!da.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);da.delete(n)}function wa(e){if(!ca.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ca.delete(e)}function va(e,t){ga(e).forEach(e=>{let n=Object.assign({},e,{backendName:t});ya(n)})}function ka(e,t){return`${t}_${e}`}var Ia={};b(Ia,{arraysEqual:()=>ae,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>De,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>we,bytesPerElement:()=>xe,checkConversionForErrors:()=>ge,clamp:()=>q,computeStrides:()=>Ce,convertBackendValuesAndArrayBuffer:()=>Ae,createScalarValue:()=>Va,createShuffledIndices:()=>le,decodeString:()=>Ka,distSquared:()=>J,encodeString:()=>qa,fetch:()=>ja,fingerPrint64:()=>Wa,flatten:()=>Ya,getArrayFromDType:()=>me,getTypedArrayFromDType:()=>fe,hasEncodingLoss:()=>be,hexToLong:()=>Ta,indexToLoc:()=>Oe,inferDtype:()=>Se,inferFromImplicitShape:()=>pe,isBoolean:()=>ke,isFunction:()=>Ne,isInt:()=>se,isNumber:()=>Ie,isPromise:()=>Le,isScalarShape:()=>re,isString:()=>ve,isTypedArray:()=>Xa,isValidDtype:()=>ye,locToIndex:()=>Me,makeOnesTypedArray:()=>$e,makeZerosNestedTypedArray:()=>Fe,makeZerosTypedArray:()=>Re,nearestDivisor:()=>Te,nearestLargerEven:()=>K,now:()=>Ha,parseAxisParam:()=>de,randUniform:()=>Z,repeatedTry:()=>he,rightPad:()=>ue,shuffle:()=>H,shuffleCombo:()=>j,sizeFromShape:()=>ne,sizeToSquarishShape:()=>oe,squeezeShape:()=>ce,sum:()=>Y,swap:()=>X,tanh:()=>ie,toNestedArray:()=>Ee,toTypedArray:()=>Ga});var Sa=w(v()),Na=Sa.default||Sa;function Ta(e){return Na.fromString(e,!0,16)}var Ca=Ta("c3a5c85c97cb3127"),_a=Ta("b492b66fbe98f273"),Ea=Ta("9ae16a3b2f90404f");function Aa(e){return e.xor(e.shru(47))}function $a(e,t,n){let r=e.slice(t,t+n);return Na.fromBytes(Array.from(r),!0,!0)}function Ra(e,t){return $a(e,t,8)}function Fa(e,t){return $a(e,t,4)}function Da(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ma(e,t,n=Ta("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Oa(e,t,n,r,a,s){a=a.add(e),s=Da(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Da(a,44)),[a.add(r),s.add(i)]}function La(e,t,n,r){return Oa(Ra(e,t),Ra(e,t+8),Ra(e,t+16),Ra(e,t+24),n,r)}function za(e,t=e.length){if(t>=8){let n=Ea.add(2*t),r=Ra(e,0).add(Ea),a=Ra(e,t-8),s=Da(a,37).mul(n).add(r),i=Da(r,25).add(a).mul(n);return Ma(s,i,n)}if(t>=4){let n=Ea.add(2*t),r=Fa(e,0);return Ma(r.shl(3).add(t),Fa(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return Aa(Ea.mul(s).xor(Ca.mul(i))).mul(Ea)}return Ea}function Pa(e,t=e.length){let n=Ea.add(2*t),r=Ra(e,0).mul(_a),a=Ra(e,8),s=Ra(e,t-8).mul(n),i=Ra(e,t-16).mul(Ea);return Ma(Da(r.add(a),43).add(Da(s,30)).add(i),r.add(Da(a.add(Ea),18)).add(s),n)}function Ba(e,t=e.length){let n=Ea.add(2*t),r=Ra(e,0).mul(Ea),a=Ra(e,8),s=Ra(e,t-8).mul(n),i=Ra(e,t-16).mul(Ea),o=Da(r.add(a),43).add(Da(s,30)).add(i),l=Ma(o,r.add(Da(a.add(Ea),18)).add(s),n),u=Ra(e,16).mul(n),h=Ra(e,24),p=o.add(Ra(e,t-32)).mul(n),d=l.add(Ra(e,t-24)).mul(n);return Ma(Da(u.add(h),43).add(Da(p,30)).add(d),u.add(Da(h.add(r),18)).add(p),n)}function Wa(e,t=e.length){let n=Na.fromNumber(81,!0);if(t<=32)return t<=16?za(e,t):Pa(e,t);if(t<=64)return Ba(e,t);let r=n,a=n.mul(_a).add(113),s=Aa(a.mul(Ea).add(113)).mul(Ea),i=[Na.UZERO,Na.UZERO],o=[Na.UZERO,Na.UZERO];r=r.mul(Ea).add(Ra(e,0));let l=0,u=64*(t-1>>6),h=u+(t-1&63)-63;do{r=Da(r.add(a).add(i[0]).add(Ra(e,l+8)),37).mul(_a),a=Da(a.add(i[1]).add(Ra(e,l+48)),42).mul(_a),r=r.xor(o[1]),a=a.add(i[0]).add(Ra(e,l+40)),s=Da(s.add(o[0]),33).mul(_a),i=La(e,l,i[1].mul(_a),r.add(o[0])),o=La(e,l+32,s.add(o[1]),a.add(Ra(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let p=_a.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Da(r.add(a).add(i[0]).add(Ra(e,l+8)),37).mul(p),a=Da(a.add(i[1]).add(Ra(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Ra(e,l+40))),s=Da(s.add(o[0]),33).mul(p),i=La(e,l,i[1].mul(p),r.add(o[0])),o=La(e,l+32,s.add(o[1]),a.add(Ra(e,l+16))),[s,r]=[r,s],Ma(Ma(i[0],o[0],p).add(Aa(a).mul(Ca)).add(s),Ma(i[1],o[1],p).add(r),p)}function Va(e,t){return"string"===t?qa(e):Ga([e],t)}function Ua(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Ga(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ya(e)),Ue().getBool("DEBUG")&&ge(e,t),Ua(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Ha(){return Ue().platform.now()}function ja(e,t){return Ue().platform.fetch(e,t)}function qa(e,t="utf-8"){return t=t||"utf-8",Ue().platform.encode(e,t)}function Ka(e,t="utf-8"){return t=t||"utf-8",Ue().platform.decode(e,t)}function Xa(e){return Ue().platform.isTypedArray(e)}function Ya(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Le(e)||null==e||Xa(e)&&n)t.push(e);else if(Array.isArray(e)||Xa(e))for(let r=0;r<e.length;++r)Ya(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Ya(e[a],t,n)}return t}var Za=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Qa)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Ha();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Ha()-i})}if(Ue().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let t=r[o];t.data().then(n=>{Ja(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}};function Ja(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){let t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var Qa=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?ue(r+"ms",9):r.error,o=ue(e,25),l=t.rank,u=t.size,h=ue(t.shape.toString(),14),p="";for(let d in a){let e=a[d];if(null!=e){let n=e.shape||t.shape,r=n.length;p+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function es(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let n=e[l],s=n.inputs;for(let e in s){let i=s[e],o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[t.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let t=e[l];if(a[t.id]&&i[t.id]){let e={};for(let a in t.inputs){let n=t.inputs[a];r[n.id]&&(e[a]=n)}let n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function ts(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ae(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}var ns=20,rs=3,as=7;function ss(e,t,n,r){let a=Ce(t),s=is(e,t,n,a),i=t.length,o=us(e,t,n,a,s),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function is(e,t,n,r){let a=ne(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?hs(e):e;if(o>1)for(let u=0;u<a/s;u++){let e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],os(l[e+t],0,n).length)}return i}function os(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(as))} + ${parseFloat(e[1].toFixed(as))}j`:ve(e)?`'${e}'`:"bool"===n?ls(e):parseFloat(e.toFixed(as)).toString(),ue(r,t)}function ls(e){return 0===e?"false":"true"}function us(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){let t=hs(e);return[os(t[0],0,n)]}return"bool"===n?[ls(e[0])]:[e[0].toString()]}if(1===l){if(o>ns){let t=rs*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-rs)*i,o*i));return"complex64"===n&&(r=hs(r),s=hs(s)),["["+r.map((e,t)=>os(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>os(e,a[o-rs+t],n)).join(", ")+"]"]}return["["+("complex64"===n?hs(e):Array.from(e)).map((e,t)=>os(e,a[t],n)).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>ns){for(let t=0;t<rs;t++){let r=t*p,s=r+p;d.push(...us(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-rs;t<o;t++){let r=t*p,s=r+p;d.push(...us(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let m=0;m<o;m++){let t=m*p,r=t+p;d.push(...us(e.slice(t,r),u,n,h,a,m===o-1))}let c=2===l?",":"";d[0]="["+(o>0?d[0]+c:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function hs(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ps=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){let e=n.length;Q(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||me(t,this.size),this.strides=Ce(e)}set(e,...t){0===t.length&&(t=[0]),Q(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ds().makeTensor(this.values,this.shape,this.dtype)}},ds=null,cs=null;function fs(e){ds=e}function ms(e){cs=e}function gs(e){e}var ys=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Ce(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return cs.buffer(this.shape,this.dtype,e)}bufferSync(){return cs.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ee(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ee(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=ds().read(this.dataId);if("string"===this.dtype){let n=await e;try{return n.map(e=>Ka(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ds().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ds().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Ka(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ds().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ds().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return cs.print(this,e)}clone(){return this.throwIfDisposed(),cs.clone(this)}toString(e=!1){let t=this.dataSync();return ss(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),cs.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ds().makeVariable(this,e,t,n)}};function bs(){return Xe("Tensor",()=>ys)}Object.defineProperty(ys,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),bs();var xs=class extends ys{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ae(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ds().disposeTensor(this),this.dataId=e.dataId,ds().incRef(this,null)}dispose(){ds().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(xs,Symbol.hasInstance,{value:e=>e instanceof ys&&null!=e.assign&&e.assign instanceof Function});var ws,vs,ks,Is,Ss,Ns={};b(Ns,{assertTypesMatch:()=>As,getTensorsInContainer:()=>Rs,isTensorInList:()=>$s,makeTypesMatch:()=>Es}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ws||(ws={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(vs||(vs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ks||(ks={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Is||(Is={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ss||(Ss={}));var Ts={float32:Is,int32:vs,bool:ks,complex64:Ss};function Cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ts[e][t]}function _s(e){return Cs(e,"int32")}function Es(e,t){if(e.dtype===t.dtype)return[e,t];let n=Cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function As(e,t){Q(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function $s(e,t){return t.some(t=>t.id===e.id)}function Rs(e){let t=[];return Fs(e,t,new Set),t}function Fs(e,t,n){if(null==e)return;if(e instanceof ys)return void t.push(e);if(!Ds(e))return;let r=e;for(let a in r){let e=r[a];n.has(e)||(n.add(e),Fs(e,t,n))}}function Ds(e){return Array.isArray(e)||"object"==typeof e}function Ms(e){return null!=e.kernelName}var Os=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Ls=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Os}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ha(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Za(this.backendInstance),!0}setupRegisteredKernels(){ga(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ga(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ha(`Initialization of backend ${e} failed`),ha(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return ha(`Initialization of backend ${e} failed`),ha(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Ls.nextTensorId++}nextVariableId(){return Ls.nextVariableId++}clone(e){let t=Bs.runKernel(pn,{x:e}),n={x:e},r=e=>({x:()=>{let t="float32",n={x:e},r={dtype:t};return Bs.runKernel(xt,n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==fa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Ms(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ms(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=fa(t,this.backendName);Q(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{a&&(r=e.map(e=>this.keep(this.clone(e))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=Ms(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,()=>n()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()}),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(e=>null!=h[e]?h[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let r=ma(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Q(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let i=n.filter((e,t)=>s[t]);return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ve(e[0])&&(a=e.map(e=>qa(e)));let s=r.write(a,t,n),i=new ys(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=we(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";let a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new ys(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new xs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*xe(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof xs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*xe(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ma(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],r=Re(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Rs(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){let e=this.state.activeScope.track[a];!e.kept&&!n.has(e.id)&&e.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{!e.kept&&e.scopeId===r.id&&this.track(e)})}gradients(e,t,n,r=!1){if(Q(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));Q(a instanceof ys,()=>"The result y returned by f() must be a tensor.");let s=es(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==n?zs(a.shape):n,ts(e,s,e=>this.tidy(e),Ws);let r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return Q(Ne(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{Q(t.every(e=>e instanceof ys),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((e,t)=>{r[t]=e});let a=(r,a)=>(n=e(...t,a),Q(n.value instanceof ys,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Q(Ne(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Q(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Q(s.every(e=>e instanceof ys),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ha(),n=await this.backend.time(e);return n.wallMs=Ha()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Os;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function zs(e){let t=$e(ne(e),"float32");return Bs.makeTensor(t,e,"float32")}function Ps(){let e=qe();if(null==e._tfengine){let t=new Pe(e);e._tfengine=new Ls(t)}return je(e._tfengine.ENV),fs(()=>e._tfengine),e._tfengine}Ls.nextTensorId=0,Ls.nextVariableId=0;var Bs=Ps();function Ws(e,t){let n={a:e,b:t};return Bs.runKernel(Qe,n)}var Vs,Us={};function Gs(){return"undefined"!=typeof navigator&&null!=navigator}function Hs(e){Vs=e}function js(e){if(void 0!==Vs)return Vs;if(e||Gs()){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function qs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}b(Us,{isBrowser:()=>qs,isMobile:()=>js,mockIsMobile:()=>Hs});var Ks=Ue();function Xs(e,t){let n=e;if(Xa(e))return"string"===t?[]:[e.length];if("object"==typeof e){if("texture"in e){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:xe(t))]}if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Xa(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ue().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ys(e,r,[]),r}function Ys(e,t,n){if(n=n||[],!Array.isArray(e)&&!Xa(e))return void Q(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Q(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Q(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)Ys(e[a],r,n.concat(a))}function Zs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Js(e,t,n,r="numeric"){if(e instanceof ys)return Zs(r,e.dtype,t,n),e;let a=Se(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Zs(r,a,t,n),null==e||!Xa(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Xs(e,a);!Xa(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Ga(e,a):Ya(e,[],!0);return Bs.makeTensor(i,s,a)}function Qs(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>Js(e,`${t}[${a}]`,n,r))}Ks.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ks.registerFlag("IS_BROWSER",()=>qs()),Ks.registerFlag("IS_NODE",()=>"undefined"!=typeof r&&"undefined"!=typeof r.versions&&"undefined"!=typeof r.versions.node),Ks.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ks.registerFlag("PROD",()=>!1),Ks.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ks.getBool("DEBUG")),Ks.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ks.registerFlag("IS_TEST",()=>!1),Ks.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Ks.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Ks.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Ks.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var ei="__op";function ti(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ei;let a=(...e)=>{Bs.startScope(n);try{let t=r(...e);return Le(t)&&console.error("Cannot return a Promise inside of tidy."),Bs.endScope(t),t}catch(t){throw Bs.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function ni(e,t){let n=Js(e,"real","complex"),r=Js(t,"imag","complex");ee(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Bs.runKernel(kt,a)}var ri=ti({complex_:ni});function ai(e,t,n,r){if(null==r)r=Se(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Bs.backend.createTensorFromGPUData(e,t||n,r)}if(!Xa(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){De(t);let e=ne(t),r=ne(n);Q(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let a=0;a<n.length;++a){let e=n[a],r=a!==n.length-1||e!==ne(t.slice(a));Q(n[a]===t[a]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Xa(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Ga(e,r):Ya(e,[],!0),Bs.makeTensor(e,t,r)}function si(e,t,n){let r=Xs(e,n);return ai(e,t,r,n)}var ii={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},oi=4;async function li(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<a.length;++i){let s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+oi*t.length,r=new Uint8Array(n),a=0;for(let s=0;s<t.length;s++){let e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=oi,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}let s=await Promise.all(r);return{data:hi(s),specs:n}}function ui(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=ne(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=ii[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Ni()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=ne(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+oi))[0];a+=oi;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=ii[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=si(e,l,"float32"),o=si(n,l,"float32");r[i]=ri(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=si(t,l,o))}return r}function hi(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});let r=new Uint8Array(t),a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}var pi="undefined"!=typeof i&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function di(e){return pi?i.byteLength(e):new Blob([e]).size}function ci(e){if(pi)return i.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function fi(e){if(pi){let t=i.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function mi(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});let n=new Uint8Array(t),r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function gi(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function yi(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function bi(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function xi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),bi(e,n,r)}function wi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:di(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:di(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function vi(e){let t=[];for(let n of e)t.push(...n.weights);return t}function ki(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Ii(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Si(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function Ni(){let e=ki(),t=Ii(),n=Si();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}var Ti=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ti.instance&&(Ti.instance=new Ti),Ti.instance}static registerSaveRouter(e){Ti.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ti.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ti.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ti.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Ti.getInstance().loadRouters:Ti.getInstance().saveRouters).forEach(t=>{let a=t(e,n);null!==a&&r.push(a)}),r}},Ci=e=>Ti.registerSaveRouter(e),_i=e=>Ti.registerLoadRouter(e),Ei=e=>Ti.getSaveHandlers(e),Ai=(e,t)=>Ti.getLoadHandlers(e,t),$i="tensorflowjs",Ri=1,Fi="models_store",Di="model_info_store";function Mi(){if(!Ue().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Oi(e){let t=e.result;t.createObjectStore(Fi,{keyPath:"modelPath"}),t.createObjectStore(Di,{keyPath:"modelPath"})}var Li=class{constructor(e){if(this.indexedDB=Mi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let r=this.indexedDB.open($i,Ri);r.onupgradeneeded=()=>Oi(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Fi,"readonly"),r=t.objectStore(Fi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=wi(t),i=a.transaction(Di,"readwrite"),o=i.objectStore(Di),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Fi,"readwrite");let l=r.objectStore(Fi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Di);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}};Li.URL_SCHEME="indexeddb://";var zi=e=>Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Li.URL_SCHEME)?Pi(e.slice(Li.URL_SCHEME.length)):null;function Pi(e){return new Li(e)}function Bi(e){return e.startsWith(Li.URL_SCHEME)?e.slice(Li.URL_SCHEME.length):e}Ti.registerSaveRouter(zi),Ti.registerLoadRouter(zi);var Wi=class{constructor(){this.indexedDB=Mi()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open($i,Ri);n.onupgradeneeded=()=>Oi(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Di,"readonly"),s=a.objectStore(Di).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){return e=Bi(e),new Promise((t,n)=>{let r=this.indexedDB.open($i,Ri);r.onupgradeneeded=()=>Oi(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Di,"readwrite"),o=i.objectStore(Di),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Fi,"readwrite");let r=a.objectStore(Fi).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}},Vi="/",Ui="tensorflowjs_models",Gi="info",Hi="model_topology",ji="weight_specs",qi="weight_data",Ki="model_metadata";function Xi(e){return{info:[Ui,e,Gi].join(Vi),topology:[Ui,e,Hi].join(Vi),weightSpecs:[Ui,e,ji].join(Vi),weightData:[Ui,e,qi].join(Vi),modelMetadata:[Ui,e,Ki].join(Vi)}}function Yi(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Zi(e){let t=e.split(Vi);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Vi)}function Ji(e){return e.startsWith(Qi.URL_SCHEME)?e.slice(Qi.URL_SCHEME.length):e}var Qi=class{constructor(e){if(!Ue().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Xi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=wi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,ci(e.weightData));let t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw Yi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=fi(s),t}};Qi.URL_SCHEME="localstorage://";var eo=e=>Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qi.URL_SCHEME)?to(e.slice(Qi.URL_SCHEME.length)):null;function to(e){return new Qi(e)}Ti.registerSaveRouter(eo),Ti.registerLoadRouter(eo);var no=class{constructor(){Q(Ue().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Q("undefined"==typeof window||"undefined"!=typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Ui+Vi,n=Vi+Gi;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let t=Zi(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=Ji(e);let t=Xi(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Yi(t),n}},ro="://",ao=class{constructor(){this.managers={}}static getInstance(){return null==ao.instance&&(ao.instance=new ao),ao.instance}static registerManager(e,t){Q(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(ro)&&(e=e.slice(0,e.indexOf(ro))),Q(e.length>0,()=>"scheme must not be an empty string.");let n=ao.getInstance();Q(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=ao.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ao.getInstance().managers)}};function so(e){if(-1===e.indexOf(ro))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ao.getSchemes().join(","));return{scheme:e.split(ro)[0],path:e.split(ro)[1]}}async function io(e,t,n=!1){Q(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Ti.getLoadHandlers(e);Q(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Q(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=Ti.getSaveHandlers(t);Q(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Q(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=so(e).scheme,l=so(e).path,u=o===so(e).scheme,h=await a.load();n&&u&&await ao.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await ao.getManager(o).removeModel(l),p.modelArtifactsInfo}async function oo(){let e=ao.getSchemes(),t={};for(let n of e){let e=await ao.getManager(n).listModels();for(let r in e){let a=n+ro+r;t[a]=e[r]}}return t}async function lo(e){let t=so(e);return ao.getManager(t.scheme).removeModel(t.path)}async function uo(e,t){return io(e,t,!1)}async function ho(e,t){return io(e,t,!0)}var po=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ue().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();let t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}};if(Ue().get("IS_BROWSER")){Ue().setPlatform("browser",new po);try{ao.registerManager(Qi.URL_SCHEME,new no)}catch(Lse){}try{ao.registerManager(Li.URL_SCHEME,new Wi)}catch(Lse){}}var co,fo={importFetch:()=>k()},mo=class{constructor(){this.util=I(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ue().global.fetch?Ue().global.fetch(e,t):(null==co&&(co=fo.importFetch()),co(e,t))}now(){let e=r.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};function go(e,t="float32",n){return t=t||"float32",De(e),new ps(e,t,n)}function yo(e,t){let n=Js(e,"x","cast");if(!ye(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Bs.runKernel(xt,r,a)}Ue().get("IS_NODE")&&!Ue().get("IS_BROWSER")&&Ue().setPlatform("node",new mo);var bo=ti({cast_:yo});function xo(e){let t={x:Js(e,"x","clone","string_or_numeric")};return Bs.runKernel(pn,t)}var wo=ti({clone_:xo});function vo(e,t=!1){console.log(e.toString(t))}Ps();var ko={buffer:go,cast:bo,clone:wo,print:vo};function Io(){Ue().set("PROD",!0)}function So(){Ue().set("DEBUG",!0)}function No(){Ue().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function To(e){Ue().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Co(){Bs.disposeVariables()}function _o(){return Bs}function Eo(){return Bs.memory()}function Ao(e){return Bs.profile(e)}function $o(e,t){return Bs.tidy(e,t)}function Ro(e){Rs(e).forEach(e=>e.dispose())}function Fo(e){return Bs.keep(e)}function Do(e){return Bs.time(e)}function Mo(e){return Bs.setBackend(e)}function Oo(){return Bs.ready()}function Lo(){return Bs.backendName}function zo(e){Bs.removeBackend(e)}function Po(e){return Bs.findBackend(e)}function Bo(e){return Bs.findBackendFactory(e)}function Wo(e,t,n=1){return Bs.registerBackend(e,t,n)}function Vo(){return Bs.backend}function Uo(e,t){Ue().setPlatform(e,t)}function Go(e,t){let n=Js(e,"a","add"),r=Js(t,"b","add");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(Qe,a)}ms(ko),gs(To);var Ho=ti({add_:Go});function jo(e,t){let n=Js(e,"a","floorDiv"),r=Js(t,"b","floorDiv");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(an,a)}var qo=ti({floorDiv_:jo});function Ko(e,t){let n=Js(e,"a","div"),r=Js(t,"b","div");if([n,r]=Es(n,r),"int32"===n.dtype&&"int32"===r.dtype)return qo(n,r);let a={a:n,b:r},s={};return Bs.runKernel(Ht,a,s)}var Xo=ti({div_:Ko});function Yo(e,t){let n=Js(e,"a","mul"),r=Js(t,"b","mul");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(Gn,a)}var Zo=ti({mul_:Yo});function Jo(e){let t=Js(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Bs.runKernel(It,e)}{let e={x:t};return Bs.runKernel(Ye,e)}}var Qo=ti({abs_:Jo});function el(e){let t={x:Js(e,"x","acos")};return Bs.runKernel(Ze,t)}var tl=ti({acos_:el});function nl(e){let t={x:Js(e,"x","acosh")};return Bs.runKernel(Je,t)}var rl=ti({acosh_:nl});function al(e){Q(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),Q(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);let t=e.map((e,t)=>Js(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!ae(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return Bs.runKernel(et,r)}var sl=ti({addN_:al});function il(e,t=null,n=!1){let r={x:Js(e,"x","all","bool")},a={axis:t,keepDims:n};return Bs.runKernel(tt,r,a)}var ol=ti({all_:il});function ll(e,t=null,n=!1){let r={x:Js(e,"x","any","bool")},a={axis:t,keepDims:n};return Bs.runKernel(nt,r,a)}var ul=ti({any_:ll});function hl(e,t=0){let n={x:Js(e,"x","argMax")},r={axis:t};return Bs.runKernel(rt,n,r)}var pl=ti({argMax_:hl});function dl(e,t=0){let n={x:Js(e,"x","argMin")},r={axis:t};return Bs.runKernel(at,n,r)}var cl=ti({argMin_:dl});function fl(e){let t={x:Js(e,"x","asin")};return Bs.runKernel(st,t)}var ml=ti({asin_:fl});function gl(e){let t={x:Js(e,"x","asinh")};return Bs.runKernel(it,t)}var yl=ti({asinh_:gl});function bl(e){let t={x:Js(e,"x","atan")};return Bs.runKernel(ot,t)}var xl=ti({atan_:bl});function wl(e,t){let n=Js(e,"a","atan2"),r=Js(t,"b","atan2");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(ut,a)}var vl=ti({atan2_:wl});function kl(e){let t={x:Js(e,"x","atanh")};return Bs.runKernel(lt,t)}var Il=ti({atanh_:kl});function Sl(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=Wl(a);return Cl(e,o,n,s,r,null,null,l)}function Nl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Rl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);o=[l,u,e[1],e[1]]}return Cl(e,o,n,r,a,s,!1,i)}function Tl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=Fl(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return _l(e,o,n,r,a,!1,l,s)}function Cl(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=Rl(n),[b,x]=Rl(r),w=Dl(c,b),v=Dl(f,x),{padInfo:k,outHeight:I,outWidth:S}=Ml(a,u,h,g,y,w,v,s,o),N=i?m*p:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function _l(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,w]=Fl(n),[v,k,I]=Fl(r),S=Dl(f,v),N=Dl(m,k),T=Dl(g,I),{padInfo:C,outDepth:_,outHeight:E,outWidth:A}=Ol(a,u,h,p,b,x,w,S,N,T,o),$=s?y*d:y;return"channelsFirst"===i?c=[l,$,_,E,A]:"channelsLast"===i&&(c=[l,_,E,A,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:_,outHeight:E,outWidth:A,outChannels:$,padInfo:C,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function El(e,t,n,r,a){null==r&&(r=$l(e,t,n));let s=e[0],i=e[1],o=Ll((s-t+2*r)/n+1,a),l=Ll((i-t+2*r)/n+1,a);return[o,l]}function Al(e,t,n,r,a,s){null==a&&(a=$l(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Ll((e[o]-t[o]+2*a)/r[o]+1,s));return i}function $l(e,t,n,r=1){let a=Dl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Rl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Fl(e){return"number"==typeof e?[e,e,e]:e}function Dl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ml(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=El([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2),f=o-c;u={top:l,bottom:d,left:c,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=Ll((t-s+d+c)/r+1,o),p=Ll((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}function Ol(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=Al([t,n,r,1],[o,l,u],1,[a,s,i],e,h);d=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: "+e);{d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,w=Math.floor(m/2),v=m-w;p={top:b,bottom:x,left:w,right:v,front:g,back:y,type:"SAME"}}}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}function Ll(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function zl(e){let[t,n,r]=Rl(e);return 1===t&&1===n&&1===r}function Pl(e,t){return zl(e)||zl(t)}function Bl(e){return Rl(e).every(e=>e>0)}function Wl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function Vl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Q(se(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{Q(se(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}function Ul(e,t){let n={x:Js(e,"x","reshape","string_or_numeric")},r={shape:t};return Bs.runKernel(pr,n,r)}var Gl=ti({reshape_:Ul});function Hl(e,t,n,r,a){let s=Js(e,"x","avgPool","float32"),i=1;Q(Pl(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;3===s.rank&&(l=!0,o=Gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Vl("avgPool",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Bs.runKernel(ht,u,h);return p=bo(p,s.dtype),l?Gl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var jl=ti({avgPool_:Hl});function ql(e,t,n,r,a,s="NDHWC"){let i=Js(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),Q("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Vl("avgPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Bs.runKernel(dt,u,h);return p=bo(p,o.dtype),l?Gl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Kl=ti({avgPool3d_:ql});function Xl(e,t=0){Q(e.length>=1,()=>"Pass at least one tensor to concat");let n=Qs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return wo(n[0]);let r=n,a={axis:t};return Bs.runKernel(St,r,a)}var Yl=ti({concat_:Xl});function Zl(e,t,n=!1,r=!1){let a=Js(e,"a","matMul"),s=Js(t,"b","matMul");[a,s]=Es(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Bs.runKernel(ft,i,o)}var Jl=ti({matMul_:Zl});function Ql(e){let t={x:Js(e,"x","sigmoid","float32")};return Bs.runKernel(_r,t)}var eu=ti({sigmoid_:Ql});function tu(e,t,n){let r=Js(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Bs.runKernel(Sr,a,s)}var nu=ti({slice_:tu});function ru(e){let t={x:Js(e,"x","tanh","float32")};return Bs.runKernel(Kr,t)}var au=ti({tanh_:ru});function su(e,t,n,r,a,s){let i=Js(e,"forgetBias","basicLSTMCell"),o=Js(t,"lstmKernel","basicLSTMCell"),l=Js(n,"lstmBias","basicLSTMCell"),u=Js(r,"data","basicLSTMCell"),h=Js(a,"c","basicLSTMCell"),p=Js(s,"h","basicLSTMCell"),d=Yl([u,p],1),c=Jl(d,o),f=Ho(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=nu(f,[0,0],y),x=nu(f,[0,g],y),w=nu(f,[0,2*g],y),v=nu(f,[0,3*g],y),k=Ho(Zo(eu(b),au(x)),Zo(h,eu(Ho(i,w)))),I=Zo(au(k),eu(v));return[k,I]}var iu=ti({basicLSTMCell_:su});function ou(e,t,n){let r=Js(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);Q(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),Q(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),Q(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return Bs.runKernel(mt,s,i)}var lu=ti({batchToSpaceND_:ou});function uu(e){let t;return t=0===e.rank||1===e.rank?Gl(e,[1,1,1,e.size]):2===e.rank?Gl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function hu(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Js(e,"x","batchNorm"),u=Js(t,"mean","batchNorm"),h=Js(n,"variance","batchNorm");null!=a&&(i=Js(a,"scale","batchNorm")),null!=r&&(o=Js(r,"offset","batchNorm")),Q(u.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Q(null==o||u.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Q(null==i||u.rank===i.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:uu(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=Bs.runKernel(sn,p,d);return Gl(c,l.shape)}var pu=ti({batchNorm_:hu});function du(e,t,n,r,a,s){let i,o,l=Js(e,"x","batchNorm"),u=Js(t,"mean","batchNorm"),h=Js(n,"variance","batchNorm");return null!=a&&(i=Js(a,"scale","batchNorm")),null!=r&&(o=Js(r,"offset","batchNorm")),Q(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),Q(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),Q(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=i&&Q(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),pu(l,u,h,o,i,s)}var cu=ti({batchNorm2d_:du});function fu(e,t,n,r,a,s){let i,o,l=Js(e,"x","batchNorm"),u=Js(t,"mean","batchNorm"),h=Js(n,"variance","batchNorm");return null!=a&&(i=Js(a,"scale","batchNorm")),null!=r&&(o=Js(r,"offset","batchNorm")),Q(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),Q(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),Q(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=i&&Q(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),pu(l,u,h,o,i,s)}var mu=ti({batchNorm3d_:fu});function gu(e,t,n,r,a,s){let i,o,l=Js(e,"x","batchNorm"),u=Js(t,"mean","batchNorm"),h=Js(n,"variance","batchNorm");return null!=a&&(i=Js(a,"scale","batchNorm")),null!=r&&(o=Js(r,"offset","batchNorm")),Q(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),Q(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),Q(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=i&&Q(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`),null!=o&&Q(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),pu(l,u,h,o,i,s)}var yu=ti({batchNorm4d_:gu});function bu(e,t,n){let r=Js(e,"x","bincount"),a=Js(t,"weights","bincount");Q("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return Bs.runKernel(gt,s,i)}var xu=ti({bincount_:bu});function wu(e,t){let n=Js(e,"s0","broadcastArgs","int32"),r=Js(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+n.rank);if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+r.rank);let a={s0:n,s1:r};return Bs.runKernel(bt,a)}var vu=ti({broadcastArgs_:wu});function ku(e,t){let n=Js(e,"broadcastTo","x"),r=n.shape;if(De(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Gl(n,e)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return wo(n);let i={x:n},o={reps:s};return Bs.runKernel(Xr,i,o)}var Iu=ti({broadcastTo_:ku});function Su(e){let t={x:Js(e,"x","ceil","float32")};return Bs.runKernel(wt,t)}var Nu=ti({ceil_:Su});function Tu(e,t,n){De(e);let r={shape:e,value:t,dtype:n};return Bs.runKernel(tn,{},r)}function Cu(e,t,n){let r=Js(e,"x","clipByValue");if(Q(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Tu(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return Bs.runKernel(vt,a,s)}var _u=ti({clipByValue_:Cu});function Eu(e){return Yl(e,0)}var Au=ti({concat1d_:Eu});function $u(e,t){return Yl(e,t)}var Ru=ti({concat2d_:$u});function Fu(e,t){return Yl(e,t)}var Du=ti({concat3d_:Fu});function Mu(e,t){return Yl(e,t)}var Ou=ti({concat4d_:Mu});function Lu(e,t,n,r,a="NHWC",s=[1,1],i){let o=Js(e,"x","conv2d","float32"),l=Js(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Vl("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];Q(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),Q(Pl(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q(Bl(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),Q(Bl(n),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Bs.runKernel(Nt,d,c);return h?Gl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var zu=ti({conv2d_:Lu});function Pu(e,t,n,r,a="NWC",s=1,i){let o=Js(e,"x","conv1d"),l=Js(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=Gl(o,[1,o.shape[0],o.shape[1]])),Q(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),Q(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Vl("conv1d",r,i),Q(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),Q(Pl(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),Q(Bl(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),Q(Bl(n),()=>"Error in conv1D: Stride should be larger than 0."),Q("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let p=Gl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Gl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=zu(d,p,[1,n],r,"NHWC",[1,s],i);return Gl(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}var Bu=ti({conv1d_:Pu});function Wu(e,t,n,r,a,s="NHWC",i){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Q(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),Q(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];Q(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),Q(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),Vl("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Bs.runKernel(Ct,d,c);return u?Gl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Vu=ti({conv2DBackpropInput_:Wu});function Uu(e,t,n,r,a,s){let i=Js(e,"x","conv2dTranspose"),o=Js(t,"filter","conv2dTranspose");return Vu(n,i,o,r,a,"NHWC",s)}var Gu=ti({conv2dTranspose_:Uu});function Hu(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Js(e,"x","conv3d"),o=Js(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),Q(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Q(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Q(Pl(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),Q(Bl(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),Q(Bl(n),()=>"Error in conv3D: Strides should be larger than 0.");let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=Bs.runKernel(_t,h,p);return u?Gl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var ju=ti({conv3d_:Hu});function qu(e,t,n,r,a){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Q(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),Q(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),Q(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),Q(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),Q(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=Bs.runKernel(At,h,p);return o?Gl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ku=ti({conv3DBackpropInput_:qu});function Xu(e,t,n,r,a){let s=Js(e,"x","conv3dTranspose"),i=Js(t,"filter","conv3dTranspose");return Ku(n,s,i,r,a)}var Yu=ti({conv3dTranspose_:Xu});function Zu(e){let t={x:Js(e,"x","cos","float32")};return Bs.runKernel($t,t)}var Ju=ti({cos_:Zu});function Qu(e){let t={x:Js(e,"x","cosh","float32")};return Bs.runKernel(Rt,t)}var eh=ti({cosh_:Qu});function th(e,t=0,n=!1,r=!1){let a={x:Js(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Bs.runKernel(Ft,a,s)}var nh=ti({cumprod_:th});function rh(e,t=0,n=!1,r=!1){let a={x:Js(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Bs.runKernel(Dt,a,s)}var ah=ti({cumsum_:rh});function sh(e,t,n,r=!1){let a=Js(e,"x","denseBincount"),s=Js(t,"weights","denseBincount");Q("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),Q(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return Bs.runKernel(Ot,i,o)}var ih=ti({denseBincount_:sh});function oh(e,t,n="NHWC"){let r=Js(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Q(t>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+t),Q(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),Q(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),Q(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return Bs.runKernel(Lt,o,l)}var lh=ti({depthToSpace_:oh});function uh(e,t,n,r,a="NHWC",s=[1,1],i){let o=Js(e,"x","depthwiseConv2d","float32"),l=Js(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p="NHWC"===a?u.shape[3]:u.shape[1];Q(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Vl("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Bs.runKernel(zt,d,c);return h?Gl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var hh=ti({depthwiseConv2d_:uh});function ph(e){let t={x:Js(e,"x","diag")};return Bs.runKernel(Wt,t)}var dh=ti({diag_:ph});function ch(e,t,n,r,a=[1,1],s="NHWC"){let i=Js(e,"x","dilation2d"),o=Js(t,"filter","dilation2d");Q(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),Q(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Q("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let l=i,u=!1;3===i.rank&&(l=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Q(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=Bs.runKernel(Vt,h,p);return u?Gl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var fh=ti({dilation2d_:ch}),mh={};function gh(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function yh(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function bh(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){let n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}function xh(e,t){let n=Js(e,"a","equal","string_or_numeric"),r=Js(t,"b","equal","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(Yt,a)}b(mh,{assertAndGetBroadcastShape:()=>bh,getBroadcastDims:()=>gh,getReductionAxes:()=>yh});var wh=ti({equal_:xh});function vh(e,t,n){let r=Js(t,"a","where"),a=Js(n,"b","where"),s=Js(e,"condition","where","bool"),i=bh(bh(s.shape,r.shape),a.shape),o=Iu(s,i),l=Iu(r,i),u=Iu(a,i),h={condition:o,t:l,e:u};return Bs.runKernel(kr,h)}var kh=ti({where_:vh});function Ih(e){let t={x:Js(e,"x","zerosLike")};return Bs.runKernel(ra,t)}var Sh=ti({zerosLike_:Ih});function Nh(e,t){let n=Js(e,"a","div"),r=Js(t,"b","div");[n,r]=Es(n,r);let a=Xo(n,r),s=Sh(a),i=wh(r,s);return kh(i,s,a)}var Th=ti({divNoNan_:Nh});function Ch(e,t){let n=Js(e,"t1","dot"),r=Js(t,"t2","dot");Q((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Q(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){let e=Gl(n,[1,-1]),t=Gl(r,[-1,1]),a=Jl(e,t);return Gl(a,[])}if(1===n.rank&&2===r.rank){let e=Gl(n,[1,-1]),t=Gl(r,[r.shape[0],r.shape[1]]),a=Jl(e,t);return Gl(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Gl(r,[-1,1]),t=Jl(n,e);return Gl(t,[t.size])}{let e=Gl(r,[r.shape[0],r.shape[1]]);return Jl(n,e)}}var _h=ti({dot_:Ch});function Eh(e,...t){let n=t.map((e,t)=>Js(e,"tensors"+t,"einsum")),r={equation:e};return Bs.runKernel(jt,n,r)}var Ah=ti({einsum_:Eh});function $h(e){let t={x:Js(e,"x","elu","float32")};return Bs.runKernel(qt,t)}var Rh=ti({elu_:$h});function Fh(e){let t=Js(e,"x","erf");Q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=bo(t,"float32"));let n={x:t};return Bs.runKernel(Xt,n)}var Dh=ti({erf_:Fh});function Mh(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Oh(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Lh(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);let a=t.map(t=>e[t]);return[n,a]}function zh(e,t){let n=t.map(e=>1);return Oh(e,n,t)}function Ph(e,t,n){Q(Mh(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Bh(e,t){if(Mh(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Wh(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Vh(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function Uh(e,t=null,n=!1){let r={x:Js(e,"x","max")},a={reductionIndices:t,keepDims:n};return Bs.runKernel($n,r,a)}var Gh=ti({max_:Uh});function Hh(e,t=null,n=!1){let r={x:Js(e,"x","min")},a={axis:t,keepDims:n};return Bs.runKernel(Pn,r,a)}var jh=ti({min_:Hh});function qh(e,t){let n=Js(e,"base","pow"),r=Js(t,"exp","pow");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(tr,a)}var Kh=ti({pow_:qh});function Xh(e,t){if((Xa(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Xa(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ai(e,[],[],t)}function Yh(e){let t={x:Js(e,"x","sqrt","float32")};return Bs.runKernel(Ar,t)}var Zh=ti({sqrt_:Yh});function Jh(e){let t=Js(e,"x","square"),n={};return Bs.runKernel("Square",{x:t},n)}var Qh=ti({square_:Jh});function ep(e,t=null,n=!1){let r=Js(e,"x","sum");"bool"===r.dtype&&(r=bo(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Bs.runKernel($r,a,s)}var tp=ti({sum_:ep});function np(e,t="euclidean",n=null,r=!1){e=Js(e,"x","norm");let a=rp(e,t,n),s=a.shape;if(r){let t=de(n,e.shape);s=zh(a.shape,t)}return Gl(a,s)}function rp(e,t,n=null){if(0===e.rank)return Qo(e);if(1!==e.rank&&null===n)return rp(Gl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return tp(Qo(e),n);if(t===1/0)return Gh(Qo(e),n);if(t===-1/0)return jh(Qo(e),n);if("euclidean"===t||2===t)return Zh(tp(Kh(Qo(e),Xh(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return Gh(tp(Qo(e),n[0]),n[1]-1);if(t===1/0)return Gh(tp(Qo(e),n[1]),n[0]);if(t===-1/0)return jh(tp(Qo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Zh(tp(Qh(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}var ap=ti({norm_:np});function sp(e,t=null,n=!1){return ap(e,"euclidean",t,n)}var ip=ti({euclideanNorm_:sp});function op(e){let t={x:Js(e,"x","exp")};return Bs.runKernel(Zt,t)}var lp=ti({exp_:op});function up(e,t=0){let n=Js(e,"x","expandDims","string_or_numeric");Q(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return Bs.runKernel(Jt,r,a)}var hp=ti({expandDims_:up});function pp(e){let t={x:Js(e,"x","expm1")};return Bs.runKernel(Qt,t)}var dp=ti({expm1_:pp});function cp(e,t){let n=Js(e,"x","tile","string_or_numeric");Q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return Bs.runKernel(Xr,r,a)}var fp=ti({tile_:cp});function mp(e,t,n,r="float32"){null==t&&(t=e);let a=go([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=Gl(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return fp(hp(i,0),[n[0],1,1]);if(2===n.length)return fp(hp(hp(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return fp(hp(hp(hp(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var gp=ti({eye_:mp});function yp(e){let t={x:Js(e,"x","floor","float32")};return Bs.runKernel(rn,t)}var bp=ti({floor_:yp});function xp(e,t,n=0,r=0){let a=Js(e,"x","gather"),s=Js(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return Bs.runKernel(on,i,o)}var wp=ti({gather_:xp});function vp(e,t){let n=Js(e,"a","greater","string_or_numeric"),r=Js(t,"b","greater","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(un,a)}var kp=ti({greater_:vp});function Ip(e,t){let n=Js(e,"a","greaterEqual","string_or_numeric"),r=Js(t,"b","greaterEqual","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(hn,a)}var Sp=ti({greaterEqual_:Ip});function Np(e){let t={input:Js(e,"input","imag")};return Bs.runKernel(cn,t)}var Tp=ti({imag_:Np});function Cp(e){let t={x:Js(e,"x","isFinite")};return Bs.runKernel(fn,t)}var _p=ti({isFinite_:Cp});function Ep(e){let t={x:Js(e,"x","isInf")};return Bs.runKernel(mn,t)}var Ap=ti({isInf_:Ep});function $p(e){let t={x:Js(e,"x","isNaN")};return Bs.runKernel(gn,t)}var Rp=ti({isNaN_:$p});function Fp(e,t=.2){let n={x:Js(e,"x","leakyRelu")},r={alpha:t};return Bs.runKernel(yn,n,r)}var Dp=ti({leakyRelu_:Fp});function Mp(e,t){let n=Js(e,"a","less","string_or_numeric"),r=Js(t,"b","less","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(bn,a)}var Op=ti({less_:Mp});function Lp(e,t){let n=Js(e,"a","lessEqual","string_or_numeric"),r=Js(t,"b","lessEqual","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(xn,a)}var zp=ti({lessEqual_:Lp});function Pp(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Bs.runKernel(wn,{},r)}function Bp(e,t=5,n=1,r=1,a=.5){let s=Js(e,"x","localResponseNormalization");Q(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),Q(se(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=Gl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=Bs.runKernel(En,l,u);return o?Gl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Wp=ti({localResponseNormalization_:Bp});function Vp(e){let t={x:Js(e,"x","log","float32")};return Bs.runKernel(vn,t)}var Up=ti({log_:Vp});function Gp(e){let t={x:Js(e,"x","log1p")};return Bs.runKernel(kn,t)}var Hp=ti({log1p_:Gp});function jp(e){return Q(Ne(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=Js(t,"x","tf.grad","string_or_numeric"),a=null!=n?Js(n,"dy","tf.grad"):null;return Bs.tidy(()=>{let{value:t,grads:n}=Bs.gradients(()=>e(r),[r],a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Jp(n),n[0]})}}function qp(e){return Q(Ne(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{Q(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Qs(t,"args","tf.grads","string_or_numeric"),a=null!=n?Js(n,"dy","tf.grads"):null;return Bs.tidy(()=>{let{value:t,grads:n}=Bs.gradients(()=>e(...r),r,a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jp(n),n})}}function Kp(e){return Q(Ne(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{Q(t instanceof ys,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),Q(null==n||n instanceof ys,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=Bs.gradients(()=>e(t),[t],n);return Jp(r),{grad:r[0],value:a}}}function Xp(e){return Q(Ne(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{Q(Array.isArray(t)&&t.every(e=>e instanceof ys),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),Q(null==n||n instanceof ys,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=Bs.gradients(()=>e(...t),t,n);return null!=n&&ee(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jp(r.grads),r}}function Yp(e,t){Q(Ne(e),()=>"The f passed in variableGrads(f) must be a function"),Q(null==t||Array.isArray(t)&&t.every(e=>e instanceof xs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n){t=[];for(let e in Bs.registeredVariables)t.push(Bs.registeredVariables[e])}let r=n?t.filter(e=>!e.trainable):null,a=t.length;t=t.filter(e=>e.trainable),Q(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=Bs.gradients(e,t,null,s);Q(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Q(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((e,t)=>{null!=o[t]&&(l[e.name]=o[t])}),null!=r&&r.forEach(e=>l[e.name]=null),{value:i,grads:l}}function Zp(e){return Bs.customGrad(e)}function Jp(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Qp(e){let t={x:Js(e,"x","neg")};return Bs.runKernel(Hn,t)}var ed=ti({neg_:Qp});function td(e){let t={x:Js(e,"x","softplus")};return Bs.runKernel(Er,t)}var nd=ti({softplus_:td});function rd(e){let t=Js(e,"x","logSigmoid");return Zp(e=>({value:ed(nd(ed(e))),gradFunc:t=>Zo(t,eu(ed(e)))}))(t)}var ad=ti({logSigmoid_:rd});function sd(e,t){let n=Js(e,"a","sub"),r=Js(t,"b","sub");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(jr,a)}var id=ti({sub_:sd});function od(e,t=-1){let n=Js(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Zp((e,n)=>{let r=Gh(e,t,!0),a=id(e,r),s=id(bo(a,"float32"),Up(tp(lp(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=!0,s=lp(r);return id(e,Zo(tp(e,t,a),s))}}})(n)}var ld=ti({logSoftmax_:od});function ud(e,t=null,n=!1){let r=Js(e,"x","logSumExp"),a=de(t,r.shape),s=Gh(r,a,!0),i=id(r,s),o=lp(i),l=tp(o,a),u=Up(l),h=Ho(Gl(s,u.shape),u);if(n){let e=zh(h.shape,a);return Gl(h,e)}return h}var hd=ti({logSumExp_:ud});function pd(e,t){let n=Js(e,"a","logicalAnd","bool"),r=Js(t,"b","logicalAnd","bool");bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(In,a)}var dd=ti({logicalAnd_:pd});function cd(e){let t={x:Js(e,"x","logicalNot","bool")};return Bs.runKernel(Sn,t)}var fd=ti({logicalNot_:cd});function md(e,t){let n=Js(e,"a","logicalOr","bool"),r=Js(t,"b","logicalOr","bool");bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(Nn,a)}var gd=ti({logicalOr_:md});function yd(e,t){let n=Js(e,"a","logicalXor","bool"),r=Js(t,"b","logicalXor","bool");return bh(n.shape,r.shape),dd(gd(e,t),fd(dd(e,t)))}var bd=ti({logicalXor_:yd}),xd=2147483648;function wd(e,t,n="left"){let r=Js(e,"sortedSequence","searchSorted"),a=Js(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=Gl(r,[-1,s]),l=Gl(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ne(l.shape)>=xd)throw new Error("values tensor size must less than "+xd);if(o.shape[1]>=xd)throw new Error(`trailing dim_size must less than ${xd} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},h={side:n};return Bs.runKernel(vr,u,h)}var vd=ti({searchSorted_:wd});function kd(e,t){return vd(e,t,"left")}function Id(e,t,n,r,a){let s=Js(e,"x","maxPool"),i=1,o=s,l=!1;3===s.rank&&(l=!0,o=Gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),Q(Pl(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Vl("maxPool",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Bs.runKernel(Fn,u,h);return l?Gl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Sd=ti({maxPool_:Id});function Nd(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Js(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),Vl("maxPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Bs.runKernel(Mn,u,h);return l?Gl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Td=ti({maxPool3d_:Nd});function Cd(e,t,n,r,a=!1){let s={x:Js(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Bs.runKernel(Ln,s,i);return{result:o[0],indexes:o[1]}}var _d=ti({maxPoolWithArgmax_:Cd});function Ed(e,t){let n=Js(e,"a","maximum"),r=Js(t,"b","maximum");[n,r]=Es(n,r),"bool"===n.dtype&&(n=bo(n,"int32"),r=bo(r,"int32")),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(Rn,a)}var Ad=ti({maximum_:Ed});function $d(e,t=null,n=!1){let r={x:Js(e,"x","mean")},a={axis:t,keepDims:n};return Bs.runKernel(zn,r,a)}var Rd=ti({mean_:$d});function Fd(e,t="float32"){if(De(e),"complex64"===t){let t=Fd(e,"float32"),n=Fd(e,"float32");return ri(t,n)}let n=Re(ne(e),t);return Bs.makeTensor(n,e,t)}function Dd(e,t="float32"){if(De(e),"complex64"===t){let t=Dd(e,"float32"),n=Fd(e,"float32");return ri(t,n)}let n=$e(ne(e),t);return Bs.makeTensor(n,e,t)}function Md(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=Js(e,"x","meshgrid",e instanceof ys?e.dtype:"float32");if(void 0===t)return[r];let a=Js(t,"y","meshgrid",t instanceof ys?t.dtype:"float32"),s=ne(r.shape),i=ne(a.shape);return"xy"===n?(r=Gl(r,[1,-1]),a=Gl(a,[-1,1]),[Jl(Dd([i,1],r.dtype),r),Jl(a,Dd([1,s],a.dtype))]):(r=Gl(r,[-1,1]),a=Gl(a,[1,-1]),[Jl(r,Dd([1,i],r.dtype)),Jl(Dd([s,1],a.dtype),a)])}function Od(e,t){let n=Js(e,"a","minimum"),r=Js(t,"b","minimum");[n,r]=Es(n,r),"bool"===n.dtype&&(n=bo(n,"int32"),r=bo(r,"int32")),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(Bn,a)}var Ld=ti({minimum_:Od});function zd(e,t,n){Q("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=Js(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)Q(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),Q(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return Bs.runKernel(Wn,i,s)}var Pd=ti({mirrorPad_:zd});function Bd(e,t){let n=Js(e,"a","mod"),r=Js(t,"b","mod");[n,r]=Es(n,r);let a={a:n,b:r};return Bs.runKernel(Vn,a)}var Wd=ti({mod_:Bd});function Vd(e,t=null,n=!1){e=Js(e,"x","moments");let r=de(t,e.shape),a=Rd(e,r,n),s=a.shape;n||(s=zh(a.shape,r));let i=Qh(id(bo(e,"float32"),Gl(a,s))),o=Rd(i,r,n);return{mean:a,variance:o}}var Ud=ti({moments_:Vd});function Gd(e,t,n,r){let a=Js(t,"data","multiRNNCell"),s=Qs(n,"c","multiRNNCell"),i=Qs(r,"h","multiRNNCell"),o=a,l=[];for(let p=0;p<e.length;p++){let t=e[p](o,s[p],i[p]);l.push(t[0]),l.push(t[1]),o=t[1]}let u=[],h=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),h.push(l[p+1]);return[u,h]}var Hd=ti({multiRNNCell_:Gd});function jd(e,t,n,r=!1){let a=Js(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();let o={logits:1===i?Gl(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Bs.runKernel(Un,o,l);return 1===i?Gl(u,[u.size]):u}var qd=ti({multinomial_:jd});function Kd(e,t){let n=Js(e,"a","notEqual","string_or_numeric"),r=Js(t,"b","notEqual","string_or_numeric");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r};return Bs.runKernel(jn,a)}var Xd=ti({notEqual_:Kd});function Yd(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);let s={indices:Js(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return Bs.runKernel(Zn,s,i)}var Zd=ti({oneHot_:Yd});function Jd(e){let t={x:Js(e,"x","onesLike")};return Bs.runKernel(Yn,t)}var Qd=ti({onesLike_:Jd});function ec(e,t){let n=Js(e,"v1","outerProduct"),r=Js(t,"v2","outerProduct");Q(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=Gl(n,[-1,1]),s=Gl(r,[1,-1]);return Jl(a,s)}var tc=ti({outerProduct_:ec});function nc(e,t,n=0){let r=Js(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Bs.runKernel(Qn,s,a)}var rc=ti({pad_:nc});function ac(e,t,n=0){return Q(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),rc(e,[t],n)}var sc=ti({pad1d_:ac});function ic(e,t,n=0){return Q(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),rc(e,t,n)}var oc=ti({pad2d_:ic});function lc(e,t,n=0){return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),rc(e,t,n)}var uc=ti({pad3d_:lc});function hc(e,t,n=0){return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),rc(e,t,n)}var pc=ti({pad4d_:hc});function dc(e,t,n){let r=Js(e,"x","spaceToBatchND");Q(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),Q(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),Q(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return Bs.runKernel(Rr,a,s)}var cc=ti({spaceToBatchND_:dc});function fc(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Js(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(Pl(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let h,p=Nl(l.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];h="same"===r?gc([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=mc([p.inHeight,p.inWidth],d,h),g=c?r:"valid",y=c?l:cc(l,d,f),b=("avg"===n?()=>jl(y,t,s,g,i):()=>Sd(y,t,s,g,i))(),x=c?b:lu(b,d,m);return u?Gl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function mc(e,t,n){let r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),l=t.map((e,t)=>[r[t],o[t]]),u=t.map((e,t)=>[0,i[t]]);return[l,u]}function gc(e,t){let n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}var yc=ti({pool_:fc});function bc(e,t){let n=Js(e,"x","prelu"),r=Js(t,"alpha","prelu"),a={x:n,alpha:r};return Bs.runKernel(nr,a)}var xc=ti({prelu_:bc});function wc(e,t=null,n=!1){let r=Js(e,"x","prod");"bool"===r.dtype&&(r=bo(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Bs.runKernel(rr,a,s)}var vc=ti({prod_:wc});function kc(e,t,n,r){let a=e.map((e,t)=>Js(e,"tensors"+t,"raggedGather","int32")),s=Js(t,"paramsDenseValues","raggedGather"),i=Js(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=Bs.runKernel(ar,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var Ic=ti({raggedGather_:kc});function Sc(e,t,n){let r=Js(e,"starts","raggedRange"),a=Js(t,"limits","raggedRange",r.dtype),s=Js(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=Bs.runKernel(sr,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var Nc=ti({raggedRange_:Sc});function Tc(e,t,n,r,a){let s=Js(e,"shape","raggedTensorToTensor","int32"),i=Js(t,"values","raggedTensorToTensor"),o=Js(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((e,t)=>Js(e,"tensors"+t,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},h={rowPartitionTypes:a};return Bs.runKernel(ir,u,h)}var Cc=ti({raggedTensorToTensor_:Tc});function _c(e,t,n){De(e);let r=ne(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return Bs.makeTensor(a,e,n)}var Ec=ti({rand_:_c}),Ac=w(R()),$c={};b($c,{TEST_EPSILON_FLOAT16:()=>Fc,createVideoElement:()=>Gc,encodeStrings:()=>Uc,expectArrayBuffersEqual:()=>Vc,expectArraysClose:()=>Dc,expectArraysEqual:()=>zc,expectNumbersClose:()=>Pc,expectPromiseToFail:()=>Lc,expectValuesInRange:()=>Wc,play:()=>Hc,testEpsilon:()=>Mc});var Rc=.001,Fc=.1;function Dc(e,t,n){return null==n&&(n=Mc()),Oc(e,t,(e,t)=>Bc(e,t,n))}function Mc(){return 32===Bs.backend.floatPrecision()?Rc:Fc}function Oc(e,t,n){let r=!0;if((Xa(e)||Xa(t))&&(r=!1),Xa(e)&&Xa(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Xs(e),r=Xs(t);if(!ae(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=Xa(e)?e:Ya(e),s=Xa(t)?t:Ya(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){let e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function Lc(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function zc(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ve(e)||ve(e[0])||ve(t)||ve(t[0])?Oc(e,n,(e,t)=>e==t):Oc(e,t,(e,t)=>Bc(e,t,0))}function Pc(e,t,n){if(null==n&&(n=Mc()),!Bc(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Bc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Wc(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Vc(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function Uc(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Uc(n):e[t]=qa(n)}return e}function Gc(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function Hc(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var jc=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Ac.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},qc=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Ac.alea(a.toString()),this.randn=new jc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},Kc=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ac.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function Xc(e,t,n=1,r="float32",a){if(De(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);let s=new qc(t,n,r,a),i=go(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Yc=ti({randomGamma_:Xc});function Zc(e,t=0,n=1,r,a){if(De(e),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);let s=new jc(t,n,r,!1,a),i=go(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Jc=ti({randomNormal_:Zc});function Qc(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type "+t);return Jc(e,0,1,t,n)}var ef=ti({randomStandardNormal_:Qc});function tf(e,t=0,n=1,r="float32",a){De(e);let s=go(e,r),i=new Kc(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var nf=ti({randomUniform_:tf});function rf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Bs.runKernel(or,{},a)}function af(e){let t={input:Js(e,"input","real")};return Bs.runKernel(lr,t)}var sf=ti({real_:af});function of(e){let t={x:Js(e,"x","reciprocal")};return Bs.runKernel(ur,t)}var lf=ti({reciprocal_:of});function uf(e){let t={x:Js(e,"x","relu")};return Bs.runKernel(hr,t)}var hf=ti({relu_:uf});function pf(e){let t={x:Js(e,"x","relu6")};return Bs.runKernel(gr,t)}var df=ti({relu6_:pf});function cf(e,t){let n={x:Js(e,"x","reverse")},r={dims:t};return Bs.runKernel(yr,n,r)}var ff=ti({reverse_:cf});function mf(e){let t=Js(e,"x","reverse");return Q(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ff(t,0)}var gf=ti({reverse1d_:mf});function yf(e,t){let n=Js(e,"x","reverse");return Q(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ff(n,t)}var bf=ti({reverse2d_:yf});function xf(e,t){let n=Js(e,"x","reverse");return Q(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ff(n,t)}var wf=ti({reverse3d_:xf});function vf(e,t){let n=Js(e,"x","reverse");return Q(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ff(n,t)}var kf=ti({reverse4d_:vf});function If(e){let t={x:Js(e,"x","round")};return Bs.runKernel(br,t)}var Sf=ti({round_:If});function Nf(e){let t={x:Js(e,"x","rsqrt","float32")};return Bs.runKernel(xr,t)}var Tf=ti({rsqrt_:Nf});function Cf(e){let t={x:Js(e,"x","selu")};return Bs.runKernel(Ir,t)}var _f=ti({selu_:Cf});function Ef(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Js(e,"x","separableConv2d"),l=Js(t,"depthwiseFilter","separableConv2d"),u=Js(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),Q(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),Q(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),Q(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];Q(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let f=hh(h,l,r,a,i,s),m=zu(f,u,1,"valid",i);return p?Gl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Af=ti({separableConv2d_:Ef});async function $f(e,t){let n=Js(e,"x","setdiff1d"),r=Js(t,"y","setdiff1d");Q(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),Q(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),Q(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let h=0;h<a.length;h++)i.has(a[h])||o++;let l=new ps([o],n.dtype),u=new ps([o],"int32");for(let h=0,p=0;h<a.length;h++)i.has(a[h])||(l.values[p]=a[h],u.values[p]=h,p++);return[l.toTensor(),u.toTensor()]}var Rf=$f;function Ff(e){let t={x:Js(e,"x","sign")};return Bs.runKernel(Cr,t)}var Df=ti({sign_:Ff});function Mf(e){let t={x:Js(e,"x","sin","float32")};return Bs.runKernel(Nr,t)}var Of=ti({sin_:Mf});function Lf(e){let t={x:Js(e,"x","sinh")};return Bs.runKernel(Tr,t)}var zf=ti({sinh_:Lf});function Pf(e,t,n){let r=Js(e,"x","slice1d");return Q(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),nu(r,[t],[n])}var Bf=ti({slice1d_:Pf});function Wf(e,t,n){let r=Js(e,"x","slice2d");return Q(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),nu(r,t,n)}var Vf=ti({slice2d_:Wf});function Uf(e,t,n){let r=Js(e,"x","slice3d");return Q(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),nu(r,t,n)}var Gf=ti({slice3d_:Uf});function Hf(e,t,n){let r=Js(e,"x","slice4d");return Q(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),nu(r,t,n)}var jf=ti({slice4d_:Hf});function qf(e,t=-1){let n=Js(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Bs.runKernel(Dr,r,a)}var Kf=ti({softmax_:qf});function Xf(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Bs.runKernel(en,t)}var Yf=ti({fft_:Xf});function Zf(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Bs.runKernel(dn,t)}var Jf=ti({ifft_:Zf});function Qf(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Gl(e,[r,n]);t=Jf(a)}else{let a=[r,2*(n-1)],s=Gl(sf(e),[r,n]),i=Gl(Tp(e),[r,n]),o=ff(nu(s,[0,1],[r,n-2]),1),l=Zo(ff(nu(i,[0,1],[r,n-2]),1),Xh(-1)),u=Yl([s,o],1),h=Yl([i,l],1),p=Gl(ri(u,h),[a[0],a[1]]);t=Jf(p)}if(t=sf(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Gl(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}var em=ti({irfft_:Qf});function tm(e,t,n=0){let r={x:Js(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Bs.runKernel(Fr,r,a)}var nm=ti({split_:tm});function rm(e,t){Q("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,n=nu(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map(e=>e);a[e.shape.length-1]=t-r,n=Yl([e,Fd(a)],e.shape.length-1),r=t}else n=e;let s=Sh(n),i=Gl(ri(n,s),[a,r]),o=Yf(i),l=Math.floor(r/2)+1,u=sf(o),h=Tp(o),p=nm(u,[l,r-l],u.shape.length-1),d=nm(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Gl(ri(p[0],d[0]),c)}var am=ti({rfft_:rm});function sm(e,t){let n=Js(e,"a","squaredDifference"),r=Js(t,"b","squaredDifference");[n,r]=Es(n,r),bh(n.shape,r.shape);let a={a:n,b:r},s={};return Bs.runKernel(Br,a,s)}var im=ti({squaredDifference_:sm});function om(e,t){let n=Js(e,"x","squeeze","string_or_numeric");return Gl(n,ce(n.shape,t).newShape)}var lm=ti({squeeze_:om});function um(e,t=0){let n=Qs(e,"tensors","stack","string_or_numeric");Q(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Q(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return Bs.runKernel(Jn,r,a)}var hm=ti({stack_:um});function pm(e,t=0){let n={x:Js(e,"x","step")},r={alpha:t};return Bs.runKernel(aa,n,r)}var dm=ti({step_:pm});function cm(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Js(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Bs.runKernel(Vr,u,h)}var fm=ti({stridedSlice_:cm});function mm(e){let t={x:Js(e,"x","tan","float32")};return Bs.runKernel(qr,t)}var gm=ti({tan_:mm});function ym(e,t){te(e);let n=Xs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ai(e,null,n,t)}function bm(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Xs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ai(e,t,r,n)}function xm(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Xs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ai(e,t,r,n)}function wm(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Xs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ai(e,t,r,n)}function vm(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Xs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ai(e,t,r,n)}function km(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Xs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ai(e,t,r,n)}function Im(e,t=1,n=!0){let r=Js(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Bs.runKernel(Yr,s,i);return{values:o,indices:l}}var Sm=ti({topk_:Im});function Nm(e,t=0,n=1,r,a){if(De(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new jc(t,n,r,!0,a),i=go(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Tm=ti({truncatedNormal_:Nm});function Cm(e,t=0){let n=Js(e,"x","unique","string_or_numeric");Q(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=Bs.runKernel(Qr,r,a);return{values:s,indices:i}}var _m=ti({unique_:Cm});function Em(e,t,n){let r=Js(e,"x","unsortedSegmentSum"),a=Js(t,"segmentIds","unsortedSegmentSum","int32");Q(se(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return Bs.runKernel(ta,s,i)}var Am=ti({unsortedSegmentSum_:Em});function $m(e,t=0){let n=Js(e,"x","unstack","string_or_numeric");Q(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return Bs.runKernel(ea,r,a)}var Rm=ti({unstack_:$m});function Fm(e,t){return vd(e,t,"right")}function Dm(e,t=!0,n,r){return Bs.makeVariable(e,t,n,r)}function Mm(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=go(e,"int32"),a=go([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let t=r.indexToLoc(n[s]),i=s*e.length;a.values.set(t,i)}return a.toTensor()}async function Om(e){let t=Js(e,"condition","whereAsync","bool"),n=await t.data(),r=Mm(t.shape,n);return e!==t&&t.dispose(),r}var Lm=Om;async function zm(e,t,n){let r=Js(e,"tensor","boolMask"),a=Js(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Q(i>0,()=>"mask cannot be scalar"),ee(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=Gl(r,u),p=Gl(a,[-1]),d=await Lm(p),c=lm(d,[1]),f=wp(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f}var Pm=zm;function Bm(e,t,n){let r=Js(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),Q(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{Q(e>=0&&e<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?$o(()=>{let e=sf(r),t=Tp(r);return e=Bs.runKernel(Jr,{x:e},s),t=Bs.runKernel(Jr,{x:t},s),n&&(t=ed(t)),ri(e,t)}):Bs.runKernel(Jr,a,s)}var Wm=ti({transpose_:Bm});function Vm(e,t,n,r,a=!0){let s=Js(e,"v","movingAverage"),i=Js(t,"x","movingAverage"),o=Js(n,"decay","movingAverage");As(s,i),Q(ae(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=Xh(1),u=id(l,o),h=Zo(id(i,s),u);if(a){Q(null!=r,()=>"When using zeroDebias: true, step is required.");let e=Js(r,"step","movingAverage");h=Xo(h,id(l,Kh(o,e)))}return Ho(s,h)}var Um=ti({movingAverage_:Vm}),Gm={};function Hm(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function jm(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Hm(n,t,e)}function qm(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let p=a;p<s;++p)i*=n[p];let o=a<1?1:a,l=ne(t.shape)/o,u=[...Ce(n.slice(0,a)),1],h=ne(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:h}}function Km(e,t,n){De(n);let r=Js(e,"indices","scatterND","int32"),a=Js(t,"updates","scatterND");jm(a,r,n);let s={indices:r,updates:a},i={shape:n};return Bs.runKernel(wr,s,i)}b(Gm,{calculateShapes:()=>qm,validateInput:()=>jm,validateUpdateShape:()=>Hm});var Xm=ti({scatterND_:Km});function Ym(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function Zm(e,t,n,r=0){De(n);let a=Js(e,"sparseIndices","sparseToDense","int32"),s=Js(t,"sparseValues","sparseToDense","string_or_numeric"),i=Js(r,"defaultValue","sparseToDense",s.dtype);Ym(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Bs.runKernel(Pr,o,l)}var Jm=ti({sparseToDense_:Zm});function Qm(e,t){let n=Js(t,"indices","gatherND","int32"),r={params:Js(e,"x","gatherND","string_or_numeric"),indices:n};return Bs.runKernel(ln,r)}var eg=ti({gatherND_:Qm});function tg(e,t){if(null==t)return e.shape.slice();if(ae(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}function ng(e,t,n,r){let a=Js(e,"x","dropout");if(Q("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),Q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof ys?a.clone():a;let s=tg(a,n),i=1-t,o=Xo(bp(Ho(nf(s,0,1,"float32",r),i)),i);return Zo(a,o)}var rg=ti({dropout_:ng});function ag(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function sg(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ym(a,"float32")}async function ig(e,t,n=1){let r=Js(e,"predictions","inTopK"),a=Js(t,"targets","inTopK");Q(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Q(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),ee(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Q(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=fe("bool",l);for(let p=0;p<l;p++){let e=p*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),h[p]=0;for(let a=0;a<n;a++)if(r[a].index===o[p]){h[p]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),si(h,a.shape,"bool")}var og=ig,lg={};function ug(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Q(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),Q(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];Q(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),Q(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),Vl("conv2dDerFilter",a,i);let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Bs.runKernel(Tt,p,d)}b(lg,{conv2d:()=>gg,depthwiseConv2d:()=>kg,matMul:()=>Sg});var hg=ti({conv2DBackpropFilter_:ug});function pg(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Zo(e,dm(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function dg(e,t){let n=t,r=yh(e.shape,t.shape);return r.length>0&&(n=tp(n,r)),Gl(n,e.shape)}function cg(e,t,n,r){if("linear"===t)return e;if("relu"===t)return hf(e);if("elu"===t)return Rh(e);if("relu6"===t)return df(e);if("prelu"===t)return xc(e,n);if("leakyrelu"===t)return Dp(e,r);if("sigmoid"===t)return eu(e);throw new Error(`Unknown fused activation ${t}.`)}var fg=(e,t)=>!(e>0)||"linear"===t;function mg({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===fg(Bs.state.gradientDepth,l)){Q("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let p=zu(e,t,n,r,a,s,i);return null!=o&&(p=Ho(p,o)),cg(p,l,u,h)}let p=Js(e,"x","conv2d","float32"),d=Js(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Gl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Q(4===c.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),Q(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Vl("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];Q(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),Q(Pl(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g,y,b=Cl(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=Js(o,"bias","fused conv2d"),[g]=Es(g,p),"NHWC"===a?bh(b.outShape,g.shape):(Q(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),Q(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`))),null!=u){let e=u.shape;if(Q(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)Q(1===e[0]||e[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`);else if(3===e.length)try{bh(e,b.outShape)}catch(k){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(t)}y=Js(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Q("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[i,o,u,h]=t,p=pg(e,u,l);Q(zl(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let d=Vu(o.shape,p,i,n,r),c=hg(o,p,i.shape,n,r),f=[d,c];if(null!=h){let e=dg(h,p);f.push(e)}return f},w={x:c,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Zp((e,t,n)=>{let r=Bs.runKernel(la,w,v);return n([t,e,r]),f&&(r=Gl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(c,d):Zp((e,t,n,r)=>{let a=Bs.runKernel(la,w,v);return r([t,e,a,n]),f&&(a=Gl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(c,d,g)}var gg=ti({fusedConv2d_:mg});function yg(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Gl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Bs.runKernel(Pt,u,h)}var bg=ti({depthwiseConv2dNativeBackpropFilter_:yg});function xg(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=Bs.runKernel(Bt,u,h);return l?Gl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var wg=ti({depthwiseConv2dNativeBackpropInput_:xg});function vg({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===fg(Bs.state.gradientDepth,l)){let p=hh(e,t,n,r,a,s,i);return null!=o&&(p=Ho(p,o)),cg(p,l,u,h)}let p=Js(e,"x","depthwiseConv2d","float32"),d=Js(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Gl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Q(4===c.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),Q(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),Q(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==s&&(s=[1,1]),Q(Pl(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Vl("fused depthwiseConv2d",r,i);let m,g,y=Cl(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=Js(o,"bias","fused conv2d"),[m]=Es(m,p),bh(y.outShape,m.shape)),null!=u&&(g=Js(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Q(zl(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[a,o,u,h]=t,p=pg(e,u,l),d=wg(o.shape,p,a,n,r,s,i),c=bg(o,p,a.shape,n,r,s,i);if(null!=h){let e=dg(m,p);return[d,c,e]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Zp((e,t,n)=>{let r=Bs.runKernel(ua,x,w);return n([t,e,r]),f&&(r=Gl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(c,d):Zp((e,t,n,r)=>{let a=Bs.runKernel(ua,x,w);return r([t,e,a,n]),f&&(a=Gl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(c,d,m)}var kg=ti({fusedDepthwiseConv2d_:vg});function Ig({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===fg(Bs.state.gradientDepth,s)){let l=Jl(e,t,n,r);return null!=a&&(l=Ho(l,a)),cg(l,s,i,o)}let l=Js(e,"a","fused matMul"),u=Js(t,"b","fused matMul");[l,u]=Es(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ne(f),y=ne(m);Q(h===p,()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let b,x,w=bh(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),v=Gl(l,n?[g,h,d]:[g,d,h]),k=Gl(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=Js(a,"bias","fused matMul"),[b]=Es(b,l),bh(w,b.shape)),null!=i&&(x=Js(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=pg(Gl(e,h.shape),h,s);if(n||r?!n&&r?(i=Jl(d,u,!1,!1),o=Jl(d,l,!0,!1)):n&&!r?(i=Jl(u,d,!1,!0),o=Jl(l,d,!1,!1)):(i=Jl(u,d,!0,!0),o=Jl(d,l,!0,!0)):(i=Jl(d,u,!1,!0),o=Jl(l,d,!0,!1)),null!=a){let e=dg(p,d);return[i,o,e]}return[i,o]},S={a:v,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Zp((e,t,n)=>{let r=Bs.runKernel(oa,S,N);return n([e,t,r]),{value:Gl(r,w),gradFunc:I}})(v,k):Zp((e,t,n,r)=>{let a=Bs.runKernel(oa,S,N);return r([e,t,a,n]),{value:Gl(a,w),gradFunc:I}})(v,k,b)}var Sg=ti({fusedMatMul_:Ig});function Ng(e){return sg(e,.54,.46)}var Tg=ti({hammingWindow_:Ng});function Cg(e){return sg(e,.5,.5)}var _g=ti({hannWindow_:Cg});function Eg(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(nu(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=Yl([nu(e,s,t-r),Tu([r],a)]);i.push(o),s+=n}return 0===i.length?bm([],[0,t]):Gl(Yl(i),[i.length,t])}var Ag=ti({frame_:Eg});function $g(e,t,n,r,a=_g){null==r&&(r=ag(t));let s=Ag(e,t,n),i=Zo(s,a(t));return am(i,r)}var Rg=ti({stft_:$g});function Fg(e,t,n,r,a="bilinear",s=0){let i=Js(e,"image","cropAndResize"),o=Js(t,"boxes","cropAndResize","float32"),l=Js(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Q(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),Q(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),Q(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),Q(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),Q("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return Bs.runKernel(Mt,h,p)}var Dg=ti({cropAndResize_:Fg});function Mg(e){let t=Js(e,"image","flipLeftRight","float32");Q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return Bs.runKernel(nn,n,{})}var Og=ti({flipLeftRight_:Mg});function Lg(e){let t=Js(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Q(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),Q(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,fp(t,a)}var zg=ti({grayscaleToRGB_:Lg});function Pg(e,t,n=0,r=.5){let a=Js(e,"image","rotateWithOffset","float32");Q(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return Bs.runKernel(ia,s,i)}var Bg=ti({rotateWithOffset_:Pg});function Wg(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Q(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Q(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Q(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),Q(1===t.rank,()=>"scores must be a 1D tensor"),Q(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),Q(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function Vg(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Js(e,"boxes","nonMaxSuppression","float32"),i=Js(t,"scores","nonMaxSuppression","float32"),o=Wg(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Bs.runKernel(qn,{boxes:s,scores:i},l)}var Ug=ti({nonMaxSuppression_:Vg});function Gg(e,t,n){let r=Hg(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Hg(e,t,n){return qg(e,t,n||jg)}function jg(e,t){return e>t?1:e<t?-1:0}function qg(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function Kg(e,t,n,r,a){return Zg(e,t,n,r,a,0)}function Xg(e,t,n,r,a,s){return Zg(e,t,n,r,a,0,!1,s,!0)}function Yg(e,t,n,r,a,s){return Zg(e,t,n,r,a,s,!0)}function Zg(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(ey);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let l=p.length-1;l>=i;--l){let n=Jg(e,s,p[l]);if(n>=r){o=!0;break}if(t.score=t.score*Qg(r,h,n),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Gg(u,t,ey))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function Jg(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Qg(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function ey(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function ty(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Js(e,"boxes","nonMaxSuppressionAsync"),i=Js(t,"scores","nonMaxSuppressionAsync"),o=Wg(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=Kg(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ym(p,"int32")}var ny=ty;function ry(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Js(e,"boxes","nonMaxSuppression"),o=Js(t,"scores","nonMaxSuppression"),l=Wg(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},p=Bs.runKernel(Xn,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}var ay=ti({nonMaxSuppressionWithScore_:ry});async function sy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Js(e,"boxes","nonMaxSuppressionAsync"),o=Js(t,"scores","nonMaxSuppressionAsync"),l=Wg(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=Yg(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ym(d,"int32"),selectedScores:ym(c)}}var iy=sy;function oy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Js(e,"boxes","nonMaxSuppression"),o=Js(t,"scores","nonMaxSuppression"),l=Wg(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:h,scoreThreshold:p,padToMaxOutputSize:s},f=Bs.runKernel(Kn,d,c);return{selectedIndices:f[0],validOutputs:f[1]}}var ly=ti({nonMaxSuppressionPadded_:oy});async function uy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Js(e,"boxes","nonMaxSuppressionAsync"),o=Js(t,"scores","nonMaxSuppressionAsync"),l=Wg(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Xg(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ym(f,"int32"),validOutputs:Xh(m,"int32")}}var hy=uy;function py(e,t,n=!1,r=!1){let a=Js(e,"images","resizeBilinear");Q(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),Q(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Gl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Bs.runKernel(fr,o,l);return i?Gl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var dy=ti({resizeBilinear_:py});function cy(e,t,n=!1,r=!1){let a=Js(e,"images","resizeNearestNeighbor");Q(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),Q("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Q(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Gl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Bs.runKernel(dr,o,l);return i?Gl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var fy=ti({resizeNearestNeighbor_:cy});function my(e,t="binary",n=!1,r=.5){let a,s,i,o,l=Js(e,"image","threshold"),u=.2989,h=.587,p=.114,d=l.shape[0]*l.shape[1],c=Zo(ym([r]),255);if(Q(3===l.rank,()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`),Q(3===l.shape[2]||1===l.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`),Q("int32"===l.dtype||"float32"===l.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`),Q("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===l.shape[2]){[a,s,i]=nm(l,[1,1,1],-1);let e=Zo(a,u),t=Zo(s,h),n=Zo(i,p);o=Ho(Ho(e,t),n)}else o=e;if("otsu"===t){let e=xu(bo(Sf(o),"int32"),si([]),256);c=gy(e,d)}let f=n?zp(o,c):kp(o,c);return bo(Zo(f,255),"int32")}function gy(e,t){let n,r,a,s,i,o,l=ym([-1]),u=ym([0]),h=ym([0]);for(let p=0;p<e.size-1;p++){n=nu(e,0,p+1),r=nu(e,p+1),i=Xo(tp(n),t),o=Xo(tp(r),t);let d=tp(Zo(n,rf(0,n.size)));a=Xo(d,tp(n));let c=Tu(r.shape,n.size),f=Ho(rf(0,r.size),c),m=Zo(r,f);s=Xo(tp(m),tp(r));let g=id(a,s),y=id(a,s),b=Zo(i,o);h=Zo(Zo(b,g),y);let x=kp(h,u);u=kh(x,h,u),l=kh(x,ym([p]),l)}return l}var yy=ti({threshold_:my});function by(e,t,n="nearest",r="constant",a=0,s){let i=Js(e,"image","transform","float32"),o=Js(t,"transforms","transform","float32");Q(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Q(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Bs.runKernel(Zr,l,u)}var xy=ti({transform_:by});function wy(e,t,n){Q(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Q(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let r=Js(e,"a","bandPart");Q(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Gl(rf(0,s,1,"int32"),[-1,1]),l=rf(0,i,1,"int32"),u=id(o,l),h=dd(zp(u,Xh(+t,"int32")),Sp(u,Xh(-n,"int32"))),p=Fd([s,i],r.dtype);return Gl(hm(Rm(Gl(r,[-1,s,i])).map(e=>kh(h,e,p))),a)}var vy=ti({bandPart_:wy});function ky(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=nm(e,e.shape[0],0).map(e=>lm(e,[0]));Q(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(Bs.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){let r=Zo(tp(Zo(n[t],e)),n[t]);e=id(e,r)}return Xo(e,ap(e,"euclidean"))}));return t?hm(n,0):n}var Iy=ti({gramSchmidt_:ky});function Sy(e,t=!1){if(Q(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Ny(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Rm(Gl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{let[n,r]=Ny(e,t);a.push(n),s.push(r)});let i=Gl(hm(a,0),e.shape),o=Gl(hm(s,0),e.shape);return[i,o]}}function Ny(e,t=!1){return Bs.tidy(()=>{Q(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=gp(n),s=wo(e),i=bm([[1]],[1,1]),o=wo(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Bs.tidy(()=>{let t=nu(s,[e,e],[n-e,1]),l=ap(t),u=nu(s,[e,e],[1,1]),h=kh(kp(u,0),bm([[-1]]),bm([[1]])),p=id(u,Zo(h,l)),d=Xo(t,p);o=1===d.shape[0]?wo(i):Yl([i,nu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=ed(Xo(Jl(h,p),l)),f=nu(s,[e,0],[n-e,r]),m=Zo(c,o),g=Wm(o);if(0===e)s=id(f,Jl(m,Jl(g,f)));else{let t=id(f,Jl(m,Jl(g,f)));s=Yl([nu(s,[0,0],[e,r]),t],0)}let y=Wm(m),b=nu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=id(b,Jl(Jl(b,o),y));else{let t=id(b,Jl(Jl(b,o),y));a=Yl([nu(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Ro([t,l,u])}return!t&&n>r&&(a=nu(a,[0,0],[n,r]),s=nu(s,[0,0],[r,r])),[a,s]})}var Ty,Cy=ti({qr_:Sy});function _y(e,t,n=Ty.SUM_BY_NONZERO_WEIGHTS){let r=Js(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Js(t,"weights","computeWeightedLoss"));let s=null==a?r:Zo(r,a);if(n===Ty.NONE)return s;if(n===Ty.SUM)return tp(s);if(n===Ty.MEAN){if(null==a)return Rd(s);{let e=r.size/a.size,t=Xo(tp(s),tp(a));return e>1?Xo(t,Xh(e)):t}}if(n===Ty.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Xo(tp(s),Xh(r.size));{let e=Zo(a,Dd(r.shape)),t=bo(tp(Xd(e,Xh(0))),"float32");return Xo(tp(s),t)}}throw Error("Unknown reduction: "+n)}(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ty||(Ty={}));var Ey=ti({computeWeightedLoss_:_y});function Ay(e,t,n,r=Ty.SUM_BY_NONZERO_WEIGHTS){let a=Js(e,"labels","absoluteDifference"),s=Js(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Js(n,"weights","absoluteDifference")),ee(a.shape,s.shape,"Error in absoluteDifference: ");let o=Qo(id(a,s));return Ey(o,i,r)}var $y=ti({absoluteDifference_:Ay});function Ry(e,t,n,r,a=Ty.SUM_BY_NONZERO_WEIGHTS){let s=Js(e,"labels","cosineDistance"),i=Js(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Js(r,"weights","cosineDistance")),ee(s.shape,i.shape,"Error in cosineDistance: ");let l=Xh(1),u=id(l,tp(Zo(s,i),n,!0));return Ey(u,o,a)}var Fy=ti({cosineDistance_:Ry});function Dy(e,t,n,r=Ty.SUM_BY_NONZERO_WEIGHTS){let a=Js(e,"labels","hingeLoss"),s=Js(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Js(n,"weights","hingeLoss")),ee(a.shape,s.shape,"Error in hingeLoss: ");let o=Xh(1);a=id(Zo(Xh(2),a),o);let l=hf(id(o,Zo(a,s)));return Ey(l,i,r)}var My=ti({hingeLoss_:Dy});function Oy(e,t,n,r=1,a=Ty.SUM_BY_NONZERO_WEIGHTS){let s=Js(e,"labels","huberLoss"),i=Js(t,"predictions","huberLoss"),o=null;null!=n&&(o=Js(n,"weights","huberLoss")),ee(s.shape,i.shape,"Error in huberLoss: ");let l=Xh(r),u=Qo(id(i,s)),h=Ld(u,l),p=id(u,h),d=Ho(Zo(Xh(.5),Qh(h)),Zo(l,p));return Ey(d,o,a)}var Ly=ti({huberLoss_:Oy});function zy(e,t,n,r=1e-7,a=Ty.SUM_BY_NONZERO_WEIGHTS){let s=Js(e,"labels","logLoss"),i=Js(t,"predictions","logLoss"),o=null;null!=n&&(o=Js(n,"weights","logLoss")),ee(s.shape,i.shape,"Error in logLoss: ");let l=Xh(1),u=Xh(r),h=ed(Zo(s,Up(Ho(i,u)))),p=Zo(id(l,s),Up(Ho(id(l,i),u))),d=id(h,p);return Ey(d,o,a)}var Py=ti({logLoss_:zy});function By(e,t,n,r=Ty.SUM_BY_NONZERO_WEIGHTS){let a=Js(e,"labels","meanSquaredError"),s=Js(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Js(n,"weights","meanSquaredError")),ee(a.shape,s.shape,"Error in meanSquaredError: ");let o=im(a,s);return Ey(o,i,r)}var Wy=ti({meanSquaredError_:By});function Vy(e,t){let n=Js(e,"labels","sigmoidCrossEntropyWithLogits"),r=Js(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=hf(r),s=Zo(r,n),i=Hp(lp(ed(Qo(r))));return Ho(id(a,s),i)}function Uy(e,t,n,r=0,a=Ty.SUM_BY_NONZERO_WEIGHTS){let s=Js(e,"multiClassLabels","sigmoidCrossEntropy"),i=Js(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Js(n,"weights","sigmoidCrossEntropy")),ee(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=Xh(r),t=Xh(1),n=Xh(.5);s=Ho(Zo(s,id(t,e)),Zo(n,e))}let l=Vy(s,i);return Ey(l,o,a)}var Gy=ti({sigmoidCrossEntropy_:Uy});function Hy(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Zp((e,t,r)=>{let a=hd(t,[n],!0),s=id(bo(t,"float32"),a);r([e,s]);let i=ed(Zo(s,e));return{value:tp(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=zh(e.shape,[n]);return[Zo(Gl(e,s),id(bo(r,"float32"),lp(a))),Zo(Gl(e,s),id(lp(a),bo(r,"float32")))]}}})(e,t)}function jy(e,t,n,r=0,a=Ty.SUM_BY_NONZERO_WEIGHTS){let s=Js(e,"onehotLabels","softmaxCrossEntropy"),i=Js(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Js(n,"weights","softmaxCrossEntropy")),ee(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=Xh(r),t=Xh(1),n=Xh(s.shape[1]);s=Ho(Zo(s,id(t,e)),Xo(e,n))}let l=Hy(s,i);return Ey(l,o,a)}var qy=ti({softmaxCrossEntropy_:jy});function Ky(e,t,n,r){let a=Js(e,"indices","sparseFillEmptyRows","int32"),s=Js(t,"values","sparseFillEmptyRows"),i=Js(n,"denseShape","sparseFillEmptyRows","int32"),o=Js(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==i.rank)throw new Error("Dense shape should be Tensor1D but received shape "+i.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Bs.runKernel(Mr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var Xy=ti({sparseFillEmptyRows_:Ky});function Yy(e,t,n){let r=Js(e,"inputIndices","sparseReshape","int32"),a=Js(t,"inputShape","sparseReshape","int32"),s=Js(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);let i={inputIndices:r,inputShape:a,newShape:s},o=Bs.runKernel(Or,i);return{outputIndices:o[0],outputShape:o[1]}}var Zy=ti({sparseReshape_:Yy});function Jy(e,t,n){let r=Js(e,"data","sparseSegmentMean"),a=Js(t,"indices","sparseSegmentMean","int32"),s=Js(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);let i={data:r,indices:a,segmentIds:s};return Bs.runKernel(Lr,i)}var Qy=ti({sparseSegmentMean_:Jy});function eb(e,t,n){let r=Js(e,"data","sparseSegmentSum"),a=Js(t,"indices","sparseSegmentSum","int32"),s=Js(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);let i={data:r,indices:a,segmentIds:s};return Bs.runKernel(zr,i)}var tb=ti({sparseSegmentSum_:eb});function nb(e,t,n,r,a,s,i,o){let l=Js(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);let u=Js(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=Bs.runKernel(Ur,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}var rb=ti({stringNGrams_:nb});function ab(e,t,n=!0){let r=Js(e,"input","stringSplit","string"),a=Js(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);let s={skipEmpty:n},i={input:r,delimiter:a},o=Bs.runKernel(Gr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var sb=ti({stringSplit_:ab});function ib(e,t){let n=Js(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Bs.runKernel(Hr,a,r)}var ob=ti({stringToHashBucketFast_:ib}),lb={fft:Yf,ifft:Jf,rfft:am,irfft:em},ub={hammingWindow:Tg,hannWindow:_g,frame:Ag,stft:Rg},hb={flipLeftRight:Og,grayscaleToRGB:zg,resizeNearestNeighbor:fy,resizeBilinear:dy,rotateWithOffset:Bg,cropAndResize:Dg,nonMaxSuppression:Ug,nonMaxSuppressionAsync:ny,nonMaxSuppressionWithScore:ay,nonMaxSuppressionWithScoreAsync:iy,nonMaxSuppressionPadded:ly,nonMaxSuppressionPaddedAsync:hy,threshold:yy,transform:xy},pb={bandPart:vy,gramSchmidt:Iy,qr:Cy},db={absoluteDifference:$y,computeWeightedLoss:Ey,cosineDistance:Fy,hingeLoss:My,huberLoss:Ly,logLoss:Py,meanSquaredError:Wy,sigmoidCrossEntropy:Gy,softmaxCrossEntropy:qy},cb={sparseFillEmptyRows:Xy,sparseReshape:Zy,sparseSegmentMean:Qy,sparseSegmentSum:tb},fb={stringNGrams:rb,stringSplit:sb,stringToHashBucketFast:ob},mb={};b(mb,{Serializable:()=>gb,SerializationMap:()=>yb,registerClass:()=>bb});var gb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},yb=class{constructor(){this.classNameMap={}}static getMap(){return null==yb.instance&&(yb.instance=new yb),yb.instance}static register(e){yb.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function bb(e){Q(null!=e.className,()=>"Class being registered does not have the static className property defined."),Q("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Q(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),yb.register(e)}var xb=class extends gb{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Ro(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Yp(e,t)}dispose(){null!=this.iterations_&&Ro(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(xb,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var wb=class extends xb{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Bs.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Bs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:$o(()=>Sh(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:$o(()=>Sh(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;$o(()=>{let e=Ho(Zo(i,this.rho),Zo(Qh(s),1-this.rho)),t=Zo(Xo(Zh(Ho(o,this.epsilon)),Zh(Ho(i,this.epsilon))),s),n=Ho(Zo(o,this.rho),Zo(Qh(t),1-this.rho));i.assign(e),o.assign(n);let a=Ho(Zo(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ro(this.accumulatedGrads.map(e=>e.variable)),Ro(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},vb=class extends xb{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Bs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:$o(()=>Tu(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;$o(()=>{let e=Ho(s,Qh(a));s.assign(e);let t=Ho(Zo(Xo(a,Zh(Ho(e,Bs.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ro(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},kb=class extends xb{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],$o(()=>{this.accBeta1=Xh(t).variable(),this.accBeta2=Xh(n).variable()}),null==r&&(this.epsilon=Bs.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);$o(()=>{let n=id(1,this.accBeta1),r=id(1,this.accBeta2);t.forEach((t,a)=>{let s=Bs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:$o(()=>Sh(s).variable(i))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:$o(()=>Sh(s).variable(i))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,h=Ho(Zo(l,this.beta1),Zo(o,1-this.beta1)),p=Ho(Zo(u,this.beta2),Zo(Qh(o),1-this.beta2)),d=Xo(h,n),c=Xo(p,r);l.assign(h),u.assign(p);let f=Ho(Zo(Xo(d,Ho(Zh(c),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Zo(this.accBeta1,this.beta1)),this.accBeta2.assign(Zo(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ro(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Ro(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),$o(()=>{this.accBeta1.assign(Kh(this.beta1,this.iterations_+1)),this.accBeta2.assign(Kh(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Ib=class extends xb{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],$o(()=>{this.iteration=Xh(0).variable(),this.accBeta1=Xh(t).variable()}),null==r&&(this.epsilon=Bs.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);$o(()=>{let n=id(1,this.accBeta1),r=Xo(-this.learningRate,Ho(Zo(this.iteration,this.decay),1));t.forEach((t,a)=>{let s=Bs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Sh(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Sh(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,h=Ho(Zo(l,this.beta1),Zo(o,1-this.beta1)),p=Zo(u,this.beta2),d=Qo(o),c=Ad(p,d);l.assign(h),u.assign(c);let f=Ho(Zo(Xo(r,n),Xo(h,Ho(c,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Ho(this.iteration,1)),this.accBeta1.assign(Zo(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ro(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Ro(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Sb=class extends xb{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Bs.registeredVariables[t];$o(()=>{let e=Ho(Zo(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Fo(Xh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Nb=class extends Sb{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Xh(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Bs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:t+"/momentum",variable:$o(()=>Sh(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&$o(()=>{let e,t=Ho(Zo(this.m,a),s);e=this.useNesterov?Ho(Zo(this.c,Ho(s,Zo(t,this.m))),r):Ho(Zo(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ro(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Tb=class extends xb{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Bs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Bs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:$o(()=>Sh(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:$o(()=>Sh(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:$o(()=>Sh(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;$o(()=>{let e=Ho(Zo(i,this.decay),Zo(Qh(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=Ho(Zo(t,this.decay),Zo(s,1-this.decay)),l=Xo(Zo(s,this.learningRate),Zh(id(e,Ho(Qh(a),this.epsilon)))),u=Ho(Zo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=id(r,u);r.assign(h)}else{let e=Ho(Zo(i,this.decay),Zo(Qh(s),1-this.decay)),t=Ho(Zo(o,this.momentum),Xo(Zo(s,this.learningRate),Zh(Ho(e,this.epsilon))));i.assign(e),o.assign(t);let n=id(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ro(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Ro(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Ro(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Cb=[wb,vb,kb,Ib,Nb,Tb,Sb];function _b(){for(let e of Cb)bb(e)}var Eb={};b(Eb,{browserFiles:()=>zb,browserHTTPRequest:()=>Yb,concatenateArrayBuffers:()=>mi,copyModel:()=>uo,decodeWeights:()=>ui,encodeWeights:()=>li,fromMemory:()=>ex,fromMemorySync:()=>tx,getLoadHandlers:()=>Ai,getModelArtifactsForJSON:()=>xi,getModelArtifactsForJSONSync:()=>bi,getModelArtifactsInfoForJSON:()=>wi,getSaveHandlers:()=>Ei,getWeightSpecs:()=>vi,http:()=>Xb,isHTTPScheme:()=>qb,listModels:()=>oo,loadWeights:()=>Wb,moveModel:()=>ho,registerLoadRouter:()=>_i,registerSaveRouter:()=>Ci,removeModel:()=>lo,weightsLoaderFactory:()=>Vb,withSaveHandler:()=>nx,withSaveHandlerSync:()=>rx});var Ab="model",$b=".json",Rb=".weights.bin";function Fb(e){return new Promise(e=>setTimeout(e)).then(e)}var Db=class{constructor(e){if(!Ue().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Db.URL_SCHEME)&&(e=e.slice(Db.URL_SCHEME.length)),(null==e||0===e.length)&&(e=Ab),this.modelJsonFileName=e+$b,this.weightDataFileName=e+Rb}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=yi(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Fb(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Fb(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:wi(e)}}}};Db.URL_SCHEME="downloads://";var Mb=class{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=xi(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,mi(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(e=>gi(e.name)),r={};for(let a of e)a.paths.forEach(e=>{let a=gi(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},Ob=e=>Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Db.URL_SCHEME)?Lb(e.slice(Db.URL_SCHEME.length)):null;function Lb(e="model"){return new Db(e)}function zb(e){return new Mb(e)}function Pb(e,t,n,r){i(e),n=null==n?0:n,r=null==r?1:r,o(n,r);let a=0,s=s=>(s.then(s=>{let i=n+ ++a/e.length*(r-n);return t(i),s}),s);function i(e){Q(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}function o(e,t){Q(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Q(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Q(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}return Promise.all(e.map(s))}async function Bb(e,t){null==t&&(t={});let n=null==t.fetchFunc?Ue().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=0,s=.5,i=(null==t.onProgress?await Promise.all(r):await Pb(r,t.onProgress,a,s)).map(e=>e.arrayBuffer()),o=.5,l=1;return null==t.onProgress?await Promise.all(i):await Pb(i,t.onProgress,o,l)}async function Wb(e,t="",n,r){return Vb(e=>Bb(e,{requestInit:r}))(e,t,n)}function Vb(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=ii[l]*ne(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(h(),i[n]=!0)}):h(),o.push(e.name),n+=u})}),!i.every(e=>e)){let e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});let h=await e(u),p={},d=0;return l.forEach(e=>{let n=t[e].paths.length,r=0;for(let t=0;t<n;t++)r+=h[d+t].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let t=0;t<n;t++){let e=new Uint8Array(h[d+t]);i.set(e,o),o+=e.byteLength}s[e].forEach(e=>{let t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=ui(t,[e.manifestEntry]);for(let r in n)p[r]=n[r]}),d+=n}),p}}Ti.registerSaveRouter(Ob);var Ub="application/octet-stream",Gb="application/json",Hb=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Ue().platform.fetch,Q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=yi(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:Gb}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:Ub}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:wi(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return xi(e,e=>this.loadWeights(e))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=jb(t),a=this.weightPathPrefix||n,s=vi(e),i=[],o=[];for(let u of e)for(let e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await Bb(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,mi(l)]}};function jb(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function qb(e){return null!=e.match(Hb.URL_SCHEME_REGEX)}Hb.URL_SCHEME_REGEX=/^https?:\/\//;var Kb=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>qb(e)):qb(e),n)return Xb(e,t)}return null};function Xb(e,t){return new Hb(e,t)}function Yb(e,t){return Xb(e,t)}Ti.registerSaveRouter(Kb),Ti.registerLoadRouter(Kb);var Zb=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Jb=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Qb=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function ex(e,t,n,r){let a=arguments;return new Qb(tx(...a))}function tx(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Zb(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Zb({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Zb({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function nx(e){return new Jb(e)}function rx(e){return new Jb(e)}var ax={};function sx(e,t,n){let r=Js(e,"labels","confusionMatrix"),a=Js(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),Q(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),Q(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),Q(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),Q(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);let s=Zd(bo(r,"int32"),n),i=Zd(bo(a,"int32"),n),o=Wm(s),l=Jl(o,i);return bo(l,"int32")}b(ax,{confusionMatrix:()=>ox});var ix,ox=ti({confusionMatrix_:sx}),lx={};function ux(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(null!=fa(sa,Bs.backendName)){let n={pixels:e},r={numChannels:t};return Bs.runKernel(sa,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,h,p).data;else if(r||n)l=e.data;else if(s||a||o){if(null==ix)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ix=new OffscreenCanvas(1,1).getContext("2d")}else ix=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ix.canvas.width=h,ix.canvas.height=p,ix.drawImage(e,0,0,h,p),l=ix.getImageData(0,0,h,p).data}if(4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return xm(u,[p,h,t],"int32")}function hx(e){return null!=e&&e.data instanceof Uint8Array}function px(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function dx(e){return null!=e&&0!==e.width&&0!==e.height}function cx(e){return px()&&!(e instanceof ImageBitmap)&&dx(e)&&!hx(e)}async function fx(e,t=3){let n=null;if(Ue().getBool("WRAP_TO_IMAGEBITMAP")&&cx(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ux(n,t)}async function mx(e,t){let n=Js(e,"img","toPixels");if(!(e instanceof ys)){let e=n;n=bo(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let e=[0,0,0,255];for(let r=0;r<s;r++){let t=i[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}let t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}b(lx,{fromPixels:()=>gx,fromPixelsAsync:()=>fx,toPixels:()=>mx});var gx=ti({fromPixels_:ux}),yx={};function bx(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let p=0;p<a.length-1;++p)i*=a[p];let o=e.shape,l=a.slice();l.pop();let u=1;for(let p=s;p<n;++p)u*=o[p],l.push(o[p]);let h=[...Ce(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,h]}b(yx,{prepareAndValidate:()=>bx});var xx={};b(xx,{assertParamsValid:()=>kx,computeFlatOffset:()=>Mx,computeOutShape:()=>Sx,getNormalizedAxes:()=>_x,isSliceContinous:()=>Dx,maskToAxes:()=>Ix,parseSliceParams:()=>Ox,sliceInfo:()=>Lx,startForAxis:()=>Rx,startIndicesWithElidedDims:()=>Ex,stopForAxis:()=>Fx,stopIndicesWithElidedDims:()=>Ax,stridesForAxis:()=>$x,stridesWithElidedDims:()=>Nx});var wx=-2,vx=-1;function kx(e,t,n){let r=e.shape.length;Q(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),Q(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)Q(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function Ix(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Sx(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Nx(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Tx(e,t,n){return n<=e?n:n-(t-1)}function Cx(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function _x(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=Ex(i,l,u,r,e),p=Ax(o,l,u,a,e),d=Nx(s,l,u,e)}else for(let c=0;c<u;c++)h[c]=Rx(i,r,s,e,c,l),p[c]=Fx(o,a,s,e,c,l),d[c]=$x(s,c,l);return{begin:h,end:p,strides:d}}function Ex(e,t,n,r,a){let s=[...a],i=Cx(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let a=Tx(t,n,o),i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function Ax(e,t,n,r,a){let s=[...a],i=Cx(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let a=Tx(t,n,o),i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){let e=a[o];s[o]<0&&(s[o]+=e),s[o]=q(0,s[o],a[o])}return s}function $x(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Rx(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=q(0,i,l-1),i}function Fx(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?q(0,i,l):q(-1,i,l-1),i}function Dx(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Mx(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ox(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{Q(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(Q(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function Lx(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<p.dims;b++)h&&1<<b&o&&p.numAddAxisAfterEllipsis++,1<<b&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};zx(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);let t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}let r=[d.beginMask&1<<b,d.endMask&1<<b],a=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];let s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){let e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Px(d.begin[b],0,d.strides[b],n,r,a),d.end[b]=Px(d.end[b],1,d.strides[b],n,r,a);let e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;c=c&&e,f=f&&(0===b&&1===d.strides[b]||e)}else c=c&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===wx&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>d.finalShapeGatherIndices[t]!==wx),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function zx(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(wx),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(vx),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function Px(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Bx="4.2.0",Wx=class{static sgd(e){return new Sb(e)}static momentum(e,t,n=!1){return new Nb(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Tb(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new kb(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new wb(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ib(e,t,n,r,a)}static adagrad(e,t=.1){return new vb(e,t)}},Vx=Wx,Ux=(()=>"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e())();function Gx(){return new Promise(e=>Ux(()=>e()))}var Hx,jx={};function qx(e,t){let n=e[0].length;e.forEach((e,t)=>{Q(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),Q(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)Q(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Kx(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Xx(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function Yx(e){let t={FIRST_DIM_SIZE:Hx.FIRST_DIM_SIZE,VALUE_ROWIDS:Hx.VALUE_ROWIDS,ROW_LENGTHS:Hx.ROW_LENGTHS,ROW_SPLITS:Hx.ROW_SPLITS,ROW_LIMITS:Hx.ROW_LIMITS,ROW_STARTS:Hx.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function Zx(e){return 0===e.length?0:e[0]===Hx.FIRST_DIM_SIZE?e.length-1:e.length}function Jx(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}b(jx,{ERF_A1:()=>hw,ERF_A2:()=>pw,ERF_A3:()=>dw,ERF_A4:()=>cw,ERF_A5:()=>fw,ERF_P:()=>uw,PARALLELIZE_THRESHOLD:()=>Qx,RowPartitionType:()=>Hx,SELU_SCALE:()=>lw,SELU_SCALEALPHA:()=>ow,applyActivation:()=>cg,assertAndGetBroadcastShape:()=>bh,assertAxesAreInnerMostDims:()=>Ph,assertParamsConsistent:()=>qx,assignToTypedArray:()=>ww,axesAreInnerMostDims:()=>Mh,calculateShapes:()=>qm,checkEinsumDimSizes:()=>Ew,checkPadOnDimRoundingMode:()=>Vl,combineLocations:()=>Oh,combineRaggedTensorToTensorShapes:()=>Xx,complexWithEvenIndex:()=>yw,complexWithOddIndex:()=>bw,computeConv2DInfo:()=>Cl,computeConv3DInfo:()=>_l,computeDefaultPad:()=>$l,computeDilation2DInfo:()=>Sl,computeOptimalWindowSize:()=>ew,computeOutAndReduceShapes:()=>Lh,computeOutShape:()=>Kx,computePool2DInfo:()=>Nl,computePool3DInfo:()=>Tl,convertConv2DDataFormat:()=>Wl,decodeEinsumEquation:()=>Cw,eitherStridesOrDilationsAreOne:()=>Pl,expandShapeToKeepDim:()=>zh,exponent:()=>kw,exponents:()=>vw,fromStringArrayToUint8:()=>Zw,fromUint8ToStringArray:()=>Yw,getAxesPermutation:()=>Bh,getBroadcastDims:()=>gh,getComplexWithIndex:()=>xw,getEinsumComputePath:()=>Aw,getEinsumPermutation:()=>_w,getFusedBiasGradient:()=>dg,getFusedDyActivation:()=>pg,getImageCenter:()=>tw,getInnerMostAxes:()=>Vh,getPermuted:()=>rw,getRaggedRank:()=>Zx,getReductionAxes:()=>yh,getReshaped:()=>nw,getReshapedPermuted:()=>aw,getRowPartitionTypesHelper:()=>Yx,getSliceBeginCoords:()=>sw,getSliceSize:()=>iw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Dw,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Mw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Ow,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Pw,getSparseReshapeInputOutputMismatchErrorMessage:()=>Ww,getSparseReshapeInputOutputMultipleErrorMessage:()=>Bw,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Lw,getSparseReshapeNegativeOutputDimErrorMessage:()=>zw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Hw,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Vw,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Uw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Gw,getUndoAxesPermutation:()=>Wh,isIdentityPermutation:()=>$w,log:()=>pa,mergeRealAndImagArrays:()=>mw,prepareAndValidate:()=>bx,prepareSplitSize:()=>Fw,segment_util:()=>jw,shouldFuse:()=>fg,slice_util:()=>xx,splitRealAndImagArrays:()=>gw,stridesOrDilationsArePositive:()=>Bl,tupleValuesAreOne:()=>zl,upcastType:()=>Cs,validateDefaultValueShape:()=>Jx,validateInput:()=>jm,validateUpdateShape:()=>Hm,warn:()=>ha}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Hx||(Hx={}));var Qx=30;function ew(e){return e<=Qx?e:Te(e,Math.floor(Math.sqrt(e)))}function tw(e,t,n){let r=n*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[r,a]}function nw(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function rw(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function aw(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function sw(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function iw(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var ow=1.7580993408473768,lw=1.0507009873554805,uw=.3275911,hw=.254829592,pw=-.284496736,dw=1.421413741,cw=-1.453152027,fw=1.061405429;function mw(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function gw(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function yw(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function bw(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function xw(e,t){let n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function ww(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function vw(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function kw(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Iw="->",Sw=/->/g,Nw=",",Tw="...";function Cw(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(Sw,"").length)/Iw.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Iw}").`);let[r,a]=e.split(Iw);Q(-1===r.indexOf(Tw),()=>`The ellipsis notation ("${Tw}") is not supported yet.`);let s=r.split(Nw),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){let e=r[d];-1===o.indexOf(e)&&e!==Nw&&o.push(e)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(o.indexOf(s[d][e]))}let u=o.length,h=a.length,p=[];for(let d=h;d<u;++d)p.push(d);return{allDims:o,summedDims:p,idDims:l}}function _w(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Ew(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Q(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`)}}function Aw(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let e=n[i],a=Rw(t,e);for(let t of a)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function $w(e){return e.every((e,t)=>e===t)}function Rw(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Fw(e,t,n=0){let r=[];if("number"==typeof t)Q(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Q(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(-1!==s){let r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Q(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Dw(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = "+e}function Mw(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Ow(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Lw(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function zw(e,t){return`size ${e} must be non-negative, not ${t}`}function Pw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Bw(e,t){let n=ne(e),r=ne(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Ww(e,t){let n=ne(e),r=ne(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function Vw(){return"segment ids must be >= 0"}function Uw(){return"segment ids are not increasing"}function Gw(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Hw(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var jw={};function qw(e,t){let n,r=!1;for(e<=Qx?(n=e,r=!0):n=Te(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Te(e,n+1);return n}function Kw(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Xw(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let p=0;p<r;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let p=0;p<r;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=r;p<n;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=r;p<a;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),h*=e.shape[p];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function Yw(e){try{return e.map(e=>Ka(e))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+t)}}function Zw(e){return e.map(e=>qa(e))}b(jw,{collectGatherOpShapeInfo:()=>Xw,computeOutShape:()=>Kw,segOpComputeOptimalWindowSize:()=>qw});var Jw={};b(Jw,{nonMaxSuppressionV3Impl:()=>Kg,nonMaxSuppressionV4Impl:()=>Xg,nonMaxSuppressionV5Impl:()=>Yg,whereImpl:()=>Mm}),_b();var Qw={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,dm(bo(n,"float32"),-1))}}},ev={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Qh(bo(n,"float32")),r=Zh(id(Xh(1),t));return ed(Xo(e,r))}}}},tv={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Zh(id(Qh(bo(n,"float32")),1));return Xo(e,t)}}}},nv={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=e,r=yh(n.shape,a);return r.length>0&&(t=tp(t,r)),Gl(t,n.shape)},b:()=>{let t=e,n=yh(r.shape,a);return n.length>0&&(t=tp(t,n)),Gl(t,r.shape)}}}},rv={kernelName:et,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},av={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sh(n)}}},sv={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sh(n)}}},iv={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,Zh(id(Xh(1),Qh(bo(n,"float32")))))}}},ov={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Zh(Ho(Xh(1),Qh(bo(n,"float32"))));return Xo(e,t)}}}},lv={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=Ho(Qh(n),Qh(r)),s=Zo(e,Xo(r,t)),i=yh(n.shape,a);return i.length>0&&(s=tp(s,i)),Gl(s,n.shape)},b:()=>{let t=Ho(Qh(n),Qh(r)),s=ed(Zo(e,Xo(n,t))),i=yh(r.shape,a);return i.length>0&&(s=tp(s,i)),Gl(s,r.shape)}}}},uv={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,Ho(Qh(bo(n,"float32")),1))}}},hv={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,id(Xh(1),Qh(bo(n,"float32"))))}}};function pv(e,t,n,r,a,s){let i=Js(e,"dy","avgPool3dGrad"),o=Js(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),Q(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Vl("avgPool3dGrad",a,s);let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Bs.runKernel(ct,p,d);return h?Gl(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var dv=ti({avgPool3dGrad_:pv}),cv={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>dv(e,r,a,s,i,o)}}};function fv(e,t,n,r,a){let s=Js(e,"dy","avgPoolGrad"),i=Js(t,"input","avgPoolGrad");Q(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Gl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Gl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),Q(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=Bs.runKernel(pt,h,p);return u?Gl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var mv=ti({avgPoolGrad_:fv}),gv={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>mv(e,r,a,s,i)}}},yv={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Jl(e,a,!1,!1),b:()=>Jl(e,r,!0,!1)}:s&&!i?{a:()=>Jl(a,e,!1,!0),b:()=>Jl(r,e,!1,!1)}:{a:()=>Jl(a,e,!0,!0),b:()=>Jl(e,r,!0,!0)}:{a:()=>Jl(e,a,!1,!0),b:()=>Jl(r,e,!0,!1)}}},bv={kernelName:mt,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>cc(e,r,a)}}},xv={kernelName:yt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>tp(e,o,!0)}}},wv={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},vv={kernelName:wt,gradFunc:e=>({x:()=>Sh(e)})},kv={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>kh(dd(Sp(r,a),zp(r,s)),e,Sh(e))}}},Iv={kernelName:It,inputsToSave:["x"],gradFunc:Qw.gradFunc},Sv={kernelName:St,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(e=>e.shape),{axis:a}=n,s=de(a,t[0].shape)[0],i=r.map(e=>e[s]);return nm(e,i,s).map(e=>()=>e)}},Nv={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Q(zl(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Vu(r.shape,e,a,i,o,l),filter:()=>hg(r,e,a.shape,i,o,l)}}},Tv={kernelName:Ct,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>zu(e,a,s,i,o,1,l),filter:()=>hg(e,r,a.shape,s,i,o,l)}}};function Cv(e,t,n,r,a){let s=e;4===e.rank&&(s=Gl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Gl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),Q(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),Q(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),Q(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),Q(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Bs.runKernel(Et,o,l)}var _v=ti({conv3DBackpropFilter_:Cv}),Ev={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Q(zl(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>Ku(i.shape,e,o,a,s),filter:()=>_v(i,e,o.shape,a,s)}}},Av={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(ed(Of(bo(n,"float32"))),e)}}},$v={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(zf(bo(n,"float32")),e)}}},Rv={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Bh([a],r.rank),n=ah(e,a,s,!i);return null!=t&&(n=Wm(n,t)),n}}}},Fv={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Q(zl(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return Q(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),Q(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Q(Pl(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),Vl("depthwiseConv2d",s,i),{x:()=>wg(l.shape,e,u,a,s,o,i),filter:()=>bg(l,e,u.shape,a,s,o,i)}}},Dv={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Bs.runKernel(Ut,s,n),filter:()=>Bs.runKernel(Gt,i,n)}}},Mv={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Bs.runKernel(Kt,r)}}},Ov={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Zo(lp(ed(Qh(n))),2/Math.sqrt(Math.PI));return{x:()=>Zo(e,r)}}},Lv={kernelName:Zt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,n)}}},zv={kernelName:Jt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Gl(e,n.shape)}}},Pv={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,lp(n))}}},Bv={kernelName:rn,gradFunc:e=>({x:()=>Sh(e)})},Wv={kernelName:an,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=Xo(e,bo(r,"float32")),s=yh(n.shape,a);return s.length>0?Gl(tp(t,s),n.shape):t},b:()=>{let t=Zo(e,bo(n,"float32")),s=yh(r.shape,a);s.length>0&&(t=Gl(tp(t,s),r.shape));let i=Qh(r);return ed(Xo(t,bo(i,"float32")))}}}},Vv={kernelName:sn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?Xh(1):o,u=yh(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=id(a,s),d=Zo(e,l),c=Tf(Ho(i,Xh(r))),f=Zo(Zo(Zo(c,c),c),Xh(-.5));return{x:()=>1===s.rank?Gl(Zo(Zo(e,fp(Gl(c,[1,1,1,s.shape[0]]),h)),l),a.shape):Gl(Zo(Zo(e,c),l),a.shape),mean:()=>{let e=Zo(Zo(c,Xh(-1)),d);return 1===s.rank&&(e=tp(e,u)),Gl(e,s.shape)},variance:()=>{let e=Zo(Zo(f,p),d);return 1===s.rank&&(e=tp(e,u)),Gl(e,s.shape)},scale:()=>{let t=Zo(p,c),n=Zo(e,t);return 1===s.rank&&(n=tp(n,u)),Gl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=tp(t,u)),Gl(t,s.shape)}}}},Uv={kernelName:on,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=de(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=Gv(0,l),d=Gv(l+1,l+1+h),c=Hv([o,[n],u]),f=Gl(e,c),m=Gl(a,[n]),g=Hv([[l],p,d]),y=Wm(f,g),b=Am(y,m,r.shape[i]),x=Wh(g);return b=Wm(b,x),b},indices:()=>a}}};function Gv(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Hv(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var jv={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Sh(n),b:()=>Sh(r)}}},qv={kernelName:pn,gradFunc:e=>({x:()=>bo(e,"float32")})},Kv={kernelName:fn,gradFunc:e=>({x:()=>Sh(e)})},Xv={kernelName:mn,gradFunc:e=>({x:()=>Sh(e)})},Yv={kernelName:gn,gradFunc:e=>({x:()=>Sh(e)})},Zv={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=kp(r,0);return{x:()=>kh(s,e,Zo(e,a))}}},Jv={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,Ho(n,1))}}},Qv={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,bo(n,"float32"))}}},ek={kernelName:Cn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=lp(r);return id(e,Zo(tp(e,a,!0),t))}}}};function tk(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Bs.runKernel(An,o,l)}var nk=ti({localResponseNormalizationBackprop_:tk}),rk={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>nk(r,a,e,s,i,o,l)}}};function ak(e,t,n,r){return t.rank<n.rank&&(t=Gl(t,zh(t.shape,r))),e.rank<n.rank&&(e=Gl(e,zh(e.shape,r))),{x:()=>Zo(e,bo(wh(n,t),e.dtype))}}var sk={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=de(a,s.shape),l=ak(e,i,s,o);return{x:()=>l.x()}}},ik={kernelName:Rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Zo(e,bo(Sp(n,r),"float32")),b:()=>Zo(e,bo(Op(n,r),"float32"))}}};function ok(e,t,n,r,a,s,i){let o=Js(e,"dy","maxPool3dGrad"),l=Js(t,"input","maxPool3dGrad"),u=Js(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=Gl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=Gl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Gl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Q(5===h.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),Q(5===p.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Q(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Vl("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Bs.runKernel(On,f,m);return c?Gl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var lk=ti({maxPool3dGrad_:ok}),uk={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>lk(e,r,a,s,i,o,l)}}};function hk(e,t,n,r,a,s,i){let o=Js(e,"dy","maxPoolGrad"),l=Js(t,"input","maxPoolGrad"),u=Js(n,"output","maxPoolGrad");Q(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),Q(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),Q(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Vl("maxPoolGrad",s,i);let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Bs.runKernel(Dn,h,p)}var pk=ti({maxPoolGrad_:hk}),dk={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>pk(e,r,a,s,i,o)}}},ck={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=de(a,r.shape),i=Lh(r.shape,s)[1],o=ne(i);return{x:()=>{let t=r.shape.slice();s.forEach(e=>{t[e]=1});let n=Gl(e,t);return Xo(Zo(n,Dd(r.shape,"float32")),o)}}}},fk={kernelName:Pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=de(a,s.shape),l=ak(e,i,s,o);return{x:()=>l.x()}}},mk={kernelName:Bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Zo(e,bo(zp(n,r),"float32")),b:()=>Zo(e,bo(kp(n,r),"float32"))}}},gk={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>nu(e,s,r.shape)}}},yk={kernelName:Vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=yh(n.shape,a);return t.length>0?Gl(tp(e,t),n.shape):e},b:()=>{let t=Zo(e,ed(bp(Xo(n,r)))),s=yh(r.shape,a);return s.length>0?Gl(tp(t,s),r.shape):t}}}},bk={kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=Zo(e,bo(r,"float32")),s=yh(n.shape,a);return s.length>0?Gl(tp(t,s),n.shape):t},b:()=>{let t=Zo(e,bo(n,"float32")),s=yh(r.shape,a);return s.length>0?Gl(tp(t,s),r.shape):t}}}},xk={kernelName:Hn,gradFunc:e=>({x:()=>ed(e)})},wk={kernelName:Zn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Fd(n.shape,"float32")}}},vk={kernelName:Yn,gradFunc:e=>({x:()=>Sh(e)})},kk={kernelName:Jn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Rm(e,r).map(e=>()=>e)}},Ik={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>nu(e,s,r.shape)}}},Sk={kernelName:tr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=bh(s.shape,i.shape);return{a:()=>{let t=bo(i,"float32"),n=Zo(e,Zo(t,Kh(s,id(t,Xh(1))))),r=yh(s.shape,o);return r.length>0&&(n=tp(n,r)),Gl(n,s.shape)},b:()=>{let t=kp(s,0),n=kh(t,Up(s),Sh(s)),r=Zo(e,Zo(a,n)),l=yh(i.shape,o);return l.length>0&&(r=tp(r,l)),Gl(r,i.shape)}}}},Nk={kernelName:nr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=kp(n,0);return{x:()=>kh(a,e,Zo(e,r)),alpha:()=>{let t=kh(a,Sh(e),Zo(e,n)),s=yh(r.shape,e.shape);return s.length>0&&(t=tp(t,s)),Gl(t,r.shape)}}}};function Tk(e,t,n){let r=e.shape.slice();r[n]=1;let a=Gl(t,r),s=nh(e,n,!0,!1),i=nh(e,n,!0,!0),o=Zo(s,i);return Zo(a,o)}function Ck(e,t,n){let r=e.shape.length,a=r-n.length,s=jx.getAxesPermutation(n,r),i=e;null!=s&&(i=Wm(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let u=i.reshape(o),h=Tk(u,t,a);if(h=h.reshape(i.shape),null!=s){let e=jx.getUndoAxesPermutation(s);h=Wm(h,e)}return h}var _k={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>Ck(r,e,s)}}},Ek={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=Xo(e,bo(r,"float32")),s=yh(n.shape,a);return s.length>0?Gl(tp(t,s),n.shape):t},b:()=>{let t=Zo(e,bo(n,"float32")),s=yh(r.shape,a);s.length>0&&(t=Gl(tp(t,s),r.shape));let i=Qh(r);return ed(Xo(t,bo(i,"float32")))}}}},Ak={kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,ed(Qh(n)))}}},$k={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Zo(zp(n,6),dm(n));return{x:()=>Zo(e,bo(r,"float32"))}}},Rk={kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,bo(dm(n),"float32"))}}},Fk={kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Gl(e,n.shape)}}},Dk={kernelName:fr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Bs.runKernel(mr,a,n)}}},Mk={kernelName:dr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Bs.runKernel(cr,a,n)}}},Ok={kernelName:yr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=de(r,e.shape);return{x:()=>ff(e,a)}}},Lk={kernelName:br,gradFunc:e=>({x:()=>Sh(e)})},zk={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ed(Xo(e,Zo(Kh(n,1.5),2)))}}},Pk={kernelName:kr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>bo(Sh(n),"float32"),t:()=>Zo(e,bo(n,e.dtype)),e:()=>Zo(e,bo(fd(n),e.dtype))}}},Bk={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=kp(n,Xh(0)),r=Xh(ow),a=Xh(lw),s=Zo(e,a),i=Zo(Zo(e,r),lp(bo(n,"float32")));return kh(t,s,i)}}}},Wk={kernelName:_r,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,Zo(n,id(Xh(1),n)))}}},Vk={kernelName:Cr,gradFunc:e=>({x:()=>Sh(e)})},Uk={kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(Ju(bo(n,"float32")),e)}}},Gk={kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(eh(bo(n,"float32")),e)}}},Hk={kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Ox(r,a,s),u=[];for(let h=0;h<e.rank;h++)u.push([o[h],i[h]-o[h]-l[h]]);return{x:()=>rc(e,u)}}},jk={kernelName:Dr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=Zo(e,r);return{logits:()=>id(i,Zo(tp(i,[a],s),r))}}},qk={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,eu(n))}}},Kk={kernelName:Rr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>lu(e,r,a)}}},Xk={kernelName:Fr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Yl(e,r)}}},Yk={kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,Zo(Zh(bo(n,"float32")),2))}}},Zk={kernelName:Wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(e,Zo(bo(n,"float32"),2))}}},Jk={kernelName:Br,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xh(2);return{a:()=>Zo(e,Zo(a,id(n,r))),b:()=>Zo(e,Zo(a,id(r,n)))}}},Qk={kernelName:aa,gradFunc:e=>({x:()=>Sh(e)})},eI={kernelName:jr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=bh(n.shape,r.shape);return{a:()=>{let t=e,r=yh(n.shape,a);return r.length>0&&(t=tp(t,r)),Gl(t,n.shape)},b:()=>{let t=e,n=yh(r.shape,a);return n.length>0&&(t=tp(t,n)),Gl(ed(t),r.shape)}}}},tI={kernelName:$r,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;de(s,r.shape).forEach(e=>{a[e]=1});let i=Gl(e,a),o=Zo(i,Dd(r.shape,"float32"));return{x:()=>o}}},nI={kernelName:qr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xo(e,Qh(Ju(n)))}}},rI={kernelName:Kr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Zo(id(Xh(1),Qh(n)),e)}}},aI={kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Sh(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Ho(t,nu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Ho(t,nu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Ho(t,nu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Ho(t,nu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},sI={kernelName:Jr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Wh(a);return{x:()=>Wm(e,s)}}},iI={kernelName:ea,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>hm(e,a)}}},oI={kernelName:ta,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>lI(e,n)}}};function lI(e,t){let n=Ad(t,Sh(t)),r=wp(e,n),a=Sp(t,Xh(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=hp(a,o+1);a=dd(a,Dd(r.shape,"bool"));let i=Sh(r);return kh(a,r,i)}var uI={kernelName:ra,gradFunc:e=>({x:()=>Sh(e)})},hI=[Qw,ev,tv,nv,rv,av,sv,iv,ov,lv,uv,hv,cv,gv,yv,bv,xv,wv,vv,kv,Iv,Sv,Tv,Nv,Ev,Av,$v,Rv,Fv,Dv,Ek,Mv,Ov,Lv,zv,Pv,Wv,Bv,Vv,Uv,jv,qv,Kv,Xv,Yv,Zv,Jv,Qv,ek,rk,sk,sk,ik,uk,dk,ck,fk,mk,gk,yk,bk,xk,wk,vk,kk,Ik,Ik,Sk,Nk,_k,Ak,$k,Rk,Fk,Dk,Mk,Ok,Lk,zk,Pk,Bk,Wk,Vk,Uk,Gk,Hk,jk,qk,Kk,Kk,Xk,Xk,Yk,Jk,Zk,Qk,eI,tI,nI,rI,aI,sI,iI,oI,uI];for(let t of hI)ba(t);bs().prototype.abs=function(){return this.throwIfDisposed(),Qo(this)},bs().prototype.acos=function(){return this.throwIfDisposed(),tl(this)},bs().prototype.acosh=function(){return this.throwIfDisposed(),rl(this)},bs().prototype.add=function(e){return this.throwIfDisposed(),Ho(this,e)},bs().prototype.all=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},bs().prototype.any=function(e,t){return this.throwIfDisposed(),ul(this,e,t)},bs().prototype.argMax=function(e){return this.throwIfDisposed(),pl(this,e)},bs().prototype.argMin=function(e){return this.throwIfDisposed(),cl(this,e)},bs().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,()=>"The array must have only 1 element."),Gl(this,[])},bs().prototype.asType=function(e){return this.throwIfDisposed(),bo(this,e)},bs().prototype.as1D=function(){return this.throwIfDisposed(),Gl(this,[this.size])},bs().prototype.as2D=function(e,t){return this.throwIfDisposed(),Gl(this,[e,t])},bs().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Gl(this,[e,t,n])},bs().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Gl(this,[e,t,n,r])},bs().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Gl(this,[e,t,n,r,a])},bs().prototype.asin=function(){return this.throwIfDisposed(),ml(this)},bs().prototype.asinh=function(){return this.throwIfDisposed(),yl(this)},bs().prototype.atan=function(){return this.throwIfDisposed(),xl(this)},bs().prototype.atan2=function(e){return this.throwIfDisposed(),vl(this,e)},bs().prototype.atanh=function(){return this.throwIfDisposed(),Il(this)},bs().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),jl(this,e,t,n,r)},bs().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),lu(this,e,t)},bs().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),pu(this,e,t,n,r,a)},bs().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Iu(this,e)},bs().prototype.cast=function(e){return this.throwIfDisposed(),bo(this,e)},bs().prototype.ceil=function(){return this.throwIfDisposed(),Nu(this)},bs().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),_u(this,e,t)},bs().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ys&&(e=[e]),Yl([this,...e],t)},bs().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Bu(this,e,t,n,r,a,s)},bs().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Gu(this,e,t,n,r,a)},bs().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),zu(this,e,t,n,r,a,s)},bs().prototype.cos=function(){return this.throwIfDisposed(),Ju(this)},bs().prototype.cosh=function(){return this.throwIfDisposed(),eh(this)},bs().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),nh(this,e,t,n)},bs().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ah(this,e,t,n)},bs().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},bs().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hh(this,e,t,n,r,a,s)},bs().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),fh(this,e,t,n,r,a)},bs().prototype.divNoNan=function(e){return this.throwIfDisposed(),Th(this,e)},bs().prototype.div=function(e){return this.throwIfDisposed(),Xo(this,e)},bs().prototype.dot=function(e){return this.throwIfDisposed(),_h(this,e)},bs().prototype.elu=function(){return this.throwIfDisposed(),Rh(this)},bs().prototype.equal=function(e){return this.throwIfDisposed(),wh(this,e)},bs().prototype.erf=function(){return this.throwIfDisposed(),Dh(this)},bs().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},bs().prototype.exp=function(){return this.throwIfDisposed(),lp(this)},bs().prototype.expandDims=function(e){return this.throwIfDisposed(),hp(this,e)},bs().prototype.expm1=function(){return this.throwIfDisposed(),dp(this)},bs().prototype.fft=function(){return this.throwIfDisposed(),Yf(this)},bs().prototype.flatten=function(){return this.throwIfDisposed(),Gl(this,[this.size])},bs().prototype.floor=function(){return this.throwIfDisposed(),bp(this)},bs().prototype.floorDiv=function(e){return this.throwIfDisposed(),qo(this,e)},bs().prototype.gather=function(e,t){return this.throwIfDisposed(),wp(this,e,t)},bs().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Sp(this,e)},bs().prototype.greater=function(e){return this.throwIfDisposed(),kp(this,e)},bs().prototype.ifft=function(){return this.throwIfDisposed(),Jf(this)},bs().prototype.irfft=function(){return this.throwIfDisposed(),em(this)},bs().prototype.isFinite=function(){return this.throwIfDisposed(),_p(this)},bs().prototype.isInf=function(){return this.throwIfDisposed(),Ap(this)},bs().prototype.isNaN=function(){return this.throwIfDisposed(),Rp(this)},bs().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Dp(this,e)},bs().prototype.lessEqual=function(e){return this.throwIfDisposed(),zp(this,e)},bs().prototype.less=function(e){return this.throwIfDisposed(),Op(this,e)},bs().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Wp(this,e,t,n,r)},bs().prototype.logSigmoid=function(){return this.throwIfDisposed(),ad(this)},bs().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ld(this,e)},bs().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),hd(this,e,t)},bs().prototype.log=function(){return this.throwIfDisposed(),Up(this)},bs().prototype.log1p=function(){return this.throwIfDisposed(),Hp(this)},bs().prototype.logicalAnd=function(e){return this.throwIfDisposed(),dd(this,e)},bs().prototype.logicalNot=function(){return this.throwIfDisposed(),fd(this)},bs().prototype.logicalOr=function(e){return this.throwIfDisposed(),gd(this,e)},bs().prototype.logicalXor=function(e){return this.throwIfDisposed(),bd(this,e)},bs().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Jl(this,e,t,n)},bs().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Sd(this,e,t,n,r)},bs().prototype.max=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},bs().prototype.maximum=function(e){return this.throwIfDisposed(),Ad(this,e)},bs().prototype.mean=function(e,t){return this.throwIfDisposed(),Rd(this,e,t)},bs().prototype.min=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},bs().prototype.minimum=function(e){return this.throwIfDisposed(),Ld(this,e)},bs().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Pd(this,e,t)},bs().prototype.mod=function(e){return this.throwIfDisposed(),Wd(this,e)},bs().prototype.mul=function(e){return this.throwIfDisposed(),Zo(this,e)},bs().prototype.neg=function(){return this.throwIfDisposed(),ed(this)},bs().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ap(this,e,t,n)},bs().prototype.notEqual=function(e){return this.throwIfDisposed(),Xd(this,e)},bs().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Zd(this,e,t,n)},bs().prototype.onesLike=function(){return this.throwIfDisposed(),Qd(this)},bs().prototype.pad=function(e,t){return this.throwIfDisposed(),rc(this,e,t)},bs().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),yc(this,e,t,n,r,a,s)},bs().prototype.pow=function(e){return this.throwIfDisposed(),Kh(this,e)},bs().prototype.prelu=function(e){return this.throwIfDisposed(),xc(this,e)},bs().prototype.prod=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},bs().prototype.reciprocal=function(){return this.throwIfDisposed(),lf(this)},bs().prototype.relu=function(){return this.throwIfDisposed(),hf(this)},bs().prototype.relu6=function(){return this.throwIfDisposed(),df(this)},bs().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Gl(this,e.shape)},bs().prototype.reshape=function(e){return this.throwIfDisposed(),Gl(this,e)},bs().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),dy(this,e,t,n)},bs().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),fy(this,e,t,n)},bs().prototype.reverse=function(e){return this.throwIfDisposed(),ff(this,e)},bs().prototype.rfft=function(){return this.throwIfDisposed(),am(this)},bs().prototype.round=function(){return this.throwIfDisposed(),Sf(this)},bs().prototype.rsqrt=function(){return this.throwIfDisposed(),Tf(this)},bs().prototype.selu=function(){return this.throwIfDisposed(),_f(this)},bs().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Af(this,e,t,n,r,a,s)},bs().prototype.sigmoid=function(){return this.throwIfDisposed(),eu(this)},bs().prototype.sign=function(){return this.throwIfDisposed(),Df(this)},bs().prototype.sin=function(){return this.throwIfDisposed(),Of(this)},bs().prototype.sinh=function(){return this.throwIfDisposed(),zf(this)},bs().prototype.slice=function(e,t){return this.throwIfDisposed(),nu(this,e,t)},bs().prototype.softmax=function(e){return this.throwIfDisposed(),Kf(this,e)},bs().prototype.softplus=function(){return this.throwIfDisposed(),nd(this)},bs().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),cc(this,e,t)},bs().prototype.split=function(e,t){return this.throwIfDisposed(),nm(this,e,t)},bs().prototype.sqrt=function(){return this.throwIfDisposed(),Zh(this)},bs().prototype.square=function(){return this.throwIfDisposed(),Qh(this)},bs().prototype.squaredDifference=function(e){return this.throwIfDisposed(),im(this,e)},bs().prototype.squeeze=function(e){return this.throwIfDisposed(),lm(this,e)},bs().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof ys?[this,e]:[this,...e];return hm(n,t)},bs().prototype.step=function(e){return this.throwIfDisposed(),dm(this,e)},bs().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),fm(this,e,t,n,r,a,s,i,o)},bs().prototype.sub=function(e){return this.throwIfDisposed(),id(this,e)},bs().prototype.sum=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},bs().prototype.tan=function(){return this.throwIfDisposed(),gm(this)},bs().prototype.tanh=function(){return this.throwIfDisposed(),au(this)},bs().prototype.tile=function(e){return this.throwIfDisposed(),fp(this,e)},bs().prototype.toBool=function(){return this.throwIfDisposed(),bo(this,"bool")},bs().prototype.toFloat=function(){return this.throwIfDisposed(),bo(this,"float32")},bs().prototype.toInt=function(){return this.throwIfDisposed(),bo(this,"int32")},bs().prototype.topk=function(e,t){return this.throwIfDisposed(),Sm(this,e,t)},bs().prototype.transpose=function(e){return this.throwIfDisposed(),Wm(this,e)},bs().prototype.unique=function(e){return this.throwIfDisposed(),_m(this,e)},bs().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Am(this,e,t)},bs().prototype.unstack=function(e){return this.throwIfDisposed(),Rm(this,e)},bs().prototype.where=function(e,t){return this.throwIfDisposed(),kh(e,this,t)},bs().prototype.zerosLike=function(){return this.throwIfDisposed(),Sh(this)};var pI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pI.prototype)}},dI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dI.prototype)}},cI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cI.prototype)}},fI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fI.prototype)}},mI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mI.prototype)}},gI=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function yI(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function bI(e,t){if(!e)throw new mI(t)}function xI(e,t){let n=0;for(let r of e)r===t&&n++;return n}function wI(e){return 1===e.length?e[0]:e}function vI(e){return Array.isArray(e)?e:[e]}function kI(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function II(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var SI={};function NI(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function TI(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>TI(e));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?TI(t):e[n]=t.value)}}}function CI(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in SI)a=SI[s];else if(a=t[s],null==a)throw new cI(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new cI(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in SI?[i,o]=SI.className:l in t&&([i,o]=t[l]),null==i)throw new cI(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let n of Object.keys(SI))e[n]=SI[n];for(let a of Object.keys(n))e[a]=n[a];let t=s.config;t.customObjects=e;let r=Object.assign({},SI);for(let a of Object.keys(n))SI[a]=n[a];TI(s.config);let l=o(i,s.config,n,a);return SI=Object.assign({},r),l}{let e=Object.assign({},SI);for(let r of Object.keys(n))SI[r]=n[r];let t=new i(s.config);return SI=Object.assign({},e),t}}}function _I(e,t){return e<t?-1:e>t?1:0}function EI(e,t){return-1*_I(e,t)}function AI(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function $I(e){if(null==e)throw new cI("Invalid value in obj: "+JSON.stringify(e));for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function RI(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new cI(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function FI(e,t,n=0,r=1/0){return bI(n>=0),bI(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function DI(e,t){Array.isArray(e)?(Ia.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>DI(e,`element ${n+1} of ${t}`))):Ia.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${MI(e)}.`)}function MI(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>MI(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function OI(e,t,n){let r,a=null!=n?n():Ia.now();return(...s)=>{let i=null!=n?n():Ia.now();return i-a<t||(a=i,r=e(...s)),r}}function LI(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var zI=0;function PI(){return zI++}var BI={};function WI(e=""){return e in BI||(BI[e]=0),BI[e]+=1,e+BI[e].toString()}var VI=["channelsFirst","channelsLast"],UI=["nearest","bilinear"],GI=["valid","same","causal"],HI=["max","avg"],jI=["sum","mul","concat","ave"],qI=new Map;function KI(e){RI(VI,"DataFormat",e)}function XI(e){RI(UI,"InterpolationFormat",e)}function YI(e){RI(GI,"PaddingMode",e)}function ZI(e){RI(HI,"PoolMode",e)}var JI=[],QI="/";function eS(e,t){JI.push(e);try{let e=t();return JI.pop(),e}catch(n){throw JI.pop(),n}}function tS(){return 0===JI.length?"":JI.join(QI)+QI}function nS(e){if(!iS(e))throw new Error("Not a valid tensor name: '"+e+"'");return tS()+e}function rS(e){if(!iS(e))throw new Error("Not a valid tensor name: '"+e+"'");qI.has(e)||qI.set(e,0);let t=qI.get(e);if(qI.set(e,qI.get(e)+1),t>0){let n=`${e}_${t}`;return qI.set(n,1),n}return e}var aS,sS=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function iS(e){return!!e.match(sS)}function oS(e){return e===parseInt(e.toString(),10)}function lS(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function uS(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function hS(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function pS(e,t){if(t<e)throw new cI(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function dS(){return null==aS&&(aS=Vo().epsilon()),aS}function cS(){return"channelsLast"}function fS(e,t){return bo(e,t)}function mS(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Gl(e,n)}function gS(e,t){return $o(()=>{if(2!==e.shape.length)throw new cI(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=mS(e,1);return SS(n,[1,t,1])})}function yS(e){let t=[lS(e.shape)];return Gl(e,t)}function bS(e){if(e.rank<=1)throw new cI(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],lS(e.shape,1)];return Gl(e,t)}function xS(e,t,n){return $o(()=>{switch(e.rank){case 1:return Bf(e,t,n);case 2:return Vf(e,[t,0],[n,e.shape[1]]);case 3:return Gf(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return jf(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return nu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return nu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new cI("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function wS(e,t,n){return $o(()=>{switch(e.rank){case 1:return Bf(e,t,n);case 2:return Vf(e,[0,t],[e.shape[0],n]);case 3:return Gf(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return jf(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new cI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function vS(e,t,n,r){return $o(()=>{switch(e.rank){case 1:return Bf(e,t,n);case 2:switch(r){case 1:return xS(e,t,n);case 2:return wS(e,t,n);default:throw new cI("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return xS(e,t,n);case 2:return Gf(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return wS(e,t,n);default:throw new cI("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return xS(e,t,n);case 2:return jf(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return jf(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return wS(e,t,n);default:throw new cI("The axis is not within the rank of the tensor "+r)}default:throw new cI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function kS(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Yl(e,t)}function IS(e,t){switch(e.rank){case 1:return Au([e,t]);case 2:return Ru([e,t],0);case 3:return Du([e,t],0);case 4:return Ou([e,t],0);default:throw new cI("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function SS(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new cI(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return fp(e,t)}function NS(e,t=0,n=1,r,a){return Jc(e,t,n,r,a)}function TS(e,t,n,r){if(e.rank<2||t.rank<2)throw new fI(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new fI(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return lg.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ES(e.rank,r,cS()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Gl(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=Gl(Wm(t,h),[l,-1]);let p=[...a,...u],d=!1,c=!1;return Gl(lg.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?ES(e.rank,r,cS()):null,activation:n}),p)}}function CS(e,t,n){return $o(()=>(t=Array.isArray(t)?ym(t,"int32"):bo(t,"int32"),wp(e,t,n)))}function _S(e){return Zo(e,e)}function ES(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new cI(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Gl(t,[1,r[0],1,1,1]):Gl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Gl(t,[1,1,1,1,r[0]]):Gl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Gl(t,[1,r[0],1,1]):Gl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Gl(t,[1,1,1,r[0]]):Gl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Gl(t,[1,r[0],1]):Gl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Gl(t,[1,1,r[0]]):Gl(t,[1].concat(r))}else if(e<3)return t;throw new cI("Unsupported input rank by biasAdd: "+t.rank)}function AS(e,t,n){return $o(()=>(null==n&&(n=cS()),KI(n),Ho(e,ES(e.rank,t,n))))}function $S(e,t=1){if(1!==t)throw new fI(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Rh(e)}function RS(e){return $o(()=>Xo(e,Ho(Qo(e),1)))}function FS(e,t,n,r){return $o(()=>rg(e,t,n,r))}function DS(e){return $o(()=>{let t=Ho(.5,Zo(.2,e));return _u(t,0,1)})}function MS(e,t,n=!1){return n?e():t()}var OS=["fanIn","fanOut","fanAvg"],LS=["normal","uniform","truncatedNormal"];function zS(e){RI(OS,"FanMode",e)}function PS(e){RI(LS,"Distribution",e)}var BS=class extends mb.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},WS=class extends BS{apply(e,t){return Fd(e,t)}};WS.className="Zeros",mb.registerClass(WS);var VS=class extends BS{apply(e,t){return Dd(e,t)}};VS.className="Ones",mb.registerClass(VS);var US=class extends BS{constructor(e){if(super(),"object"!=typeof e)throw new cI("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new cI("config must have value set but got "+e);this.value=e.value}apply(e,t){return $o(()=>Zo(Xh(this.value),Dd(e,t)))}getConfig(){return{value:this.value}}};US.className="Constant",mb.registerClass(US);var GS=class extends BS{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return nf(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};GS.className="RandomUniform",mb.registerClass(GS);var HS=class extends BS{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new fI(`randomNormal does not support dType ${t}.`);return NS(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};HS.className="RandomNormal",mb.registerClass(HS);var jS=class extends BS{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new fI(`truncatedNormal does not support dType ${t}.`);return Tm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};jS.className="TruncatedNormal",mb.registerClass(jS);var qS=class extends BS{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return $o(()=>{if(2!==e.length||e[0]!==e[1])throw new cI("Identity matrix initializer can only be used for 2D square matrices.");return Zo(this.gain,gp(e[0]))})}getConfig(){return{gain:this.gain}}};function KS(e,t="channelsLast"){let n,r;if(KI(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=lS(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=lS(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=lS(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}qS.className="Identity",mb.registerClass(qS);var XS=class extends BS{constructor(e){if(super(),e.scale<0)throw new cI("scale must be a positive float. Got: "+e.scale);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,zS(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,PS(this.distribution),this.seed=e.seed}apply(e,t){let n=KS(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new fI(`${this.getClassName()} does not support dType ${t}.`);return Tm(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return nf(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};XS.className="VarianceScaling",mb.registerClass(XS);var YS=class extends XS{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return XS.className}};YS.className="GlorotUniform",mb.registerClass(YS);var ZS=class extends XS{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return XS.className}};ZS.className="GlorotNormal",mb.registerClass(ZS);var JS=class extends XS{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return XS.className}};JS.className="HeNormal",mb.registerClass(JS);var QS=class extends XS{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return XS.className}};QS.className="HeUniform",mb.registerClass(QS);var eN=class extends XS{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return XS.className}};eN.className="LeCunNormal",mb.registerClass(eN);var tN=class extends XS{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return XS.className}};tN.className="LeCunUniform",mb.registerClass(tN);var nN=class extends BS{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new fI("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return $o(()=>{if(e.length<2)throw new fI("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=e[0]>e[1]?[e[1],e[0]]:e,n=NS(t,0,1,"float32"),r=pb.gramSchmidt(n);return e[0]>e[1]&&(r=Wm(r)),Zo(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};nN.className="Orthogonal",mb.registerClass(nN);var rN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function aN(e,t={}){return CI(e,mb.SerializationMap.getMap().classNameMap,t,"initializer")}function sN(e){return NI(e)}function iN(e){if("string"==typeof e){let t=e in rN?rN[e]:e;if("GlorotNormal"===t)return new ZS;if("GlorotUniform"===t)return new YS;if("HeNormal"===t)return new JS;if("HeUniform"===t)return new QS;if("LeCunNormal"===t)return new eN;if("LeCunUniform"===t)return new tN;{let e={};return e.className=t,e.config={},aN(e)}}return e instanceof BS?e:aN(e)}function oN(e){return Array.isArray(e)&&Array.isArray(e[0])}function lN(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function uN(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new cI("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function hN(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e=e,e[0];throw new cI("Expected exactly 1 Shape; got "+e.length)}return e}function pN(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}var dN="Variable",cN=class{constructor(e,t="float32",n=dN,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=PI(),n=null==n?dN:n,this.originalName=nS(n),this.name=rS(this.originalName),this.trainable_=r,this.constraint=a,this.val=Dm(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),fN(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function fN(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function mN(e){return e.map(e=>e.read())}function gN(e){e.forEach(e=>{e[0].write(e[1])})}var yN=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},bN=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=PI(),null!=s&&(this.originalName=nS(s),this.name=rS(this.originalName)),this.rank=t.length}},xN=0,wN=class{constructor(e,t){this.callArgs=t,this.id=xN++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},vN=0,kN=class extends mb.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vN++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=kI(e)+"_"+WI(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new dI(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new cI(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return wI(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return wI(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new pI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new pI(`Layer ${this.name} is not connected, no input to return.`);return wI(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new pI(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new pI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wI(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=vI(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=vI(this.inputSpec);if(e.length!==t.length)throw new cI(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new cI(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new cI(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new cI(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new cI(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new cI(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new cI(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=vI(e),r=!0;for(let s of n)if(!(s instanceof bN)){r=!1;break}let a=!0;for(let s of n)if(s instanceof bN){a=!1;break}if(r===a)throw new cI("Arguments to apply() must be all SymbolicTensors or all Tensors");return eS(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of vI(e))t.push(n.shape);this.build(wI(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=vI(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=wI(s),null!=this.activityRegularizer)throw new fI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=IN(e),a=this.computeOutputShape(r),s=SN(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,r)=>new bN(s,n,this,vI(e),t,this.name,r)):new bN(s,a,this,vI(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new fI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new pI(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new pI(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dI(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return pN(this.weights)}build(e){this.built=!0}getWeights(e=!1){return mN(e?this.trainableWeights:this.weights)}setWeights(e){$o(()=>{let t=this.weights;if(t.length!==e.length)throw new cI(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=mN(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!Ia.arraysEqual(s.shape,o.shape))throw new cI(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}gN(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new cI(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():iN("zeros"));let l=r.apply(t,n),u=new cN(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=vI(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=vI(e);t=vI(t),n=vI(n),r=vI(r),a=lN(a),s=lN(s);let l=[],u=[],h=[];for(let p of o)l.push(p.sourceLayer),u.push(p.nodeIndex),h.push(p.tensorIndex);new wN({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function IN(e){e=vI(e);let t=[];for(let n of e)t.push(n.shape);return wI(t)}function SN(e){return"float32"}function NN(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=e.inputTensors[n],a=e.inboundLayers[n],s=e.nodeIndices[n],i=NN(r,a,s);for(let e of i)-1===t.indexOf(e)&&t.push(e)}return t}}}var TN=class extends kN{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:WI("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new cI("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new cI("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new cI("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new bN(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new cI("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function CN(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new cI("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new TN({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function _N(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return bo(t,e.dtype)}catch(n){throw new cI(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}TN.className="InputLayer",mb.registerClass(TN);var EN=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof EN)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new cI(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=_N(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof bN){if(null==this.id2Value[e.id])throw new cI("Nonexistent key: "+e.name);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new cI("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof bN){if(null==this.id2Value[e.id])throw new cI("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new cI("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ro(this.id2Mask)}},AN=new gI,$N=new gI;function RN(e){null!=AN&&AN.setMaxEntries(e),null!=$N&&$N.setMaxEntries(e)}function FN(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),l=[],u=t.names();for(let f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p=o.join(",")+"|"+t.names().sort().join(","),d=AN.get(p);if(null==d){let e=DN(i,t);d=e.sorted,h=e.recipientCounts,AN.put(p,d),$N.put(p,h)}h={},a||Object.assign(h,$N.get(p));let c=new EN(t);for(let f=0;f<d.length;++f){if(null!=r){let e=Eo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let e=d[f],s=e.sourceLayer;if(s instanceof TN)continue;let i=[],u=[],p=[],m=!1;for(let n of e.inputs){let e=c.getValue(n),r=c.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),a||(h[n.name]--,0===h[n.name]&&!t.hasKey(n)&&-1===o.indexOf(n.name)&&!e.isDisposed&&!0!==n.sourceLayer.stateful&&p.push(e))}m&&(n=n||{},n.mask=u[0]);let g=vI(s.apply(i,n)),y=null;s.supportsMasking&&(y=s.computeMask(i,u));let b=LN(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){c.hasKey(x[t])||c.add(x[t],g[t],Array.isArray(y)?y[0]:y);let e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}a||Ro(p)}return c.disposeMasks(),s?l:l[0]}function DN(e,t){Ia.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){let a=ON(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=ON(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:MN(r)}}function MN(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ON(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function LN(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var zN=Ue();zN.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,RN);var PN={};function BN(e,t){return $o(()=>Zh(tp(Zo(e,e),t,!0)))}b(PN,{maxNorm:()=>YN,minMaxNorm:()=>QN,nonNeg:()=>JN,unitNorm:()=>ZN});var WN=class extends mb.Serializable{getConfig(){return{}}},VN=class extends WN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return $o(()=>{let t=BN(e,this.axis),n=_u(t,0,this.maxValue);return Zo(e,Xo(n,Ho(dS(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};VN.className="MaxNorm",mb.registerClass(VN);var UN=class extends WN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return $o(()=>Xo(e,Ho(dS(),BN(e,this.axis))))}getConfig(){return{axis:this.axis}}};UN.className="UnitNorm",mb.registerClass(UN);var GN=class extends WN{apply(e){return hf(e)}};GN.className="NonNeg",mb.registerClass(GN);var HN=class extends WN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return $o(()=>{let t=BN(e,this.axis),n=Ho(Zo(this.rate,_u(t,this.minValue,this.maxValue)),Zo(1-this.rate,t));return Zo(e,Xo(n,Ho(dS(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};HN.className="MinMaxNorm",mb.registerClass(HN);var jN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qN(e){return NI(e)}function KN(e,t={}){return CI(e,mb.SerializationMap.getMap().classNameMap,t,"constraint")}function XN(e){if(null==e)return null;if("string"==typeof e){let t={className:e in jN?jN[e]:e,config:{}};return KN(t)}return e instanceof WN?e:KN(e)}function YN(e){return new VN(e)}function ZN(e){return new UN(e)}function JN(){return new GN}function QN(e){return new HN(e)}var eT={};function tT(){return new WS}function nT(){return new VS}function rT(e){return new US(e)}function aT(e){return new GS(e)}function sT(e){return new HS(e)}function iT(e){return new jS(e)}function oT(e){return new qS(e)}function lT(e){return new XS(e)}function uT(e){return new YS(e)}function hT(e){return new ZS(e)}function pT(e){return new JS(e)}function dT(e){return new QS(e)}function cT(e){return new eN(e)}function fT(e){return new tN(e)}function mT(e){return new nN(e)}b(eT,{constant:()=>rT,glorotNormal:()=>hT,glorotUniform:()=>uT,heNormal:()=>pT,heUniform:()=>dT,identity:()=>oT,leCunNormal:()=>cT,leCunUniform:()=>fT,ones:()=>nT,orthogonal:()=>mT,randomNormal:()=>sT,randomUniform:()=>aT,truncatedNormal:()=>iT,varianceScaling:()=>lT,zeros:()=>tT});var gT,yT={};async function bT(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Ro(r)}}function xT(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}b(yT,{Layer:()=>kN,RNN:()=>gE,RNNCell:()=>yE,activation:()=>e$,add:()=>u$,alphaDropout:()=>Q$,average:()=>h$,averagePooling1d:()=>x$,averagePooling2d:()=>k$,averagePooling3d:()=>N$,avgPool1d:()=>w$,avgPool2d:()=>I$,avgPool3d:()=>T$,avgPooling1d:()=>v$,avgPooling2d:()=>S$,avgPooling3d:()=>C$,batchNormalization:()=>g$,bidirectional:()=>H$,categoryEncoding:()=>aR,centerCrop:()=>nR,concatenate:()=>p$,conv1d:()=>HA,conv2d:()=>jA,conv2dTranspose:()=>qA,conv3d:()=>KA,conv3dTranspose:()=>XA,convLstm2d:()=>W$,convLstm2dCell:()=>V$,cropping2D:()=>ZA,dense:()=>t$,depthwiseConv2d:()=>QA,dot:()=>m$,dropout:()=>n$,elu:()=>PA,embedding:()=>l$,flatten:()=>a$,gaussianDropout:()=>J$,gaussianNoise:()=>Z$,globalAveragePooling1d:()=>_$,globalAveragePooling2d:()=>E$,globalMaxPool1d:()=>q$,globalMaxPool2d:()=>K$,globalMaxPooling1d:()=>A$,globalMaxPooling2d:()=>$$,gru:()=>M$,gruCell:()=>O$,input:()=>d_,inputLayer:()=>zA,layerNormalization:()=>y$,leakyReLU:()=>WA,lstm:()=>L$,lstmCell:()=>z$,masking:()=>eR,maxPool1d:()=>X$,maxPool2d:()=>Y$,maxPooling1d:()=>R$,maxPooling2d:()=>F$,maxPooling3d:()=>D$,maximum:()=>d$,minimum:()=>c$,multiply:()=>f$,permute:()=>o$,prelu:()=>VA,reLU:()=>BA,repeatVector:()=>s$,rescaling:()=>tR,reshape:()=>i$,resizing:()=>rR,rnn:()=>U$,separableConv2d:()=>YA,simpleRNN:()=>P$,simpleRNNCell:()=>B$,softmax:()=>UA,spatialDropout1d:()=>r$,stackedRNNCells:()=>G$,thresholdedReLU:()=>GA,timeDistributed:()=>j$,upSampling2d:()=>JA,zeroPadding2d:()=>b$}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(gT||(gT={}));var wT=125,vT=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},kT=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},IT=class extends vT{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let r in t){let e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;let a=$o(()=>Ho(this.totals[r],Zo(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:$o(()=>{let e=Zo(Xo(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Fo(t[n])}))}},ST=class extends vT{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){let i=r[s];e.push(i.data()),t.push(a),n.push(s)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},NT=class extends vT{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Gx,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=wT),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ia.isNumber(this.yieldEvery)&&(this.maybeWait=OI(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await bT(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await bT(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await bT(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await bT(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await bT(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ia.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await bT(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await bT(e),await this.trainEnd(e))}};function TT(e,t){return null==e&&(e={}),e instanceof vT?[e]:Array.isArray(e)&&e[0]instanceof vT?e:vI(e).map(e=>new NT(e,t))}var CT=class{constructor(){}static registerCallbackConstructor(e,t){Ia.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),CT.checkForDuplicate(t),null==CT.constructors[e]&&(CT.constructors[e]=[]),CT.constructors[e].push(t)}static checkForDuplicate(e){for(let t in CT.constructors)CT.constructors[+t].forEach(t=>{if(t===e)throw new cI("Duplicate callback constructor.")})}static clear(){CT.constructors={}}static createCallbacks(e){let t=[];for(let n in CT.constructors){let r=+n;e>=r&&t.push(...CT.constructors[r])}return t.map(e=>new e)}};function _T(e,t,n,r,a,s,i,o,l){let u=new ST,h=[new IT,...CT.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new kT(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function ET(e,t={},n=!1){return CI(e,mb.SerializationMap.getMap().classNameMap,t,"layer",n)}function AT(e,t){return $o(()=>{"float32"!==e.dtype&&(e=bo(e,"float32"));let n=tp(_S(e),t,!0),r=Tu(n.shape,dS()),a=Zh(Ad(n,r));return Xo(e,a)})}function $T(e,t){return $o(()=>Rd(_S(id(t,e)),-1))}function RT(e,t){return $o(()=>Rd(Qo(id(t,e)),-1))}function FT(e,t){return $o(()=>{let n=id(e,t),r=_u(Qo(e),dS(),Number.MAX_VALUE),a=Qo(Xo(n,r));return Zo(100,Rd(a,-1))})}function DT(e,t){return $o(()=>{let n=_u(t,dS(),Number.MAX_VALUE),r=Up(Ho(1,n)),a=_u(e,dS(),Number.MAX_VALUE),s=Up(Ho(1,a));return Rd(_S(id(r,s)),-1)})}function MT(e,t){return $o(()=>{let n=Ad(0,id(1,Zo(e,t)));return Rd(_S(n),-1)})}function OT(e,t){return $o(()=>{let n=Ad(0,id(1,Zo(e,t)));return Rd(n,-1)})}function LT(e,t){return $o(()=>{let n=tp(Zo(e,t),-1),r=Gh(Zo(id(1,e),t),-1);return Ad(0,Ho(1,id(r,n)))})}function zT(e,t){return $o(()=>{let n=Math.log(2),r=id(t,e),a=id(Ho(r,nd(Zo(-2,r))),n);return Rd(a,-1)})}function PT(e,t,n=!1){return $o(()=>{if(n)t=Kf(t);else{let e=tp(t,t.shape.length-1,!0);t=Xo(t,e)}return t=_u(t,dS(),1-dS()),ed(tp(Zo(bo(e,"float32"),Up(t)),t.shape.length-1))})}function BT(e,t,n=!1){return $o(()=>{let r=bo(bp(yS(e)),"int32");t=_u(t,dS(),1-dS());let a=t.shape,s=Gl(Zd(r,a[a.length-1]),a);return PT(s,t,n)})}function WT(e,t){if(!Ia.arraysEqual(e.shape,t.shape))throw new cI(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return $o(()=>{let n=hf(t),r=ed(Qo(t));return Ho(id(n,Zo(t,e)),Hp(lp(r)))})}function VT(e,t){return $o(()=>{let n;return n=_u(t,dS(),1-dS()),n=Up(Xo(n,id(1,n))),Rd(WT(e,n),-1)})}function UT(e,t){return $o(()=>{let n=_u(e,dS(),1),r=_u(t,dS(),1);return tp(Zo(e,Up(Xo(n,r))),-1)})}function GT(e,t){return $o(()=>{let n=Up(Ho(dS(),t));return Rd(id(t,Zo(e,n)),-1)})}function HT(e,t){return $o(()=>{let n=AT(e,-1),r=AT(t,-1),a=Zo(n,r);return ed(tp(a,-1))})}CT.constructors={};var jT={meanSquaredError:$T,meanAbsoluteError:RT,meanAbsolutePercentageError:FT,meanSquaredLogarithmicError:DT,squaredHinge:MT,hinge:OT,categoricalHinge:LT,logcosh:zT,categoricalCrossentropy:PT,sparseCategoricalCrossentropy:BT,binaryCrossentropy:VT,kullbackLeiblerDivergence:UT,poisson:GT,cosineProximity:HT};function qT(e){if("string"==typeof e){if(e in jT)return jT[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new cI(t)}return e}function KT(e,t){return $o(()=>{let n=Zo(.5,Qd(t)),r=fS(kp(t,n),e.dtype);return Rd(wh(e,r),-1)})}function XT(e,t){return $o(()=>fS(wh(pl(e,-1),pl(t,-1)),"float32"))}function YT(e,t){return $o(()=>bo(tp(dd(wh(e,1),wh(t,1))),"float32"))}function ZT(e,t){return $o(()=>bo(tp(dd(wh(e,1),wh(t,0))),"float32"))}function JT(e,t){return $o(()=>bo(tp(dd(wh(e,0),wh(t,1))),"float32"))}function QT(e,t){return $o(()=>{let n=YT(e,t),r=JT(e,t),a=Ho(n,r);return bo(kh(kp(a,0),Xo(n,a),0),"float32")})}function eC(e,t){return $o(()=>{let n=YT(e,t),r=ZT(e,t),a=Ho(n,r);return bo(kh(kp(a,0),Xo(n,a),0),"float32")})}function tC(e,t){return VT(e,t)}function nC(e,t){return e.rank===t.rank&&(e=lm(e,[e.rank-1])),t=pl(t,-1),t.dtype!==e.dtype&&(t=bo(t,e.dtype)),bo(wh(e,t),"float32")}var rC=$T,aC=$T,sC=RT,iC=RT,oC=FT,lC=FT,uC=PT,hC=HT,pC=BT,dC={binaryAccuracy:KT,categoricalAccuracy:XT,precision:QT,categoricalCrossentropy:uC,sparseCategoricalCrossentropy:pC,mse:rC,MSE:aC,mae:sC,MAE:iC,mape:oC,MAPE:lC,cosine:hC};function cC(e){if("string"==typeof e&&e in dC)return dC[e];if("string"!=typeof e&&null!=e)return e;throw new cI("Unknown metric "+e)}function fC(e){if(bI(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(let n of Object.keys(jT))if(jT[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(dC))if(dC[n]===e){t=n;break}return void 0!==t?t:e.name}}function mC(e){let t={Adagrad:()=>Vx.adagrad(.01),Adadelta:()=>Vx.adadelta(1,.95,dS()),Adam:()=>Vx.adam(.001,.9,.999,dS()),Adamax:()=>Vx.adamax(.002,.9,.999,dS(),0),RMSProp:()=>Vx.rmsprop(.001,.9,0,dS()),SGD:()=>Vx.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new cI("Unknown Optimizer "+e)}function gC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!yC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function yC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!yC(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!yC(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function bC(e,t,n,r=console.log){let a,s=wC(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),vC(i,n,r),r("=".repeat(t));let o=e.layers;for(let h=0;h<o.length;++h)s?kC(o[h],n,r):IC(o[h],n,a,r),r((h===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=xC(e),u=pN(e.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(t))}function xC(e){let t;return t=null!=e.collectedTrainableWeights?pN(e.collectedTrainableWeights):pN(e.trainableWeights),t}function wC(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let e=!1;for(let n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function vC(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function kC(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(l){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(l){r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];vC(o,t,n)}function IC(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(p){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(p){a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){let t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0],h=[`${o} (${l})`,s,a,e.countParams().toString(),u];vC(h,t,r);for(let d=1;d<i.length;++d)vC(["","","","",i[d]],t,r)}function SC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function NC(e,t){if(null===e)return null;if("string"==typeof e)return II(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];SC(t,a,r)?n.push(r):n.push(NC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=II(n);t[e]=NC(r,e)}}return t}}function TC(e,t){if(null==e)return null;if("string"==typeof e)return kI(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];SC(t,a,r)?n.push(r):n.push(TC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=kI(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?TC(r,n):r}return t}}var CC="4.2.0",_C=class extends kN{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=WI(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],AI(this.inputs).length!==this.inputs.length)throw new cI("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));AI(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(let y of this.inputs){let e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;bI(0===t,"input layer has >1 nodes"),bI(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let t=this.inputLayers[y];if(!(t instanceof TN))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new dI(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(_C.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let s=0;s<h;s++){let e=u.inputTensors[s],r=u.inboundLayers[s],a=u.nodeIndices[s],i=u.tensorIndices[s];o(e,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let h=i.slice().reverse();for(let y of h){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id],s=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,s),r[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){let a=y.inboundLayers[r],s=y.nodeIndices[r],i=a.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}let p={};for(let y in t){let e=t[y];e in p||(p[e]=[]),p[e].push(n[y])}let d={};for(let y in r){let e=r[y];e in d||(d[e]=[]),d[e].push(a[y])}let c=Object.keys(d).map(e=>parseInt(e,10)).sort(EI);this.layers=[];for(let y of c){let e=d[y];e.sort((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(let t of e)t instanceof _C&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,c=Object.keys(p).map(e=>parseInt(e,10)).sort(EI);let f=this.inputs.slice(),m=[];for(let y of c)for(let e of p[y]){let t=e.outboundLayer;if(null!=t){for(let n of e.inputTensors)if(-1===f.indexOf(n))throw new dI(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(let t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=p;let g=this.layers.map(e=>e.name);for(let y of g){let e=g.filter(e=>e===y).length;if(1!==e)throw new dI(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new cI("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let s of this.layers)for(let e of s.weights){if(null!=n[e.originalName])throw new cI("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}let a=[];for(let s in e){let r=s;if(null==n[s]){let e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new cI("Provided weight data has no target variable: "+s);delete n[r]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new cI(`${e.length} of ${r} weights are not set: ${e}`)}gN(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+CC,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=TC(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return $o(()=>{e=vI(e);let n=new EN;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return FN(this.outputs,n,t)})}computeMask(e,t){return $o(()=>{let n;return e=vI(e),n=null==t?yI(null,e.length):vI(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=lN(e);if(t.length!==this.inputLayers.length)throw new cI(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let e=this.inputLayers[i],r=t[i],a=e.name+"_0_0";n[a]=r}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(EI);if(r.length>1)for(let i of r){let e=this.nodesByDepth[i];for(let t of e){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let r=[];for(let o=0;o<t.inboundLayers.length;o++){let e=t.inboundLayers[o],a=t.nodeIndices[o],s=t.tensorIndices[o],i=`${e.name}_${a}_${s}`,l=n[i];r.push(l)}let a=e.computeOutputShape(wI(r)),s=lN(a),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){let r=`${e.name}_${i}_${t}`;n[r]=s[t]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){let e=s[i];bI(e in n),a.push(n[e])}return wI(a)}runInternalGraph(e,t){null==t&&(t=yI(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(EI);for(let o of r){let e=this.nodesByDepth[o];for(let t of e){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(let t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){let[t,n]=s[0];null==u.mask&&(u.mask=n),o=vI(e.call(t,u)),l=vI(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==u.mask&&(u.mask=i),o=vI(e.call(r,u)),l=vI(e.computeMask(r,i));if(e.activityRegularizer)throw new fI("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let o of this.outputs){bI(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let r of this.layers){t=r instanceof _C?1:0;for(let e=0;e<r.inboundNodes.length;e++){let a=_C.nodeKey(r,e);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new cI(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new cI("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new cI("No such layer: "+e)}calculateLosses(){return $o(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=_C.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let e=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){let e=i.inboundNodes[n],r=_C.nodeKey(i,n),o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){let n=[];for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],s=e.nodeIndices[r],i=e.tensorIndices[r],l=_C.nodeKey(a,s),u=t[l];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}let o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=a,n.push(o)}e.layers=n;let r=[];for(let i=0;i<this.inputLayers.length;i++){let e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=_C.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null==s&&(s=0);let o=this.inputLayersTensorIndices[i];r.push([e.name,s,o])}e.inputLayers=r;let a=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=_C.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null==s&&(s=0);let o=this.outputLayersTensorIndices[i];a.push([e.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(wI(r),n)}function l(e){let n=e.name,s=ET(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new cI("Corrupted configuration, expected array for nodeData: "+e);i(s,e)})}let u=t.name,h=t.layers;for(let m of h)l(m);for(;!$I(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let m of c){let e=m[0],t=m[1],n=m[2];bI(e in a);let r=a[e].inboundNodes[t].outputTensors;p.push(r[n])}let f=t.outputLayers;for(let m of f){let e=m[0],t=m[1],n=m[2];bI(e in a);let r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new cI("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){$o(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function EC(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function AC(e,t){return EC(e,t,"classWeight")}async function $C(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=$o(()=>{if(1===e.shape.length)return wo(e);if(2===e.shape.length){if(e.shape[1]>1)return pl(e,1);if(1===e.shape[1])return Gl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Ro(t);let a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),ym(a,"float32")}return null}function RC(e,t){return Zo(e,t)}var FC=32;function DC(e,t){let n,r,a=t;n=a.xs,r=a.ys,Ia.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);let s=MC("input",e.inputNames,n),i=MC("output",e.outputNames,r),o=s[0].shape[0];Ia.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),Ia.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)Ia.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)Ia.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function MC(e,t,n){if(n instanceof ys)return[n];if(Array.isArray(n))return Ia.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(null==n[a])throw new cI(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function OC(e){if(3===e.length)throw new fI("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function LC(e,t,n){let r=null!=n.batchesPerEpoch;if(Ia.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),Ia.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),Ia.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),Ia.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),Ia.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(PC(n.validationData))Ia.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{let e=OC(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map(e=>"val_"+e)):u.slice();let h=TT(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=_T(h,p,n.epochs,null,null,zC(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=DC(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=AC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await $C(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);Ro(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,Fo(n)}await d.onBatchEnd(p,s),xT(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=PC(n.validationData)?vI(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):vI(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?FC:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function zC(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function PC(e){return"function"==typeof e.iterator}function BC(e){return"function"==typeof e.next}async function WC(e,t,n){n=n||{};let r=null!=n.batches,a=e.testFunction,s=[];if(n.verbose>0)throw new fI("Verbose mode is not implemented yet.");Ia.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));let i=BC(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=$o(()=>{if(t.value){let{xs:n,ys:r}=DC(e,t.value),i=n.concat(r),u=$o(()=>a(i));if(Ro(i),0===l)for(let e=0;e<u.length;++e)s.push(Xh(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=$o(()=>Ho(s[e],Zo(h,t))),l>0&&Ro(n)}Ro(u),o+=h,++l}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let e=s[u];s[u]=Xo(s[u],o),Ro(e)}return wI(s)}function VC(e){Ia.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function UC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>xS(e,t,n-t)):xS(e,t,n-t)}function GC(e,t){return $o(()=>null==e?null:Array.isArray(e)?e.map(e=>GC(e,t)):CS(e,"int32"===t.dtype?t:bo(t,"int32")))}function HC(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function jC(e){let t=[];e instanceof ys&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(mS(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function qC(e,t){if(null==e)return;let n=[];if(t instanceof ys)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(let a in t){let e=t[a];n.push(e.id)}let r=[];if(e instanceof ys)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(let a in e){let t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function KC(e){return e instanceof ys}function XC(e){return Array.isArray(e)}function YC(e){return!KC(e)&&!XC(e)}function ZC(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(XC(e)&&e.length>0)t=!0;else if(YC(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new cI(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(YC(e)){e=e,s=[];for(let n of t){if(null==e[n])throw new cI(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(XC(e)){if(e=e,e.length!==t.length)throw new cI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new cI(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=jC(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new cI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;let s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new cI(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function JC(e,t,n){let r=AI(e.map(e=>e.shape[0]));r.sort();let a=AI(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new cI("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(a.length>1)throw new cI("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(r.length>0&&a.length>0&&!Ia.arraysEqual(r,a))throw new cI(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function QC(e,t,n){let r=[$T,VT,PT];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===PT&&1===s.shape[s.shape.length-1])throw new cI(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new cI(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function e_(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new cI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new cI(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new cI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;let o=e.shape[s],l=n[i][s];if(null!=l&&l!==o)throw new cI(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function t_(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}var n_="layers-model",r_=class extends _C{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new cI("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");bC(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=mC(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof xb))throw new cI("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new cI(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>qT(e))}else{let n=qT(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new cI(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(qT(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],eS("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let r=t_(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};eS("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=r[e];(t=>{let n,r,s,i="";for(let o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===VT?-1!==["accuracy","acc"].indexOf(o)?r=KT:-1!==["crossentropy","ce"].indexOf(o)&&(r=tC):this.lossFunctions[e]===BT?-1!==["accuracy","acc"].indexOf(o)?r=nC:-1!==["crossentropy","ce"].indexOf(o)&&(r=pC):-1!==["accuracy","acc"].indexOf(o)?r=XT:-1!==["crossentropy","ce"].indexOf(o)&&(r=uC),-1!==["accuracy","acc"].indexOf(o)?t="acc":-1!==["crossentropy","ce"].indexOf(o)&&(t="ce"),s=r,n=i+t}else s=cC(o),n=i+fC(o);let t;eS(n,()=>{t=s}),a(e,n,t)}})(t)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;VC(r);let a=!0,s=this.standardizeUserDataXY(e,t,a,r);try{let a=s[0].concat(s[1]);this.makeTestFunction();let i=this.testFunction,o=this.testLoop(i,a,r,n.verbose,n.steps);return wI(o)}finally{qC(s[0],e),qC(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),WC(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new cI(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new cI(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new cI("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new EN;if(e instanceof ys&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new cI(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let o of this.inputs){let t=e[o.name];if(null==t)throw new cI("No value is provided for the model's input "+o.name);s.add(o,t)}let i=FN(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=yI(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new cI("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return $o(()=>{let r=this.checkNumSamples(e);if(n)throw new fI("Verbose predictLoop() is not implemented yet.");let a=HC(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)$o(()=>{let n=a[t][0],r=a[t][1],s=UC(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new EN(i);return FN(this.outputs,o)}).forEach((e,t)=>s[t].push(e));return wI(s.map(e=>Yl(e,0)))})}predict(e,t={}){let n=jC(e);e_(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return VC(r),this.predictLoop(n,r)}finally{qC(n,e)}}predictOnBatch(e){e_(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new dI("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let e=this.feedOutputShapes[s];this.feedLossFns[s]===BT?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(e=ZC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ZC(t,this.feedOutputNames,a,!1,"target"),JC(e,t,null),QC(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new cI(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=AC(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await $C(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return $o(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new fI("Verbose mode is not implemented yet.");if(null!=a)throw new fI("steps mode in testLoop() is not implemented yet");{let r=HC(s,n),a=ym(pS(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=xS(a,s,o-s),u=GC(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(Xh(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=Ho(i[e],Zo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Xo(i[e],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(xI(e,r)>1){let t=xI(e.slice(0,n),r);a+="_"+t}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new EN(e),l=FN(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let e=this.lossFunctions[n],s=e(r[n],l[n]);null!=a[n]&&(s=RC(s,a[n]));let o=Rd(s);t.push(o),i=0===n?s:Ho(i,s)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{let t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=Rd(t(r[a],l[a]))}Fo(e),s.push(e)}return i=Rd(i),this.calculateLosses().forEach(e=>{i=Ho(i,e)}),i},o=this.collectedTrainableWeights.map(e=>e.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>$o(()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new EN(s),o=FN(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Rd(r(a[e],o[e]));t=0===e?s:Ho(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Rd(t(a[r],o[r]));n.push(s)}return n})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,s,i,o,l,u,h,p;this.isTraining=!0;try{let d=null==n.batchSize?32:n.batchSize;VC(d);let c=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,c,d);r=f[0],a=f[1],p=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new fI("validationData including sample weights is not supported yet."):new cI(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];let e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],h=t[1],m=u.concat(h)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=UC(r,e,t),s=r,r=UC(r,0,e),h=UC(a,e,t),i=a,a=UC(a,0,e),m=u.concat(h)}else null!=n.validationSteps&&(g=!0);let y=r.concat(a).concat(p);this.checkTrainableWeightsConsistency();let b,x,w=this.makeTrainFunction(),v=this.getDedupedMetricsNames();g?(this.makeTestFunction(),b=this.testFunction,x=v.slice().concat(v.map(e=>"val_"+e))):(b=null,m=[],x=v.slice());let k=TT(n.callbacks,n.yieldEvery);return await this.fitLoop(w,y,v,d,n.epochs,n.verbose,k,b,m,n.shuffle,x,n.initialEpoch,null,null)}finally{this.isTraining=!1,qC(r,e),qC(a,t),qC(s,e),qC(i,t),qC(u,o),qC(h,l),null!=p&&Ro(p)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,h,p,d,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==p&&(p=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==d))throw new cI("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,r,d,"steps_per_epoch");null!=g&&(m=pS(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=_T(i,s,a,p,g,d,r,f,h);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=p;x<a;++x){await y.onEpochBegin(x);let a={};if(null!=d)throw new fI("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new fI("batch shuffling is not implemneted yet");u&&Ia.shuffle(m);let s=ym(m),i=HC(g,r);for(let u=0;u<i.length;++u){let h={};if(await y.onBatchBegin(u,h),$o(()=>{let p=i[u][0],d=i[u][1],c=xS(s,p,d-p);h.batch=u,h.size=d-p;let m=GC(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],r=g[e];h[t]=r,Fo(r)}if(u===i.length-1&&f){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];Fo(s),a["val_"+r]=s}}}),await y.onBatchEnd(u,h),xT(h),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return LC(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let e=await o.data();i.push(e[0])}return Ro(s),qC(n[0],e),qC(n[1],t),wI(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Eo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Eo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=kI(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>kI(e))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=kI(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[kI(fC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>kI(fC(e)));{let e={};for(let t in this.metrics)e[t]=kI(fC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=NC(e.optimizer_config),a=ET(r);if("string"==typeof e.loss)t=II(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>II(e));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=II(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map(e=>II(e));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=II(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:a})}async save(e,t){if("string"==typeof e){let t=Eb.getSaveHandlers(e);if(0===t.length)throw new cI(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new cI(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new cI("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Eb.encodeWeights(this.getNamedWeights(t)),r=!1,a=null,s={modelTopology:this.toJSON(a,r),format:n_,generatedBy:"TensorFlow.js tfjs-layers v"+CC,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:r}=await Eb.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Eb.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(gC(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){gC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};r_.className="Model",mb.registerClass(r_);var a_=class extends r_{};async function s_(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=NC(n),a=ET(r,t);if(null!=e.weightsManifest){let t=await Eb.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(e=>e.originalName)),n={};for(let e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),Ro(t)}return a}async function i_(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Eb.getLoadHandlers(e,t);if(0===n.length)n.push(Eb.browserHTTPRequest(e,t));else if(n.length>1)throw new cI(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return o_(e,void 0,t)}async function o_(e,t,n){if(null==n&&(n={}),null==e.load)throw new cI("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=ET(NC(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new cI("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=l_(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Ro(e),Ro(t.map(e=>e.tensor))}return o}function l_(e,t){let n=Eb.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}a_.className="Functional",mb.registerClass(a_);var u_=class extends r_{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:WI("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new cI(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof u_||e instanceof r_;if(n){if(t=e,1!==t.outputs.length)throw new cI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new cI("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new cI("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=CN({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new cI(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new cI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=NN(this.outputs[0])}this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:yI(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(hN(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new r_({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new dI("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new dI("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new dI("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new dI("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new cI("Legacy serialization format not supported yet.");a=t}else Ia.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof u_))throw new fI("Sequential.fromConfig called on non-Sequential input: "+i);for(let o of a){let e=ET(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new cI("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new cI("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function h_(e){return new r_(e)}function p_(e){return new u_(e)}function d_(e){return CN(e)}function c_(e,t){CT.registerCallbackConstructor(e,t)}u_.className="Sequential",mb.registerClass(u_);var f_=class extends mb.Serializable{getConfig(){return{}}},m_=class extends f_{apply(e,t=1){return $S(e,t)}};m_.className="elu",mb.registerClass(m_);var g_=class extends f_{apply(e){return _f(e)}};g_.className="selu",mb.registerClass(g_);var y_=class extends f_{apply(e){return hf(e)}};y_.className="relu",mb.registerClass(y_);var b_=class extends f_{apply(e){return $o(()=>Ld(6,hf(e)))}};b_.className="relu6",mb.registerClass(b_);var x_=class extends f_{apply(e){return e}};x_.className="linear",mb.registerClass(x_);var w_=class extends f_{apply(e){return eu(e)}};w_.className="sigmoid",mb.registerClass(w_);var v_=class extends f_{apply(e){return DS(e)}};v_.className="hardSigmoid",mb.registerClass(v_);var k_=class extends f_{apply(e){return nd(e)}};k_.className="softplus",mb.registerClass(k_);var I_=class extends f_{apply(e){return RS(e)}};I_.className="softsign",mb.registerClass(I_);var S_=class extends f_{apply(e){return au(e)}};S_.className="tanh",mb.registerClass(S_);var N_=class extends f_{apply(e,t=-1){return Kf(e,t)}};N_.className="softmax",mb.registerClass(N_);var T_=class extends f_{apply(e,t=-1){return ld(e,t)}};T_.className="logSoftmax",mb.registerClass(T_);var C_=class extends f_{apply(e,t=1){return $o(()=>Zo(eu(Zo(e,t)),e))}};C_.className="swish",mb.registerClass(C_);var __=class extends f_{apply(e){return $o(()=>Zo(e,au(nd(e))))}};function E_(e){return e.getClassName()}function A_(e,t={}){return CI(e,mb.SerializationMap.getMap().classNameMap,t,"activation")}function $_(e){if(null==e){let e={className:"linear",config:{}};return A_(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},A_(t)}return e instanceof f_?e:A_(e)}function R_(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}__.className="mish",mb.registerClass(__);var F_=class extends mb.Serializable{},D_=class extends F_{constructor(e){super(),R_(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return $o(()=>{let t=Fd([1]);return this.hasL1&&(t=Ho(t,tp(Zo(this.l1,Qo(e))))),this.hasL2&&(t=Ho(t,tp(Zo(this.l2,_S(e))))),Gl(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};function M_(e){return R_(e),new D_({l1:null!=e?e.l1:null,l2:0})}function O_(e){return R_(e),new D_({l2:null!=e?e.l2:null,l1:0})}D_.className="L1L2",mb.registerClass(D_);var L_={l1l2:"L1L2"};function z_(e){return NI(e)}function P_(e,t={}){return CI(e,mb.SerializationMap.getMap().classNameMap,t,"regularizer")}function B_(e){if(null==e)return null;if("string"==typeof e){let t={className:e in L_?L_[e]:e,config:{}};return P_(t)}return e instanceof F_?e:P_(e)}var W_=class extends kN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=uN(e);let n=hf(e);return null!=this.maxValue&&(n=_u(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};W_.className="ReLU",mb.registerClass(W_);var V_=class extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=uN(e);return Dp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};V_.className="LeakyReLU",mb.registerClass(V_);var U_=class extends kN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=iN(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=B_(e.alphaRegularizer),this.alphaConstraint=XN(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new cI("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){e=hN(e);let t=e.slice(1);if(null!=this.sharedAxes)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new yN({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=uN(e),xc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:sN(this.alphaInitializer),alphaRegularizer:z_(this.alphaRegularizer),alphaConstraint:qN(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};U_.className="PReLU",mb.registerClass(U_);var G_=class extends kN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new fI(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=uN(e);return Rh(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};G_.className="ELU",mb.registerClass(G_);var H_=class extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=uN(e);return Zo(n,bo(kp(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};H_.className="ThresholdedReLU",mb.registerClass(H_);var j_=class extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new N_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=uN(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function q_(e,t,n){if("number"==typeof e)return yI(e,t);if(e.length!==t)throw new cI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!oS(a))throw new cI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function K_(e,t,n,r,a=1){if(null==e)return e;let s,i=t+(t-1)*(a-1);return s="same"===n?e:e-i+1,Math.floor((s+r-1)/r)}function X_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+hS([n-t,0]);else{if("same"!==r)throw new cI(`Unsupport padding mode: ${r}.`);e*=t}return e}function Y_(e,t){return $o(()=>(KI(t),"channelsFirst"===t?Wm(e,[0,2,3,1]):e))}function Z_(e,t){return $o(()=>(KI(t),"channelsFirst"===t?Wm(e,[0,2,3,4,1]):e))}function J_(e,t,n,r=1,a="valid",s,i=1){return $o(()=>{if(null==s&&(s=cS()),KI(s),3!==e.shape.length)throw new cI(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new cI(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new cI(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Wm(e,[0,2,1])),"causal"===a)throw new fI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Bu(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=AS(o,n)),o})}function Q_(e,t,n,r=[1,1],a="valid",s,i,o=null){return $o(()=>{if(null==s&&(s=cS()),KI(s),3!==e.rank&&4!==e.rank)throw new cI(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new cI(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Y_(e,s);if("causal"===a)throw new fI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=lg.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Wm(l,[0,3,1,2])),l})}function eE(e,t,n,r=[1,1,1],a="valid",s,i){return $o(()=>{if(null==s&&(s=cS()),KI(s),4!==e.rank&&5!==e.rank)throw new cI(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new cI(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Z_(e,s);if("causal"===a)throw new fI("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ju(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=AS(o,n)),"channelsFirst"===s&&(o=Wm(o,[0,4,1,2,3])),o})}j_.className="Softmax",mb.registerClass(j_);var tE=class extends kN{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tE.verifyArgs(t),this.rank=e,DI(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new fI(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=q_(t.kernelSize,e,"kernelSize"),this.strides=q_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,YI(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,KI(this.dataFormat),this.activation=$_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=iN(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=XN(t.biasConstraint),this.biasRegularizer=B_(t.biasRegularizer),this.activityRegularizer=B_(t.activityRegularizer),this.dilationRate=q_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new cI("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new cI("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new cI("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(bI("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!FI(e.kernelSize,"number",1,3))throw new cI(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:E_(this.activation),useBias:this.useBias,biasInitializer:sN(this.biasInitializer),biasRegularizer:z_(this.biasRegularizer),activityRegularizer:z_(this.activityRegularizer),biasConstraint:qN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},nE=class extends tE{constructor(e,t){super(e,t),this.kernel=null,nE.verifyArgs(t),this.filters=t.filters,DI(this.filters,"filters"),this.kernelInitializer=iN(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=XN(t.kernelConstraint),this.kernelRegularizer=B_(t.kernelRegularizer)}build(e){e=hN(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cI("The channel dimension of the input should be defined. Found "+e[t]);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return $o(()=>{e=uN(e);let t,n=null==this.bias?null:this.bias.read(),r=LI(this.activation.getClassName());if(null!=r&&2===this.rank)t=Q_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=J_(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Q_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new fI("convolutions greater than 3D are not implemented yet.");t=eE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=hN(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let e=K_(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:sN(this.kernelInitializer),kernelRegularizer:z_(this.kernelRegularizer),kernelConstraint:qN(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new cI("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}},rE=class extends nE{constructor(e){super(2,e),rE.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!FI(e.kernelSize,"number",1,2))throw new cI(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};rE.className="Conv2D",mb.registerClass(rE);var aE=class extends nE{constructor(e){super(3,e),aE.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new cI(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};aE.className="Conv3D",mb.registerClass(aE);var sE=class extends rE{constructor(e){if(super(e),this.inputSpec=[new yN({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new cI("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(e=hN(e),4!==e.length)throw new cI("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new yN({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return $o(()=>{let t=uN(e);if(4!==t.shape.length)throw new cI("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=X_(i,h,l,this.padding),c=X_(o,p,u,this.padding),f=[s,d,c,this.filters];"channelsLast"!==this.dataFormat&&(t=Wm(t,[0,2,3,1]));let m=Gu(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=Wm(m,[0,3,1,2])),null!=this.bias&&(m=AS(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){e=hN(e);let t,n,r,a=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=X_(a[n],o,s,this.padding),a[r]=X_(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};sE.className="Conv2DTranspose",mb.registerClass(sE);var iE=class extends aE{constructor(e){if(super(e),this.inputSpec=[new yN({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new cI("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(e=hN(e),5!==e.length)throw new cI("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new yN({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return $o(()=>{let t=uN(e);if(5!==t.shape.length)throw new cI("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=X_(o,c,h,this.padding),y=X_(l,f,p,this.padding),b=X_(u,m,d,this.padding),x=[i,g,y,b,this.filters];"channelsLast"!==this.dataFormat&&(t=Wm(t,[0,2,3,4,1]));let w=Yu(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(w=Wm(w,[0,4,1,2,3])),null!==this.bias&&(w=AS(w,this.bias.read(),this.dataFormat)),null!==this.activation&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=hN(e);let t,n,r,a,s=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=X_(s[n],u,i,this.padding),s[r]=X_(s[r],h,o,this.padding),s[a]=X_(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};iE.className="Conv3DTranspose",mb.registerClass(iE);var oE=class extends nE{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new cI("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new cI("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new cI(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=iN(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=B_(t.depthwiseRegularizer),this.depthwiseConstraint=XN(t.depthwiseConstraint),this.pointwiseInitializer=iN(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=B_(t.pointwiseRegularizer),this.pointwiseConstraint=XN(t.pointwiseConstraint)}build(e){if(e=hN(e),e.length<this.rank+2)throw new cI(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new cI("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new yN({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return $o(()=>{let t;if(e=uN(e),1===this.rank)throw new fI("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Wm(e,[0,2,3,1])),t=Af(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=AS(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Wm(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=sN(this.depthwiseInitializer),e.pointwiseInitializer=sN(this.pointwiseInitializer),e.depthwiseRegularizer=z_(this.depthwiseRegularizer),e.pointwiseRegularizer=z_(this.pointwiseRegularizer),e.depthwiseConstraint=qN(this.depthwiseConstraint),e.pointwiseConstraint=qN(this.pointwiseConstraint),e}};oE.className="SeparableConv";var lE=class extends oE{constructor(e){super(2,e)}};lE.className="SeparableConv2D",mb.registerClass(lE);var uE=class extends nE{constructor(e){super(1,e),uE.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!FI(e.kernelSize,"number",1,1))throw new cI(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};uE.className="Conv1D",mb.registerClass(uE);var hE=class extends kN{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return $o(()=>{if(e=uN(e),"channelsLast"===this.dataFormat){let t=vS(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vS(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=vS(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vS(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};hE.className="Cropping2D",mb.registerClass(hE);var pE=class extends kN{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,KI(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,XI(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return $o(()=>{let t=uN(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Wm(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?hb.resizeNearestNeighbor(t,[e,r]):hb.resizeBilinear(t,[e,r]);return Wm(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?hb.resizeNearestNeighbor(t,[e,r]):hb.resizeBilinear(t,[e,r])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};function dE(e,t,n=[1,1],r="valid",a,s){return $o(()=>{null==a&&(a=cS()),KI(a);let i=Y_(e,a);if(4!==e.rank)throw new cI(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new cI(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=hh(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Wm(i,[0,3,1,2])),i})}pE.className="UpSampling2D",mb.registerClass(pE);var cE=class extends tE{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=iN(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=XN(e.depthwiseConstraint),this.depthwiseRegularizer=B_(e.depthwiseRegularizer)}build(e){if(e=hN(e),e.length<4)throw new cI(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new cI(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return $o(()=>{e=uN(e);let t=dE(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=AS(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=hN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=K_(t,this.kernelSize[0],this.padding,this.strides[0]),s=K_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=sN(this.depthwiseInitializer),e.depthwiseRegularizer=z_(this.depthwiseRegularizer),e.depthwiseConstraint=qN(this.depthwiseRegularizer),e}};function fE(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new cI("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function mE(e,t,n,r=!1,a,s,i=!1,o=!1){return $o(()=>{let l=t.shape.length;if(l<3)throw new cI(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(pS(2,l));if(t=Wm(t,u),null!=s)throw new fI("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=bo(bo(a,"bool"),"float32"),a.rank===l-1&&(a=hp(a,-1)),a=Wm(a,u)),r&&(t=ff(t,0),null!=a&&(a=ff(a,0)));let h,p,d,c=[],f=n,m=t.shape[0],g=Rm(t);null!=a&&(p=Rm(a));for(let t=0;t<m;++t){let n=g[t],r=$o(()=>e(n,f));if(null==a)h=r[0],f=r[1];else{let e=$o(()=>{let e=p[t],n=id(Qd(e),e),a=Ho(Zo(r[0],e),Zo(f[0],n)),s=f.map((t,a)=>Ho(Zo(r[1][a],e),Zo(t,n)));return{output:a,newStates:s}});h=e.output,f=e.newStates}o&&c.push(h)}return o&&(d=hm(c,1)),[h,d,f]})}cE.className="DepthwiseConv2D",mb.registerClass(cE);var gE=class extends kN{constructor(e){let t;if(super(e),null==e.cell)throw new cI("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new SE({cells:e.cell}):e.cell,null==t.stateSize)throw new cI("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new yN({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return pS(0,e).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){oN(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return $o(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new fI("Constants support is not implemented in RNN yet.");oN(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new yN({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Ia.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),r))throw new cI(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(e=>new yN({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){$o(()=>{if(!this.stateful)throw new pI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new cI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Fd([n,e])):this.states_=[Fd([n,this.cell.stateSize])];else if(null==e)Ro(this.states_),null!=this.keptStates&&(Ro(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Fd([n,e])):this.states_[0]=Fd([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ro(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Ia.arraysEqual(r.shape,s))throw new cI(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>Fo(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=fE(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new yN({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof bN){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return $o(()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=uN(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new cI(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=mE((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p})}getInitialState(e){return $o(()=>{let t=Fd(e.shape);return t=tp(t,[1,2]),t=mS(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?SS(t,[1,e]):t):this.cell.stateSize>1?[SS(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===gE.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=t.cell,a=ET(r,n);return new e(Object.assign(t,{cell:a}))}};gE.className="RNN",mb.registerClass(gE);var yE=class extends kN{},bE=class extends yE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,DI(this.units,"units"),this.activation=$_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=iN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=iN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=iN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=B_(e.kernelRegularizer),this.recurrentRegularizer=B_(e.recurrentRegularizer),this.biasRegularizer=B_(e.biasRegularizer),this.kernelConstraint=XN(e.kernelConstraint),this.recurrentConstraint=XN(e.recurrentConstraint),this.biasConstraint=XN(e.biasConstraint),this.dropout=uS([1,hS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uS([1,hS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=hN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return $o(()=>{if(e=e,2!==e.length)throw new cI(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=NE({ones:()=>Qd(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=NE({ones:()=>Qd(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=TS(null!=s?Zo(e,s):e,this.kernel.read()),null!=this.bias&&(a=AS(a,this.bias.read())),null!=i&&(n=Zo(n,i));let o=Ho(a,TS(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:E_(this.activation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:z_(this.kernelRegularizer),recurrentRegularizer:z_(this.recurrentRegularizer),biasRegularizer:z_(this.biasRegularizer),activityRegularizer:z_(this.activityRegularizer),kernelConstraint:qN(this.kernelConstraint),recurrentConstraint:qN(this.recurrentConstraint),biasConstraint:qN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};bE.className="SimpleRNNCell",mb.registerClass(bE);var xE=class extends gE{constructor(e){e.cell=new bE(e),super(e)}call(e,t){return $o(()=>{null!=this.cell.dropoutMask&&(Ro(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ro(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};xE.className="SimpleRNN",mb.registerClass(xE);var wE=class extends yE{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new cI("GRUCell does not support reset_after parameter set to true.");this.units=e.units,DI(this.units,"units"),this.activation=$_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=iN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=iN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=iN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=B_(e.kernelRegularizer),this.recurrentRegularizer=B_(e.recurrentRegularizer),this.biasRegularizer=B_(e.biasRegularizer),this.kernelConstraint=XN(e.kernelConstraint),this.recurrentConstraint=XN(e.recurrentConstraint),this.biasConstraint=XN(e.biasConstraint),this.dropout=uS([1,hS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uS([1,hS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=hN(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return $o(()=>{if(e=e,2!==e.length)throw new cI(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=NE({ones:()=>Qd(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=NE({ones:()=>Qd(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Zo(e,o[0]));let u=TS(e,this.kernel.read());this.useBias&&(u=AS(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Zo(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=nm(h,[2*this.units,this.units],h.rank-1),c=TS(r,p),[f,m,g]=nm(u,3,u.rank-1),[y,b]=nm(c,2,c.rank-1);a=this.recurrentActivation.apply(Ho(f,y)),s=this.recurrentActivation.apply(Ho(m,b));let x=TS(Zo(s,r),d);i=this.activation.apply(Ho(g,x));let w=Ho(Zo(a,r),Zo(Ho(1,ed(a)),i));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:E_(this.activation),recurrentActivation:E_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:z_(this.kernelRegularizer),recurrentRegularizer:z_(this.recurrentRegularizer),biasRegularizer:z_(this.biasRegularizer),activityRegularizer:z_(this.activityRegularizer),kernelConstraint:qN(this.kernelConstraint),recurrentConstraint:qN(this.recurrentConstraint),biasConstraint:qN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};wE.className="GRUCell",mb.registerClass(wE);var vE=class extends gE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wE(e),super(e)}call(e,t){return $o(()=>{null!=this.cell.dropoutMask&&(Ro(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ro(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};vE.className="GRU",mb.registerClass(vE);var kE=class extends yE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,DI(this.units,"units"),this.activation=$_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=iN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=iN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=iN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=B_(e.kernelRegularizer),this.recurrentRegularizer=B_(e.recurrentRegularizer),this.biasRegularizer=B_(e.biasRegularizer),this.kernelConstraint=XN(e.kernelConstraint),this.recurrentConstraint=XN(e.recurrentConstraint),this.biasConstraint=XN(e.biasConstraint),this.dropout=uS([1,hS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uS([1,hS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=hN(e);let n,r=e[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new(t=class extends BS{apply(t,n){let a=e.apply([r]),s=(new VS).apply([r]),i=e.apply([2*r]);return IS(IS(a,s),i)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return $o(()=>{let n=null!=t.training&&t.training;if(e=e,3!==e.length)throw new cI(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=NE({ones:()=>Qd(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=NE({ones:()=>Qd(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Zo(e,u[0]));let p=TS(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Zo(r,h[0])),p=Ho(p,TS(r,this.recurrentKernel.read())),this.useBias&&(p=AS(p,this.bias.read()));let[d,c,f,m]=nm(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=Ho(Zo(i,a),Zo(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=Zo(l,this.activation.apply(o));return[g,g,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:E_(this.activation),recurrentActivation:E_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:z_(this.kernelRegularizer),recurrentRegularizer:z_(this.recurrentRegularizer),biasRegularizer:z_(this.biasRegularizer),activityRegularizer:z_(this.activityRegularizer),kernelConstraint:qN(this.kernelConstraint),recurrentConstraint:qN(this.recurrentConstraint),biasConstraint:qN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};kE.className="LSTMCell",mb.registerClass(kE);var IE=class extends gE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new kE(e),super(e)}call(e,t){return $o(()=>{null!=this.cell.dropoutMask&&(Ro(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ro(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};IE.className="LSTM",mb.registerClass(IE);var SE=class extends yE{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return $o(()=>{e=e;let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;oN(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{eS("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(ET(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return mN(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}gN(t)}};function NE(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):FS(t(),n),o=()=>MS(i,t,r);return!a||a<=1?Fo(o().clone()):Array(a).fill(void 0).map(o).map(e=>Fo(e.clone()))}SE.className="StackedRNNCells",mb.registerClass(SE);var TE=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},CE=class extends gE{constructor(e){if(e.unroll)throw new fI("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new fI("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new yN({ndim:5})]}call(e,t){return $o(()=>{if(null!=this.cell.dropoutMask&&(Ro(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ro(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new cI("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return $o(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=Fd(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){$o(()=>{if(!this.stateful)throw new pI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new cI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fd(a)):this.states_=[Fd(a)];else if(null==e)Ro(this.states_),null!=this.keptStates&&(Ro(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fd(a)):this.states_[0]=Fd(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ro(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!Ia.arraysEqual(n.shape,r))throw new cI(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Fo(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=K_(l,r[0],a,s[0],i[0]),p=K_(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};CE.className="ConvRNN2D";var _E=class extends kE{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,DI(this.filters,"filters"),this.kernelSize=q_(n,2,"kernelSize"),this.kernelSize.forEach(e=>DI(e,"kernelSize")),this.strides=q_(r||1,2,"strides"),this.strides.forEach(e=>DI(e,"strides")),this.padding=a||"valid",YI(this.padding),this.dataFormat=s||"channelsLast",KI(this.dataFormat),this.dilationRate=q_(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>DI(e,"dilationRate"))}build(e){var t;e=hN(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new cI("The channel dimension of the input should be defined. Found "+e[n]);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new(t=class extends BS{apply(e,t){let a=n.apply([r]),s=Dd([r]),i=n.apply([2*r]);return kS([a,s,i])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return $o(()=>{if(3!==e.length)throw new cI(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=NE({ones:()=>Qd(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?Zo(t[n],e):e,u=l(r,o,0),h=l(r,o,1),p=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=NE({ones:()=>Qd(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,w,v,k]=nm(this.kernel.read(),i,b),[I,S,N,T]=this.useBias?nm(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,w,S,this.padding),p=this.inputConv(p,v,N,this.padding),d=this.inputConv(d,k,T,this.padding);let[C,_,E,A]=nm(this.recurrentKernel.read(),i,b);f=this.recurrentConv(f,C),m=this.recurrentConv(m,_),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);let $=this.recurrentActivation.apply(Ho(u,f)),R=this.recurrentActivation.apply(Ho(h,m)),F=Ho(Zo(R,s),Zo($,this.activation.apply(Ho(p,g)))),D=Zo(this.recurrentActivation.apply(Ho(d,y)),this.activation.apply(F));return[D,D,F]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=TE(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=zu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?AS(a,n,this.dataFormat):a}recurrentConv(e,t){return zu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};_E.className="ConvLSTM2DCell",mb.registerClass(_E);var EE=class extends CE{constructor(e){let t=new _E(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};EE.className="ConvLSTM2D",mb.registerClass(EE);var AE=class extends kN{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return MS(()=>FS(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};AE.className="Dropout",mb.registerClass(AE);var $E=class extends AE{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};$E.className="SpatialDropout1D",mb.registerClass($E);var RE=class extends kN{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,DI(this.units,"units"),this.activation=$_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=iN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=iN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=XN(e.kernelConstraint),this.biasConstraint=XN(e.biasConstraint),this.kernelRegularizer=B_(e.kernelRegularizer),this.biasRegularizer=B_(e.biasRegularizer),this.activityRegularizer=B_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=hN(e);let t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=hN(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n,r=uN(e),a=LI(this.activation.getClassName());return null!=a?n=TS(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=TS(r,this.kernel.read()),null!=this.bias&&(n=AS(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:E_(this.activation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:z_(this.kernelRegularizer),biasRegularizer:z_(this.biasRegularizer),activityRegularizer:z_(this.activityRegularizer),kernelConstraint:qN(this.kernelConstraint),biasConstraint:qN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};RE.className="Dense",mb.registerClass(RE);var FE=class extends kN{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=hN(e);for(let t of e.slice(1))if(null==t)throw new cI(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],lS(e,1)]}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Wm(n,e)}return bS(n)})}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};FE.className="Flatten",mb.registerClass(FE);var DE=class extends kN{constructor(e){super(e),this.supportsMasking=!0,this.activation=$_(e.activation)}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);return this.activation.apply(n)})}getConfig(){let e={activation:E_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};DE.className="Activation",mb.registerClass(DE);var ME=class extends kN{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return $o(()=>(e=uN(e),gS(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};ME.className="RepeatVector",mb.registerClass(ME);var OE=class extends kN{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let e=r[o];if(this.isUnknown(e)){if(null!==s)throw new cI("Can only specifiy one unknown dimension.");s=o}else a*=e}let i=lS(e);if(null!==s){if(0===a||i%a!==0)throw new cI(n);r[s]=i/a}else if(i!==a)throw new cI(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Gl(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};OE.className="Reshape",mb.registerClass(OE);var LE=class extends kN{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=pS(1,e.dims.length+1);if(!Ia.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new yN({ndim:this.dims.length+1})]}computeOutputShape(e){e=hN(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Wm(uN(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};LE.className="Permute",mb.registerClass(LE);var zE=class extends kN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=uN(e),r=-1;return ul(Xd(n,this.maskValue),r)}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e),r=-1,a=!0,s=ul(Xd(n,this.maskValue),r,a);return Zo(n,bo(s,n.dtype))})}};zE.className="Masking",mb.registerClass(zE);var PE=class extends kN{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(vI(e.inputLength))}this.inputDim=e.inputDim,DI(this.inputDim,"inputDim"),this.outputDim=e.outputDim,DI(this.outputDim,"outputDim"),this.embeddingsInitializer=iN(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=B_(e.embeddingsRegularizer),this.activityRegularizer=B_(e.activityRegularizer),this.embeddingsConstraint=XN(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return $o(()=>this.maskZero?(e=uN(e),Xd(e,Sh(e))):null)}computeOutputShape(e){if(e=hN(e),null==this.inputLength)return[...e,this.outputDim];let t=vI(this.inputLength);if(t.length!==e.length-1)throw new cI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new cI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);"int32"!==n.dtype&&(n=fS(n,"int32"));let r=CS(this.embeddings.read(),Gl(n,[n.size]));return Gl(r,hN(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:sN(this.embeddingsInitializer),embeddingsRegularizer:z_(this.embeddingsRegularizer),activityRegularizer:z_(this.activityRegularizer),embeddingsConstraint:qN(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};PE.className="Embedding",mb.registerClass(PE);var BE=class extends kN{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new fI}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new cI("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[hN(e)]),e=e,e.length<2)throw new cI(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=AI(t),t.length>1)throw new cI(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}let r=e.map(e=>e.length);-1===e.indexOf(null)&&1===AI(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return $o(()=>{if(e=e,this.reshapeRequired){let t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){let r=hS(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=mS(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let s of e){let e=s.rank;if(null==e){let e=s.shape,r=e[0],a=e.slice(1).concat([r]),i=Gl(s,[r].concat(lS(e.slice(1))));i=Wm(i,[1,0]),i=Gl(i,a),t.push(i),n=!0}else if(e>1){let r=pS(1,e).concat([0]);t.push(Wm(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=Gl(Wm(Gl(r,[-1,n]),[1,0]),a)}else if(a>1){let e=[a-1].concat(pS(0,a-1));r=Wm(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;e=e,t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(let r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=AI(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return $o(()=>{if(null==t)return null;if(!Array.isArray(t))throw new cI("`mask` should be an Array");if(!Array.isArray(e))throw new cI("`inputs` should be an Array");if(t.length!==e.length)throw new cI(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;t=t.map(e=>null==e?e:hp(e,0));let n=t[0];for(let e=1;e<t.length-1;++e)n=dd(n,t[e]);return n})}},WE=class extends BE{constructor(e){super(e)}mergeFunction(e){return $o(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ho(t,e[n]);return t})}};WE.className="Add",mb.registerClass(WE);var VE=class extends BE{constructor(e){super(e)}mergeFunction(e){return $o(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Zo(t,e[n]);return t})}};VE.className="Multiply",mb.registerClass(VE);var UE=class extends BE{constructor(e){super(e)}mergeFunction(e){return $o(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ho(t,e[n]);return Zo(1/e.length,t)})}};UE.className="Average",mb.registerClass(UE);var GE=class extends BE{constructor(e){super(e)}mergeFunction(e){return $o(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ad(t,e[n]);return t})}};GE.className="Maximum",mb.registerClass(GE);var HE=class extends BE{constructor(e){super(e)}mergeFunction(e){return $o(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ld(t,e[n]);return t})}};HE.className="Minimum",mb.registerClass(HE);var jE=class extends BE{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new cI("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let t=e[r].slice();t.splice(this.axis,1);let a=!1;for(let e of n)if(Ia.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new cI("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return $o(()=>kS(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new cI("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new cI("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new cI("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new cI(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return $o(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;let r=[];for(let s=0;s<e.length;++s)null==t[s]?r.push(bo(Qd(e[s]),"bool")):t[s].rank<e[s].rank?r.push(hp(t[s],-1)):r.push(t[s]);let a=Yl(r,this.axis);return ol(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function qE(e,t){for(;e<0;)e+=t;return e}function KE(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new fI("batchDot is not implemented for tensors of 4D or higher rank yet");if(Ia.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),Ia.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new fI("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return $o(()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Gl(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Gl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?tp(Zo(e,t),s[0]):tp(Zo(Wm(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Jl(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=lm(i,t)}return 1===i.shape.length&&(i=hp(i,1)),i})}jE.className="Concatenate",mb.registerClass(jE);var XE=class extends BE{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Ia.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new fI("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new cI(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new cI(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>qE(t,e[n].shape.length)):[qE(this.axes,n.shape.length),qE(this.axes,r.shape.length)],this.normalize&&(n=AT(n,t[0]),r=AT(r,t[1])),KE(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[qE(this.axes,e.length),qE(this.axes,t.length)],n}computeOutputShape(e){Ia.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new fI("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};XE.className="Dot",mb.registerClass(XE);var YE=class extends kN{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);return MS(()=>Ho(NS(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};YE.className="GaussianNoise",mb.registerClass(YE);var ZE=class extends kN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return $o(()=>{this.invokeCallHook(e,t);let n=uN(e);return this.rate>0&&this.rate<1?MS(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return Zo(n,NS(n.shape,1,e))},()=>n,t.training||!1):n})}};ZE.className="GaussianDropout",mb.registerClass(ZE);var JE=class extends kN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||uN(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return $o(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return MS(()=>{let t=uN(e),r=1.6732632423543772,a=1.0507009873554805,s=-r*a,i=Sp(nf(n),this.rate);i=fS(i,"float32");let o=((1-this.rate)*(1+this.rate*s**2))**-.5,l=-o*s*this.rate,u=Ho(Zo(t,i),Zo(Ho(i,-1),s));return Ho(Zo(u,o),l)},()=>uN(e),t.training||!1)}return e})}};function QE(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=cu(e,t,n,r,a,s);else if(3===e.rank)i=mu(e,t,n,r,a,s);else{if(4!==e.rank)throw new fI(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=yu(e,t,n,r,a,s)}return i}function eA(e,t,n,r,a=.001){return $o(()=>{let s=Ud(e,r),i=s.mean,o=s.variance;return[QE(e,i,o,n,t,a),i,o]})}function tA(e,t,n,r,a=.001){return $o(()=>{let s=Ud(e,r),i=s.mean,o=s.variance,l=[];for(let t of pS(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Gl(i,l),h=Gl(o,l),p=null==t?null:Gl(t,l),d=null==n?null:Gl(n,l);return[QE(e,u,h,d,p,a),i,o]})}function nA(e,t,n,r,a=.001){return Ia.arraysEqual(r.slice().sort(),pS(0,e.rank-1))?eA(e,t,n,r,a):tA(e,t,n,r,a)}JE.className="AlphaDropout",mb.registerClass(JE);var rA=class extends kN{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=iN(e.betaInitializer||"zeros"),this.gammaInitializer=iN(e.gammaInitializer||"ones"),this.movingMeanInitializer=iN(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=iN(e.movingVarianceInitializer||"ones"),this.betaConstraint=XN(e.betaConstraint),this.gammaConstraint=XN(e.gammaConstraint),this.betaRegularizer=B_(e.betaRegularizer),this.gammaRegularizer=B_(e.gammaRegularizer)}build(e){e=hN(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new cI(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new yN({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return $o(()=>{let n=null!=t.training&&t.training,r=uN(e),a=r.shape,s=a.length,i=pS(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=yI(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!Ia.arraysEqual(u,pS(0,s).slice(0,s-1)),p=()=>{if(h){let e=Gl(this.movingMean.read(),l),t=Gl(this.movingVariance.read(),l),n=this.center?Gl(this.beta.read(),l):null,a=this.scale?Gl(this.gamma.read(),l):null;return QE(r,e,t,n,a,this.epsilon)}return QE(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,c,f]=nA(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{$o(()=>{let r=1-n,a=e.read(),s=Zo(id(a,t),r);e.write(id(a,s))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sN(this.betaInitializer),gammaInitializer:sN(this.gammaInitializer),movingMeanInitializer:sN(this.movingMeanInitializer),movingVarianceInitializer:sN(this.movingVarianceInitializer),betaRegularizer:z_(this.betaRegularizer),gammaRegularizer:z_(this.gammaRegularizer),betaConstraint:qN(this.betaConstraint),gammaConstraint:qN(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};rA.className="BatchNormalization",mb.registerClass(rA);var aA=class extends kN{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(let e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=iN(e.betaInitializer||"zeros"),this.gammaInitializer=iN(e.gammaInitializer||"ones"),this.betaRegularizer=B_(e.betaRegularizer),this.gammaRegularizer=B_(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=hN(e);let t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: "+a);if(this.axis.length!==AI(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);let n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=uN(e),r=n.shape,a=r.length;return $o(()=>{let{mean:e,variance:t}=Ud(n,this.axis,!0),s=yI(1,a);for(let n of this.axis)s[n]=r[n];let i=e=>null!=e&&e.shape.length!==a?Gl(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],h=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),h.push(1)):(u.push(1),h.push(r[n]));return e=fp(e,u),t=fp(t,u),null!=o&&(o=fp(o,h)),null!=l&&(l=fp(l,h)),QE(n,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sN(this.betaInitializer),gammaInitializer:sN(this.gammaInitializer),betaRegularizer:z_(this.betaRegularizer),gammaRegularizer:z_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};function sA(e,t,n){return $o(()=>{if(4!==e.rank)throw new cI(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new cI("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=cS()),"channelsLast"!==n&&"channelsFirst"!==n)throw new cI(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],rc(e,r)})}aA.className="LayerNormalization",mb.registerClass(aA);var iA=class extends kN{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?cS():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new cI(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new cI(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new cI(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){let t,n;return e=hN(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return $o(()=>sA(uN(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function oA(e,t,n,r,a,s){return $o(()=>{KI(a),ZI(s),YI(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=cS()),null==s&&(s="max"),e=Y_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Sd(e,t,n,o):jl(e,t,n,o),"channelsFirst"===a&&(i=Wm(i,[0,3,1,2])),i})}function lA(e,t,n,r,a,s){return $o(()=>{KI(a),ZI(s),YI(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=cS()),null==s&&(s="max"),e=Z_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Td(e,t,n,o):Kl(e,t,n,o),"channelsFirst"===a&&(i=Wm(i,[0,4,1,2,3])),i})}iA.className="ZeroPadding2D",mb.registerClass(iA);var uA=class extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new cI("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(DI(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new cI("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}DI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,YI(this.padding),this.inputSpec=[new yN({ndim:3})]}computeOutputShape(e){e=hN(e);let t=K_(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return $o(()=>{this.invokeCallHook(e,t),e=mS(uN(e),2);let n=this.poolingFunction(uN(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return lm(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},hA=class extends uA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),oA(e,t,n,r,a,"max")}};hA.className="MaxPooling1D",mb.registerClass(hA);var pA=class extends uA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),oA(e,t,n,r,a,"avg")}};pA.className="AveragePooling1D",mb.registerClass(pA);var dA=class extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new cI(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];DI(this.poolSize,"poolSize"),DI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,KI(this.dataFormat),YI(this.padding),this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){e=hN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=K_(t,this.poolSize[0],this.padding,this.strides[0]),n=K_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return $o(()=>(this.invokeCallHook(e,t),this.poolingFunction(uN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},cA=class extends dA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),oA(e,t,n,r,a,"max")}};cA.className="MaxPooling2D",mb.registerClass(cA);var fA=class extends dA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),oA(e,t,n,r,a,"avg")}};fA.className="AveragePooling2D",mb.registerClass(fA);var mA=class extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new cI(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];DI(this.poolSize,"poolSize"),DI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,KI(this.dataFormat),YI(this.padding),this.inputSpec=[new yN({ndim:5})]}computeOutputShape(e){e=hN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=K_(t,this.poolSize[0],this.padding,this.strides[0]),n=K_(n,this.poolSize[1],this.padding,this.strides[1]),r=K_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return $o(()=>(this.invokeCallHook(e,t),this.poolingFunction(uN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},gA=class extends mA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),lA(e,t,n,r,a,"max")}};gA.className="MaxPooling3D",mb.registerClass(gA);var yA=class extends mA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return KI(a),YI(r),lA(e,t,n,r,a,"avg")}};yA.className="AveragePooling3D",mb.registerClass(yA);var bA=class extends kN{constructor(e){super(e),this.inputSpec=[new yN({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new fI}},xA=class extends bA{constructor(e){super(e||{})}call(e,t){return $o(()=>{let t=uN(e);return Rd(t,1)})}};xA.className="GlobalAveragePooling1D",mb.registerClass(xA);var wA=class extends bA{constructor(e){super(e||{})}call(e,t){return $o(()=>{let t=uN(e);return Gh(t,1)})}};wA.className="GlobalMaxPooling1D",mb.registerClass(wA);var vA=class extends kN{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,KI(this.dataFormat),this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new fI}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kA=class extends vA{call(e,t){return $o(()=>{let t=uN(e);return"channelsLast"===this.dataFormat?Rd(t,[1,2]):Rd(t,[2,3])})}};kA.className="GlobalAveragePooling2D",mb.registerClass(kA);var IA=class extends vA{call(e,t){return $o(()=>{let t=uN(e);return"channelsLast"===this.dataFormat?Gh(t,[1,2]):Gh(t,[2,3])})}};IA.className="GlobalMaxPooling2D",mb.registerClass(IA);var SA=class extends kN{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=ET(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},NA=class extends SA{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=hN(e),e.length<3)throw new cI("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=hN(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return $o(()=>(e=uN(e),mE((e,n)=>[uN(this.layer.call(e,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};function TA(e){RI(jI,"BidirectionalMergeMode",e)}NA.className="TimeDistributed",mb.registerClass(NA);var CA="concat",_A=class extends SA{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ET(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ET(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?CA:e.mergeMode,TA(this.mergeMode),e.weights)throw new fI("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState&&(r=a.slice(1)),t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):wI(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=fE(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new cI("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map(e=>new yN({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new fI("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof bN;for(let l of s)if(l instanceof bN!==o)throw new cI("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return $o(()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=ff(r,1)),"concat"===this.mergeMode?s=kS([n,r]):"sum"===this.mergeMode?s=Ho(n,r):"ave"===this.mergeMode?s=Zo(.5,Ho(n,r)):"mul"===this.mergeMode?s=Zo(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){eS(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),eS(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=ET(t.layer);if(delete t.layer,null!=t.numConstants)throw new fI("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};_A.className="Bidirectional",mb.registerClass(_A);var EA=class extends kN{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return $o(()=>(e=uN(e),"float32"!==e.dtype&&(e=fS(e,"float32")),Ho(Zo(e,this.scale),this.offset)))}};EA.className="Rescaling",mb.registerClass(EA);var{resizeBilinear:AA,cropAndResize:$A}=hb,RA=class extends kN{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return $o(()=>{let l,u=!1,h=t/s,p=n/i,d=(r+t)/s,c=(a+n)/i,f=[h,p,d,c],m=[];3===e.rank?(u=!0,l=hm([e])):l=e;for(let e=0;e<l.shape[0];e++)m.push(f);let g=si(m,[m.length,4]),y=rf(0,m.length,1,"int32"),b=$A(l,g,y,[r,a],"nearest");return fS(u?uN(Rm(b)):b,o)})}upsize(e,t,n,r){return $o(()=>{let a=AA(e,[t,n]);return fS(a,r)})}call(e,t){return $o(()=>{let t=uN(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=hN(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};function FA(e,t,n,r){let a=uN(e);if("int32"!==a.dtype&&(a=fS(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=hp(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=hp(a,-1)),a.rank>2)throw new cI(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i,o=["multiHot","oneHot"].includes(t),l=a;if(i=ih(l,"undefined"!=typeof r&&"count"===t?r:[],n,o),"tfIdf"!==t)return i;if(r)return Zo(i,r);throw new cI("When outputMode is 'tfIdf', weights must be provided.")}RA.className="CenterCrop",mb.registerClass(RA);var DA=class extends kN{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=hN(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return $o(()=>{let n;if(e=uN(e),"int32"!==e.dtype&&(e=fS(e,"int32")),"undefined"!=typeof t.countWeights){if("count"!==this.outputMode)throw new cI("countWeights is not used when outputMode !== count.\n              Received countWeights="+t.countWeights);n=uN(t.countWeights)}let r=Gh(e),a=jh(e),s=kp(this.numTokens,r).bufferSync().get(0),i=Sp(a,0).bufferSync().get(0);if(!s||!i)throw new cI("Input values must be between 0 < values <= numTokens with numTokens="+this.numTokens);return FA(e,this.outputMode,this.numTokens,n)})}};DA.className="CategoryEncoding",mb.registerClass(DA);var MA=["bilinear","nearest"],OA=new Set(MA),LA=class extends kN{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!OA.has(e.interpolation))throw new cI(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=hN(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return $o(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return hb.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return hb.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...OA]} are supported`)})}};function zA(e){return new TN(e)}function PA(e){return new G_(e)}function BA(e){return new W_(e)}function WA(e){return new V_(e)}function VA(e){return new U_(e)}function UA(e){return new j_(e)}function GA(e){return new H_(e)}function HA(e){return new uE(e)}function jA(e){return new rE(e)}function qA(e){return new sE(e)}function KA(e){return new aE(e)}function XA(e){return new iE(e)}function YA(e){return new lE(e)}function ZA(e){return new hE(e)}function JA(e){return new pE(e)}function QA(e){return new cE(e)}function e$(e){return new DE(e)}function t$(e){return new RE(e)}function n$(e){return new AE(e)}function r$(e){return new $E(e)}function a$(e){return new FE(e)}function s$(e){return new ME(e)}function i$(e){return new OE(e)}function o$(e){return new LE(e)}function l$(e){return new PE(e)}function u$(e){return new WE(e)}function h$(e){return new UE(e)}function p$(e){return new jE(e)}function d$(e){return new GE(e)}function c$(e){return new HE(e)}function f$(e){return new VE(e)}function m$(e){return new XE(e)}function g$(e){return new rA(e)}function y$(e){return new aA(e)}function b$(e){return new iA(e)}function x$(e){return new pA(e)}function w$(e){return x$(e)}function v$(e){return x$(e)}function k$(e){return new fA(e)}function I$(e){return k$(e)}function S$(e){return k$(e)}function N$(e){return new yA(e)}function T$(e){return N$(e)}function C$(e){return N$(e)}function _$(e){return new xA(e)}function E$(e){return new kA(e)}function A$(e){return new wA(e)}function $$(e){return new IA(e)}function R$(e){return new hA(e)}function F$(e){return new cA(e)}function D$(e){return new gA(e)}function M$(e){return new vE(e)}function O$(e){return new wE(e)}function L$(e){return new IE(e)}function z$(e){return new kE(e)}function P$(e){return new xE(e)}function B$(e){return new bE(e)}function W$(e){return new EE(e)}function V$(e){return new _E(e)}function U$(e){return new gE(e)}function G$(e){return new SE(e)}function H$(e){return new _A(e)}function j$(e){return new NA(e)}LA.className="Resizing",mb.registerClass(LA);var q$=A$,K$=$$,X$=R$,Y$=F$;function Z$(e){return new YE(e)}function J$(e){return new ZE(e)}function Q$(e){return new JE(e)}function eR(e){return new zE(e)}function tR(e){return new EA(e)}function nR(e){return new RA(e)}function rR(e){return new LA(e)}function aR(e){return new DA(e)}var sR={};function iR(e,t){return KT(e,t)}function oR(e,t){return tC(e,t)}function lR(e,t){return nC(e,t)}function uR(e,t){return XT(e,t)}function hR(e,t){return uC(e,t)}function pR(e,t){return QT(e,t)}function dR(e,t){return eC(e,t)}function cR(e,t){return HT(e,t)}function fR(e,t){return RT(e,t)}function mR(e,t){return FT(e,t)}function gR(e,t){return FT(e,t)}function yR(e,t){return FT(e,t)}function bR(e,t){return $T(e,t)}function xR(e,t){return $T(e,t)}function wR(e,t){return $T(e,t)}b(sR,{MAPE:()=>gR,MSE:()=>xR,binaryAccuracy:()=>iR,binaryCrossentropy:()=>oR,categoricalAccuracy:()=>uR,categoricalCrossentropy:()=>hR,cosineProximity:()=>cR,mape:()=>yR,meanAbsoluteError:()=>fR,meanAbsolutePercentageError:()=>mR,meanSquaredError:()=>bR,mse:()=>wR,precision:()=>pR,recall:()=>dR,sparseCategoricalAccuracy:()=>lR});var vR={};b(vR,{modelFromJSON:()=>s_});var kR={};function IR(e){return new D_(e)}function SR(e){return M_(e)}function NR(e){return O_(e)}b(kR,{l1:()=>SR,l1l2:()=>IR,l2:()=>NR});var TR=class extends vT{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof r_))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function CR(e,t){return e<t}function _R(e,t){return e>t}var ER=class extends TR{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new fI("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=CR:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=_R:this.monitorFunc=CR,this.monitorFunc===CR&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===CR?1/0:-1/0}async onEpochEnd(e,t){await bT(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function AR(e){return new ER(e)}var $R,RR,FR={earlyStopping:AR},DR=Ue();DR.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}($R||($R={})),function(e){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(RR||(RR={}));var MR={};function OR(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};MR[e]=n}function LR(e){return MR[e]}function zR(e){delete MR[e]}function PR(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return BR(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map(e=>BR(e,n,r,a));let o=BR(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:Ia.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function BR(e,t,n,r){let[a,s]=GR(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find(e=>!!t[UR(a,e)]);return void 0!==i?t[UR(a,i)][s]:void 0}function WR(e,t,n){return t[UR(e,n.currentContextId)]}function VR(e,t){let[n,r,a]=GR(e);return[UR(n,t&&t.currentContextId),r,a]}function UR(e,t){return t?`${e}-${t}`:e}function GR(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0,a=Number(t[t.length-1]);return[n,a,r]}function HR(e,t,n){let r=PR("pad",e,t,n);if("explicit"===r){r=PR("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function jR(e){return e.kept?e:wo(e)}var qR={};b(qR,{json:()=>KR});var KR=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XR={};b(XR,{json:()=>YR});var YR=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZR={};b(ZR,{json:()=>JR});var JR=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],QR={};b(QR,{json:()=>eF});var eF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],tF={};b(tF,{json:()=>nF});var nF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],rF={};b(rF,{json:()=>aF});var aF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sF={};b(sF,{json:()=>iF});var iF=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],oF={};b(oF,{json:()=>lF});var lF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],uF={};b(uF,{json:()=>hF});var hF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],pF={};b(pF,{json:()=>dF});var dF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],cF={};b(cF,{json:()=>fF});var fF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mF={};b(mF,{json:()=>gF});var gF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],yF={};b(yF,{json:()=>bF});var bF=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],xF={};b(xF,{json:()=>wF});var wF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],vF={};b(vF,{json:()=>kF});var kF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],IF={};b(IF,{json:()=>SF});var SF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],NF={};b(NF,{json:()=>TF});var TF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],CF={};b(CF,{json:()=>_F});var _F=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],EF={};b(EF,{json:()=>AF});var AF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],$F=class{constructor(){let e=[qR,XR,ZR,QR,tF,rF,sF,oF,uF,pF,cF,mF,yF,xF,vF,IF,NF,CF,EF],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(e=>{let t=i[e];t.inputNames.forEach((e,n)=>{let[r,,a]=VR(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(h).length?p.forEach(e=>{let t=i[e];0===t.children.length&&l.push(t)}):Object.keys(h).forEach(e=>{let[t]=VR(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=VR(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=LR(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=DF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=DF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=GF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=GF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=OF(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=OF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=UF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=UF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=MF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=MF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=jF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=jF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=VF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=VF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=HF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=HF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=PF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=PF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=BF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=BF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=zF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let s=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=VR(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:LF(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),a[t]=n}),Object.keys(a).forEach(e=>{let t=a[e];t.inputNames.forEach((e,n)=>{let[r,,s]=VR(e),i=a[r];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)})});let o=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=VR(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function RF(e){let t=Ue().global;if("undefined"!=typeof t.atob)return t.atob(e);if("undefined"!=typeof i)return new i(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function FF(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):RF(e);return t?n:n.toLowerCase()}function DF(e,t,n,r=!1){let a=e[t];return null!=a?FF(a.s,r):n}function MF(e,t,n){let r=e[t];return r?r.b:n}function OF(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function LF(e){switch("string"==typeof e&&(e=$R[e]),e){case $R.DT_FLOAT:case $R.DT_HALF:return"float32";case $R.DT_INT32:case $R.DT_INT64:case $R.DT_INT8:case $R.DT_UINT8:return"int32";case $R.DT_BOOL:return"bool";case $R.DT_DOUBLE:return"float32";case $R.DT_STRING:return"string";default:return null}}function zF(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function PF(e,t,n){let r=e[t];return r&&r.type?LF(r.type):n}function BF(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>LF(e)):n}function WF(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function VF(e,t,n){let r=e[t];return r&&r.shape?WF(r.shape):n}function UF(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function GF(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>FF(e,r)):n}function HF(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>WF(e)):n}function jF(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var qF=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return BR(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return BR(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return OF(this.node.rawAttrs,e,t);if(null!=n.s)return DF(this.node.rawAttrs,e,t);if(null!=n.b)return MF(this.node.rawAttrs,e,t);if(null!=n.shape)return VF(this.node.rawAttrs,e,t);if(null!=n.type)return PF(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return UF(this.node.rawAttrs,e,t);if(null!=n.list.s)return GF(this.node.rawAttrs,e,t);if(null!=n.list.shape)return HF(this.node.rawAttrs,e,t);if(null!=n.list.b)return jF(this.node.rawAttrs,e,t);if(null!=n.list.type)return BF(this.node.rawAttrs,e,t)}return t}},KF={};b(KF,{OP_SCOPE_SUFFIX:()=>ei,abs:()=>Qo,acos:()=>tl,acosh:()=>rl,add:()=>Ho,addN:()=>sl,all:()=>ol,any:()=>ul,argMax:()=>pl,argMin:()=>cl,asin:()=>ml,asinh:()=>yl,atan:()=>xl,atan2:()=>vl,atanh:()=>Il,avgPool:()=>jl,avgPool3d:()=>Kl,basicLSTMCell:()=>iu,batchNorm:()=>pu,batchNorm2d:()=>cu,batchNorm3d:()=>mu,batchNorm4d:()=>yu,batchToSpaceND:()=>lu,bincount:()=>xu,booleanMaskAsync:()=>Pm,broadcastArgs:()=>vu,broadcastTo:()=>Iu,buffer:()=>go,cast:()=>bo,ceil:()=>Nu,clipByValue:()=>_u,clone:()=>wo,complex:()=>ri,concat:()=>Yl,concat1d:()=>Au,concat2d:()=>Ru,concat3d:()=>Du,concat4d:()=>Ou,conv1d:()=>Bu,conv2d:()=>zu,conv2dTranspose:()=>Gu,conv3d:()=>ju,conv3dTranspose:()=>Yu,cos:()=>Ju,cosh:()=>eh,cosineWindow:()=>sg,cumprod:()=>nh,cumsum:()=>ah,denseBincount:()=>ih,depthToSpace:()=>lh,depthwiseConv2d:()=>hh,diag:()=>dh,dilation2d:()=>fh,div:()=>Xo,divNoNan:()=>Th,dot:()=>_h,dropout:()=>rg,einsum:()=>Ah,elu:()=>Rh,enclosingPowerOfTwo:()=>ag,equal:()=>wh,erf:()=>Dh,euclideanNorm:()=>ip,exp:()=>lp,expandDims:()=>hp,expm1:()=>dp,eye:()=>gp,fft:()=>Yf,fill:()=>Tu,floor:()=>bp,floorDiv:()=>qo,fused:()=>lg,gather:()=>wp,gatherND:()=>eg,greater:()=>kp,greaterEqual:()=>Sp,ifft:()=>Jf,imag:()=>Tp,image:()=>hb,inTopKAsync:()=>og,irfft:()=>em,isFinite:()=>_p,isInf:()=>Ap,isNaN:()=>Rp,leakyRelu:()=>Dp,less:()=>Op,lessEqual:()=>zp,linalg:()=>pb,linspace:()=>Pp,localResponseNormalization:()=>Wp,log:()=>Up,log1p:()=>Hp,logSigmoid:()=>ad,logSoftmax:()=>ld,logSumExp:()=>hd,logicalAnd:()=>dd,logicalNot:()=>fd,logicalOr:()=>gd,logicalXor:()=>bd,losses:()=>db,lowerBound:()=>kd,matMul:()=>Jl,max:()=>Gh,maxPool:()=>Sd,maxPool3d:()=>Td,maxPoolWithArgmax:()=>_d,maximum:()=>Ad,mean:()=>Rd,meshgrid:()=>Md,min:()=>jh,minimum:()=>Ld,mirrorPad:()=>Pd,mod:()=>Wd,moments:()=>Ud,movingAverage:()=>Um,mul:()=>Zo,multiRNNCell:()=>Hd,multinomial:()=>qd,neg:()=>ed,norm:()=>ap,notEqual:()=>Xd,oneHot:()=>Zd,ones:()=>Dd,onesLike:()=>Qd,op:()=>ti,outerProduct:()=>tc,pad:()=>rc,pad1d:()=>sc,pad2d:()=>oc,pad3d:()=>uc,pad4d:()=>pc,pool:()=>yc,pow:()=>Kh,prelu:()=>xc,print:()=>vo,prod:()=>vc,raggedGather:()=>Ic,raggedRange:()=>Nc,raggedTensorToTensor:()=>Cc,rand:()=>Ec,randomGamma:()=>Yc,randomNormal:()=>Jc,randomStandardNormal:()=>ef,randomUniform:()=>nf,range:()=>rf,real:()=>sf,reciprocal:()=>lf,relu:()=>hf,relu6:()=>df,reshape:()=>Gl,reverse:()=>ff,reverse1d:()=>gf,reverse2d:()=>bf,reverse3d:()=>wf,reverse4d:()=>kf,rfft:()=>am,round:()=>Sf,rsqrt:()=>Tf,scalar:()=>Xh,scatterND:()=>Xm,searchSorted:()=>vd,selu:()=>_f,separableConv2d:()=>Af,setdiff1dAsync:()=>Rf,sigmoid:()=>eu,sign:()=>Df,signal:()=>ub,sin:()=>Of,sinh:()=>zf,slice:()=>nu,slice1d:()=>Bf,slice2d:()=>Vf,slice3d:()=>Gf,slice4d:()=>jf,softmax:()=>Kf,softplus:()=>nd,spaceToBatchND:()=>cc,sparse:()=>cb,sparseToDense:()=>Jm,spectral:()=>lb,split:()=>nm,sqrt:()=>Zh,square:()=>Qh,squaredDifference:()=>im,squeeze:()=>lm,stack:()=>hm,step:()=>dm,stridedSlice:()=>fm,string:()=>fb,sub:()=>id,sum:()=>tp,tan:()=>gm,tanh:()=>au,tensor:()=>si,tensor1d:()=>ym,tensor2d:()=>bm,tensor3d:()=>xm,tensor4d:()=>wm,tensor5d:()=>vm,tensor6d:()=>km,tile:()=>fp,topk:()=>Sm,transpose:()=>Wm,truncatedNormal:()=>Tm,unique:()=>_m,unsortedSegmentSum:()=>Am,unstack:()=>Rm,upperBound:()=>Fm,variable:()=>Dm,where:()=>kh,whereAsync:()=>Lm,zeros:()=>Fd,zerosLike:()=>Sh});var XF=(e,t,n,r=KF)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(PR("a",e,t,n),PR("b",e,t,n))];case"AddN":return[r.addN(PR("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(PR("a",e,t,n),PR("b",e,t,n))];case"Mul":return[r.mul(PR("a",e,t,n),PR("b",e,t,n))];case"RealDiv":case"Div":return[r.div(PR("a",e,t,n),PR("b",e,t,n))];case"DivNoNan":return[r.divNoNan(PR("a",e,t,n),PR("b",e,t,n))];case"FloorDiv":return[r.floorDiv(PR("a",e,t,n),PR("b",e,t,n))];case"Sub":return[r.sub(PR("a",e,t,n),PR("b",e,t,n))];case"Minimum":return[r.minimum(PR("a",e,t,n),PR("b",e,t,n))];case"Maximum":return[r.maximum(PR("a",e,t,n),PR("b",e,t,n))];case"Pow":return[r.pow(PR("a",e,t,n),PR("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(PR("a",e,t,n),PR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},YF=(e,t,n,r=KF)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(PR("x",e,t,n))];case"Acos":return[r.acos(PR("x",e,t,n))];case"Acosh":return[r.acosh(PR("x",e,t,n))];case"Asin":return[r.asin(PR("x",e,t,n))];case"Asinh":return[r.asinh(PR("x",e,t,n))];case"Atan":return[r.atan(PR("x",e,t,n))];case"Atan2":return[r.atan2(PR("x",e,t,n),PR("y",e,t,n))];case"Atanh":return[r.atanh(PR("x",e,t,n))];case"Ceil":return[r.ceil(PR("x",e,t,n))];case"Complex":return[r.complex(PR("real",e,t,n),PR("imag",e,t,n))];case"Cos":return[r.cos(PR("x",e,t,n))];case"Cosh":return[r.cosh(PR("x",e,t,n))];case"Elu":return[r.elu(PR("x",e,t,n))];case"Erf":return[r.erf(PR("x",e,t,n))];case"Exp":return[r.exp(PR("x",e,t,n))];case"Expm1":return[r.expm1(PR("x",e,t,n))];case"Floor":return[r.floor(PR("x",e,t,n))];case"Log":return[r.log(PR("x",e,t,n))];case"Log1p":return[r.log1p(PR("x",e,t,n))];case"Imag":return[r.imag(PR("x",e,t,n))];case"Neg":return[r.neg(PR("x",e,t,n))];case"Reciprocal":return[r.reciprocal(PR("x",e,t,n))];case"Real":return[r.real(PR("x",e,t,n))];case"Relu":return[r.relu(PR("x",e,t,n))];case"Round":return[r.round(PR("x",e,t,n))];case"Selu":return[r.selu(PR("x",e,t,n))];case"Sigmoid":return[r.sigmoid(PR("x",e,t,n))];case"Sin":return[r.sin(PR("x",e,t,n))];case"Sign":return[r.sign(PR("x",e,t,n))];case"Sinh":return[r.sinh(PR("x",e,t,n))];case"Softplus":return[r.softplus(PR("x",e,t,n))];case"Sqrt":return[r.sqrt(PR("x",e,t,n))];case"Square":return[r.square(PR("x",e,t,n))];case"Tanh":return[r.tanh(PR("x",e,t,n))];case"Tan":return[r.tan(PR("x",e,t,n))];case"ClipByValue":return[r.clipByValue(PR("x",e,t,n),PR("clipValueMin",e,t,n),PR("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(PR("x",e,t,n))];case"Rsqrt":return[r.rsqrt(BR(e.inputNames[0],t,n))];case"Prod":return[r.prod(PR("x",e,t,n),PR("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(PR("x",e,t,n),PR("alpha",e,t,n))];case"Prelu":return[r.prelu(PR("x",e,t,n),PR("alpha",e,t,n))];case"IsNan":return[r.isNaN(BR(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ZF(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Ia.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];Ia.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function JF(e){return!("number"==typeof e||e.some(e=>e<0))}function QF(e,t,n){let r=eD(e,n),a=!JF(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=eD(e.shape,r)}),!JF(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function eD(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var tD=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Xh(0),Fo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),ZF(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Fo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return si([],[0].concat(this.elementShape));let n=this.readMany(e);return ZF(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),hm(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return si([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return ZF(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Yl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Rm(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];$o(()=>{t=Gl(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Gl(nu(t,i,o),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},nD=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ZF(t,e.shape,"TensorList shape mismatch: "),Fo(e)}),this.idTensor=Xh(0),this.maxNumElements=r,Fo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new nD([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ZF(e,this.elementShape,"TensorList shape mismatch: ");let r=QF(this.elementShape,this.tensors,e);return $o(()=>{let e=this.tensors.map(e=>Gl(e,r));return hm(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=QF(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ZF(r.shape,e,"TensorList shape mismatch: "),Gl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ZF(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Fo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new nD([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ZF(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=QF(this.elementShape,this.tensors,t);return Gl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ZF(this.elementShape,t.shape,"TensorList shape mismatch: "),Fo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ZF(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=QF(this.elementShape,this.tensors,n);return 0===e.length?si([],[0].concat(r)):$o(()=>{let t=e.map(e=>Gl(this.tensors[e],r));return hm(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ZF(this.elementShape,t,"TensorList shape mismatch: ");let n=QF(this.elementShape,this.tensors,t);return 0===this.size()?si([],[0].concat(n)):$o(()=>{let e=this.tensors.map(e=>Gl(e,n));return Yl(e,0)})}};function rD(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);ZF(a,t,"TensorList shape mismatch: ");let s=Rm(e);return new nD(s,t,r)}function aD(e,t,n,r){return new nD([],e,t,r)}function sD(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new nD([],n,e.dtype,r),i=Rm(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}function iD(e,t,n){let r=0,a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=eD(s,n),o=0===r?0:e.size/r,l=$o(()=>{let n=[];e=Gl(e,[1,r,o]);for(let r=0;r<t.length;++r){let s=[0,0===r?0:a[r-1],0],l=[1,t[r],o];n[r]=Gl(nu(e,s,l),i)}return e.dispose(),n}),u=new nD([],n,e.dtype,t.length);for(let h=0;h<l.length;h++)u.setItem(h,l[h]);return u}var oD=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=PR("thenBranch",e,t,n),a=PR("elseBranch",e,t,n),s=PR("cond",e,t,n),i=PR("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=PR("body",e,t,n),a=PR("cond",e,t,n),s=PR("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id),l=await i[0].data();i.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()});let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map(e=>e.id);e.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()});let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()})}return u}case"LoopCond":{let r=PR("pred",e,t,n);return[jR(r)]}case"Switch":{let r=PR("pred",e,t,n),a=PR("data",e,t,n);return a.kept||(a=jR(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==BR(e,t,n));if(r){let e=BR(r,t,n);return[jR(e)]}return}case"Enter":{let r=PR("frameName",e,t,n),a=PR("tensor",e,t,n);return n.enterFrame(r),[jR(a)]}case"Exit":{let r=PR("tensor",e,t,n);return n.exitFrame(),[jR(r)]}case"NextIteration":{let r=PR("tensor",e,t,n);return n.nextIteration(),[jR(r)]}case"TensorArrayV3":{let r=PR("size",e,t,n),a=PR("dtype",e,t,n),s=PR("elementShape",e,t,n),i=PR("dynamicSize",e,t,n),o=PR("clearAfterRead",e,t,n),l=PR("identicalElementShapes",e,t,n),u=PR("name",e,t,n),h=new tD(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,Xh(1)]}case"TensorArrayWriteV3":{let r=PR("tensorArrayId",e,t,n),a=PR("index",e,t,n),s=PR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=PR("tensorArrayId",e,t,n),a=PR("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=PR("tensorArrayId",e,t,n),a=PR("indices",e,t,n),s=PR("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=PR("tensorArrayId",e,t,n),a=PR("indices",e,t,n),s=PR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=PR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=PR("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=PR("tensorArrayId",e,t,n),a=PR("tensor",e,t,n),s=PR("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=PR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Xh(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=PR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=PR("tensorListId",e,t,n),a=PR("index",e,t,n),s=PR("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=PR("tensorListId",e,t,n),a=PR("index",e,t,n),s=PR("elementShape",e,t,n),i=PR("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=PR("indices",e,t,n),a=PR("tensor",e,t,n),s=PR("elementShape",e,t,n),i=PR("numElements",e,t,n),o=sD(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=PR("elementShape",e,t,n),s=PR("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=PR(r,e,t,n),o="TensorListReserve"===e.op?-1:i,l=aD(a,s,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=PR("tensorListId",e,t,n),a=PR("indices",e,t,n),s=PR("elementShape",e,t,n),i=PR("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=PR("tensorListId",e,t,n),a=PR("elementShape",e,t,n),s=PR("elementDType",e,t,n),i=PR("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=PR("tensor",e,t,n),a=PR("elementShape",e,t,n),s=PR("elementDType",e,t,n),i=rD(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=PR("tensorListId",e,t,n),a=n.getTensorList(r.id),s=PR("dtype",e,t,n),i=PR("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=PR("tensorListId",e,t,n),a=PR("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=PR("tensorListId",e,t,n),a=PR("elementShape",e,t,n),s=PR("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=PR("tensor",e,t,n),a=PR("elementShape",e,t,n),s=PR("lengths",e,t,n),i=iD(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=PR("tensorListId",e,t,n),a=n.getTensorList(r.id);return[Xh(a.size(),"int32")]}case"TensorListResize":{let r=PR("tensorListId",e,t,n),a=PR("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function lD(e,t,n){let[r,a]=PR("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=PR("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let h=PR("strides",e,t,n),p=HR(e,t,n),d=PR("dataFormat",e,t,n).toUpperCase(),c=PR("dilations",e,t,n),[f,m]=PR("args",e,t,n);i&&(m=f,f=void 0);let g=PR("leakyreluAlpha",e,t,n);return{stride:h,pad:p,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var uD=(e,t,n,r=KF)=>{switch(e.op){case"Conv1D":{let a=PR("stride",e,t,n),s=PR("pad",e,t,n),i=PR("dataFormat",e,t,n).toUpperCase(),o=PR("dilation",e,t,n);return[r.conv1d(PR("x",e,t,n),PR("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=PR("strides",e,t,n),s=HR(e,t,n),i=PR("dataFormat",e,t,n).toUpperCase(),o=PR("dilations",e,t,n);return[r.conv2d(PR("x",e,t,n),PR("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=lD(e,t,n);return[r.fused.conv2d({x:PR("x",e,t,n),filter:PR("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=lD(e,t,n);return[r.fused.depthwiseConv2d({x:PR("x",e,t,n),filter:PR("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=PR("outputShape",e,t,n),s=PR("strides",e,t,n),i=HR(e,t,n);return[r.conv2dTranspose(PR("x",e,t,n),PR("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=PR("strides",e,t,n),s=HR(e,t,n),i=PR("dilations",e,t,n),o=PR("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(PR("input",e,t,n),PR("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("dataFormat",e,t,n).toUpperCase(),o=PR("dilations",e,t,n);return[r.conv3d(PR("x",e,t,n),PR("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("kernelSize",e,t,n);return[r.avgPool(PR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("kernelSize",e,t,n);return[r.maxPool(PR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("kernelSize",e,t,n),o=PR("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(PR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("kernelSize",e,t,n);return[r.avgPool3d(PR("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("kernelSize",e,t,n);return[r.maxPool3d(PR("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=PR("strides",e,t,n),s=PR("pad",e,t,n),i=PR("dilations",e,t,n),o=a[1],l=a[2],u=i[1],h=i[2];return[r.dilation2d(PR("x",e,t,n),PR("filter",e,t,n),[o,l],s,[u,h],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},hD=(e,t,n,r=KF)=>{switch(e.op){case"Fill":{let a=PR("shape",e,t,n),s=PR("dtype",e,t,n),i=PR("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=PR("start",e,t,n),s=PR("stop",e,t,n),i=PR("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=PR("logits",e,t,n),s=PR("numSamples",e,t,n),i=PR("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=PR("indices",e,t,n),s=PR("depth",e,t,n),i=PR("onValue",e,t,n),o=PR("offValue",e,t,n),l=PR("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(PR("shape",e,t,n),PR("dtype",e,t,n))];case"OnesLike":return[r.onesLike(PR("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(PR("shape",e,t,n),PR("dtype",e,t,n),PR("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(PR("shape",e,t,n),PR("minval",e,t,n),PR("maxval",e,t,n),PR("dtype",e,t,n))];case"Range":{let a=PR("start",e,t,n),s=PR("stop",e,t,n),i=PR("step",e,t,n);return[r.range(a,s,i,PR("dtype",e,t,n))]}case"TruncatedNormal":{let a=PR("shape",e,t,n),s=PR("mean",e,t,n),i=PR("stdDev",e,t,n),o=PR("seed",e,t,n);return[r.truncatedNormal(a,s,i,PR("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(PR("shape",e,t,n),PR("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(PR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function pD(e,t,n){let r=PR("boxes",e,t,n),a=PR("scores",e,t,n),s=PR("maxOutputSize",e,t,n),i=PR("iouThreshold",e,t,n),o=PR("scoreThreshold",e,t,n),l=PR("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var dD=async(e,t,n,r,a=KF)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=pD(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=pD(e,t,n),u=PR("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=pD(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(PR("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(PR("x",e,t,n),PR("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},cD=(e,t,n,r=KF)=>{switch(e.op){case"LowerBound":{let a=PR("sortedSequence",e,t,n),s=PR("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=PR("x",e,t,n),s=PR("k",e,t,n),i=PR("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=PR("sortedSequence",e,t,n),s=PR("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=PR("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=PR("x",e,t,n),s=PR("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},fD=(e,t,n,r=KF)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=PR("default",e,t,n);return[BR(e.name,t,n)||a];case"Placeholder":return[BR(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let r=PR("x",e,t,n);return[jR(r)]}case"IdentityN":return PR("x",e,t,n).map(e=>jR(e));case"Snapshot":let s=PR("x",e,t,n);return[jR(s)];case"Shape":return[r.tensor1d(PR("x",e,t,n).shape,"int32")];case"ShapeN":return PR("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(PR("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(PR("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=PR("x",e,t,n),o=PR("data",e,t,n),l=PR("message",e,t,n),u=PR("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},mD=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Xh(0),this.tensorMap=new Map,Fo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Xh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),$o(()=>{let e=Rm(t),r=n.length,a=e.length;Ia.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){let r=n[t],a=e[t];Fo(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return $o(()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return hm(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},gD=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=PR("keyDType",e,t,n),s=PR("valueDType",e,t,n),i=new mD(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=PR("tableHandle",e,t,n,r),s=PR("keys",e,t,n),i=PR("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=PR("tableHandle",e,t,n,r),s=PR("keys",e,t,n),i=PR("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=PR("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},yD=(e,t,n,r=KF)=>{switch(e.op){case"ResizeBilinear":{let a=PR("images",e,t,n),s=PR("size",e,t,n),i=PR("alignCorners",e,t,n),o=PR("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=PR("images",e,t,n),s=PR("size",e,t,n),i=PR("alignCorners",e,t,n),o=PR("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=PR("image",e,t,n),s=PR("boxes",e,t,n),i=PR("boxInd",e,t,n),o=PR("cropSize",e,t,n),l=PR("method",e,t,n),u=PR("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=PR("images",e,t,n),s=PR("transforms",e,t,n),i=PR("outputShape",e,t,n),o=PR("fillValue",e,t,n),l=PR("interpolation",e,t,n),u=PR("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},bD=(e,t,n,r=KF)=>{switch(e.op){case"Equal":return[r.equal(PR("a",e,t,n),PR("b",e,t,n))];case"NotEqual":return[r.notEqual(PR("a",e,t,n),PR("b",e,t,n))];case"Greater":return[r.greater(PR("a",e,t,n),PR("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(PR("a",e,t,n),PR("b",e,t,n))];case"Less":return[r.less(PR("a",e,t,n),PR("b",e,t,n))];case"LessEqual":return[r.lessEqual(PR("a",e,t,n),PR("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(PR("a",e,t,n),PR("b",e,t,n))];case"LogicalNot":return[r.logicalNot(PR("a",e,t,n))];case"LogicalOr":return[r.logicalOr(PR("a",e,t,n),PR("b",e,t,n))];case"Select":case"SelectV2":return[r.where(PR("condition",e,t,n),PR("a",e,t,n),PR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},xD=(e,t,n,r=KF)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(PR("a",e,t,n),PR("b",e,t,n),PR("transposeA",e,t,n),PR("transposeB",e,t,n))];case"Einsum":return[r.einsum(PR("equation",e,t,n),...PR("tensors",e,t,n))];case"Transpose":return[r.transpose(PR("x",e,t,n),PR("perm",e,t,n))];case"_FusedMatMul":let[a,s]=PR("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=PR("numArgs",e,t,n),u=PR("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[h,p]=PR("args",e,t,n);return[r.fused.matMul({a:PR("a",e,t,n),b:PR("b",e,t,n),transposeA:PR("transposeA",e,t,n),transposeB:PR("transposeB",e,t,n),bias:h,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wD=(e,t,n,r=KF)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(PR("x",e,t,n),PR("axis",e,t,n),PR("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(PR("x",e,t,n),PR("mean",e,t,n),PR("variance",e,t,n),PR("offset",e,t,n),PR("scale",e,t,n),PR("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(PR("x",e,t,n),PR("mean",e,t,n),PR("variance",e,t,n),PR("offset",e,t,n),PR("scale",e,t,n),PR("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(PR("x",e,t,n),PR("radius",e,t,n),PR("bias",e,t,n),PR("alpha",e,t,n),PR("beta",e,t,n))];case"Softmax":return[r.softmax(PR("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(PR("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(PR("sparseIndices",e,t,n),PR("outputShape",e,t,n),PR("sparseValues",e,t,n),PR("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vD=(e,t,n,r=KF)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(PR("paramsNestedSplits",e,t,n),PR("paramsDenseValues",e,t,n),PR("indices",e,t,n),PR("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(PR("starts",e,t,n),PR("limits",e,t,n),PR("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(PR("shape",e,t,n),PR("values",e,t,n),PR("defaultValue",e,t,n),PR("rowPartitionTensors",e,t,n),PR("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kD=(e,t,n,r=KF)=>{switch(e.op){case"Max":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.max(PR("x",e,t,n),a,s)]}case"Mean":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.mean(PR("x",e,t,n),a,s)]}case"Min":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.min(PR("x",e,t,n),a,s)]}case"Sum":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.sum(PR("x",e,t,n),a,s)]}case"All":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.all(PR("x",e,t,n),a,s)]}case"Any":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.any(PR("x",e,t,n),a,s)]}case"ArgMax":{let a=PR("axis",e,t,n);return[r.argMax(PR("x",e,t,n),a)]}case"ArgMin":{let a=PR("axis",e,t,n);return[r.argMin(PR("x",e,t,n),a)]}case"Prod":{let a=PR("axis",e,t,n),s=PR("keepDims",e,t,n);return[r.prod(PR("x",e,t,n),a,s)]}case"Cumprod":{let a=PR("axis",e,t,n),s=PR("exclusive",e,t,n),i=PR("reverse",e,t,n);return[r.cumprod(PR("x",e,t,n),a,s,i)]}case"Cumsum":{let a=PR("axis",e,t,n),s=PR("exclusive",e,t,n),i=PR("reverse",e,t,n);return[r.cumsum(PR("x",e,t,n),a,s,i)]}case"Bincount":let a=PR("x",e,t,n),s=PR("weights",e,t,n),i=PR("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=PR("x",e,t,n),s=PR("weights",e,t,n),i=PR("size",e,t,n),o=PR("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ID=(e,t,n,r=KF)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=PR("n",e,t,n),s=PR("axis",e,t,n),i=PR("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=PR("x",e,t,n),s=PR("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=PR("axis",e,t,n),s=PR("batchDims",e,t,n),i=PR("x",e,t,n),o=PR("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=PR("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=PR("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=PR("axis",e,t,n),s=PR("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=PR("begin",e,t,n),s=PR("size",e,t,n);return[r.slice(PR("x",e,t,n),a,s)]}case"StridedSlice":{let a=PR("begin",e,t,n),s=PR("end",e,t,n),i=PR("strides",e,t,n),o=PR("beginMask",e,t,n),l=PR("endMask",e,t,n),u=PR("ellipsisMask",e,t,n),h=PR("newAxisMask",e,t,n),p=PR("shrinkAxisMask",e,t,n),d=PR("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,h,p)]}case"Pack":return $o(()=>{let a=PR("axis",e,t,n),s=PR("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(e=>{let t=Ia.arraysEqual(e.shape,i);if(!t&&!Ia.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(l,a)]});case"Unpack":{let a=PR("axis",e,t,n),s=PR("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=PR("reps",e,t,n);return[r.tile(PR("x",e,t,n),a)]}case"Split":case"SplitV":{let a=PR("axis",e,t,n),s=PR("numOrSizeSplits",e,t,n),i=PR("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=PR("indices",e,t,n),s=PR("values",e,t,n),i=PR("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=PR("x",e,t,n),s=PR("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=PR("sparseIndices",e,t,n),s=PR("outputShape",e,t,n),i=PR("sparseValues",e,t,n),o=PR("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},SD=(e,t,n,r=KF)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(PR("indices",e,t,n),PR("values",e,t,n),PR("denseShape",e,t,n),PR("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(PR("inputIndices",e,t,n),PR("inputShape",e,t,n),PR("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(PR("data",e,t,n),PR("indices",e,t,n),PR("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(PR("data",e,t,n),PR("indices",e,t,n),PR("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ND=(e,t,n,r=KF)=>{switch(e.op){case"FFT":return[r.fft(PR("x",e,t,n))];case"IFFT":return[r.ifft(PR("x",e,t,n))];case"RFFT":return[r.rfft(PR("x",e,t,n))];case"IRFFT":return[r.irfft(PR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},TD=(e,t,n,r=KF)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(PR("data",e,t,n),PR("dataSplits",e,t,n),PR("separator",e,t,n),PR("nGramWidths",e,t,n),PR("leftPad",e,t,n),PR("rightPad",e,t,n),PR("padWidth",e,t,n),PR("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(PR("input",e,t,n),PR("delimiter",e,t,n),PR("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(PR("input",e,t,n),PR("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},CD=(e,t,n,r=KF)=>{switch(e.op){case"Cast":return[r.cast(PR("x",e,t,n),PR("dtype",e,t,n))];case"ExpandDims":{let a=PR("axis",e,t,n);return[r.expandDims(PR("x",e,t,n),a)]}case"Squeeze":{let a=PR("axis",e,t,n);return[r.squeeze(PR("x",e,t,n),a)]}case"Reshape":return[r.reshape(PR("x",e,t,n),PR("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(PR("x",e,t,n),PR("padding",e,t,n),PR("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(PR("x",e,t,n),PR("padding",e,t,n),PR("constantValue",e,t,n))];case"SpaceToBatchND":{let a=PR("blockShape",e,t,n),s=PR("paddings",e,t,n);return[r.spaceToBatchND(PR("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=PR("blockShape",e,t,n),s=PR("crops",e,t,n);return[r.batchToSpaceND(PR("x",e,t,n),a,s)]}case"DepthToSpace":{let a=PR("blockSize",e,t,n),s=PR("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(PR("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(PR("x",e,t,n),PR("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(PR("s0",e,t,n),PR("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _D(e,t,n,r,a=$o){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a(()=>XF(e,t,n));case"basic_math":return a(()=>YF(e,t,n));case"control":return oD(e,t,n);case"convolution":return a(()=>uD(e,t,n));case"creation":return a(()=>hD(e,t,n));case"dynamic":return dD(e,t,n);case"evaluation":return a(()=>cD(e,t,n));case"image":return a(()=>yD(e,t,n));case"graph":return a(()=>fD(e,t,n));case"logical":return a(()=>bD(e,t,n));case"matrices":return a(()=>xD(e,t,n));case"normalization":return a(()=>wD(e,t,n));case"ragged":return a(()=>vD(e,t,n));case"reduction":return a(()=>kD(e,t,n));case"slice_join":return a(()=>ID(e,t,n));case"sparse":return a(()=>SD(e,t,n));case"spectral":return a(()=>ND(e,t,n));case"string":return a(()=>TD(e,t,n));case"transformation":return a(()=>CD(e,t,n));case"hash_table":return gD(e,t,n,r);case"custom":let s=LR(e.op);if(s&&s.customExecutor)return s.customExecutor(new qF(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ia.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}var ED=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function AD(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(e=>GR(e)[0]),h=[];null!=r&&(h=r.map(e=>GR(e.name)[0]));let p=[...t];for(;p.length>0;){let e=p.pop();if((MD(e)||OD(e)||LD(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),p.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function $D(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>GR(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach(e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>l.has(e.name))&&s.push(e)})}return u}var RD=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],FD=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],DD=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function MD(e){return RD.indexOf(e.op)>=0}function OD(e){return FD.indexOf(e.op)>=0}function LD(e){return DD.indexOf(e.op)>=0}var zD=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new zD(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=AD(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return $D(this.graph,this.weightMap,n)}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Fo(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(e=>this.graph.nodes[GR(e)[0]]),a=t.map(e=>GR(e)[0]),s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));try{this.keepIntermediateTensors=Ue().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let l={},u={};return $o(()=>{let n=new ED(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[n,a]=GR(t),s=[];s[a]=e[t],r[n]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(s))});let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=_D(t,r,n,this._resourceManager);if(Ia.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map(e=>BR(e,r,n))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){let t=WR(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ue().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let s=new ED(this.weightMap,r,a,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>BR(e,i,s)),l=o.map(e=>e.id),u=Object.keys(e).map(t=>e[t].id),h=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{e&&!e.isDisposed&&!h.has(e.id)&&e.dispose()})}),null==this.parent&&s.dispose(h),o}async executeFunctionAsync(e,t,n){let r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(e=>this.graph.nodes[GR(e)[0]]),i=n.map(e=>GR(e)[0]),o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=AD(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),c=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,r]=GR(t),a=[];a[r]=e[t],c[n]=a});let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(e=>!MD(e)&&!BR(e.name,c,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&PR("isConstant",e.node,r,n)&&([h]=VR(e.node.name,n)),null==r[e.node.name]){let p=_D(e.node,r,n,this._resourceManager);h||([h]=VR(e.node.name,n));let d=n.currentContext;Ia.isPromise(p)?u.push(p.then(u=>(r[h]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{let[i]=VR(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!BR(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!BR(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=GR(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);Ia.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&Ia.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=GR(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=GR(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}},PD=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},BD="?tfjs-format=file",WD="model.json",VD=class{constructor(e,t={},n=Eb){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new PD}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return Ia.isPromise(e)?e.then(e=>this.loadSync(e)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new zD($F.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=$F.Instance.transformGraph(e.modelInitializer);this.initializer=new zD(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof ys?[e]:e,n={};return t.forEach((e,t)=>n[this.structuredOutputKeys[t]]=e),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ys)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ro(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function UD(e,t={},n=Eb){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=HD(e));let r=new VD(e,t,n);return await r.load(),r}function GD(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let a=Eb.getWeightSpecs(n.weightsManifest),s=Eb.getModelArtifactsForJSONSync(n,a,r);t=Eb.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Eb.fromMemorySync(e)}let n=new VD(t);return n.load(),n}function HD(e){return e.endsWith("/")||(e+="/"),`${e}${WD}${BD}`}var jD="4.2.0",qD={};b(qD,{CSVDataset:()=>GM,Dataset:()=>$M,FileDataSource:()=>aO,TextLineDataset:()=>LM,URLDataSource:()=>sO,array:()=>FM,csv:()=>iO,func:()=>oO,generator:()=>lO,microphone:()=>hO,version_data:()=>pO,webcam:()=>uO,zip:()=>DM});var KD=w(R()),XD=w(R());function YD(e,t){return ZD(e,t)}function ZD(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(nM(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=e[s],o=ZD(i,t,n,r);a[s]=o}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function JD(e,t=eM){return QD(e,t)}function QD(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(nM(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=e.map(e=>e[s]),i=QD(r,t,n);a[s]=i}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function eM(e){return null===e?null:nM(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function tM(e,t){let n=new Map;ZD(e,t,n);for(let r of Array.from(n.keys())){let e=n.get(r);if(Ia.isPromise(e)){let t=await e;n.set(r,t)}}return ZD(e,t,n)}function nM(e){let t=!1;if(Ue().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=F();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ys)&&!(e instanceof Promise)&&!t)}function rM(e){return null==e||aM(e)||Array.isArray(e)||"object"==typeof e&&e instanceof ys||Ia.isTypedArray(e)}function aM(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function sM(e){return YD(e,iM)}function iM(e){return e instanceof ys?{value:e.clone(),recurse:!1}:nM(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var oM=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},lM=class extends oM{constructor(){super(lM.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function uM(e){return new mM(e)}function hM(e){return new gM(e)}function pM(e,t){return new CM(e,t)}function dM(e,t=cM.FAIL){return new _M(e,t)}lM.INITIAL_CAPACITY=32;var cM,fM=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new IM(this,e)}filter(e){return new vM(this,e)}map(e){return new kM(this,e)}mapAsync(e){return new SM(this,e)}serialMapAsync(e){return new SM(this,e).serial()}flatmap(e){return new TM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new wM(this,e,t)}columnMajorBatch(e,t=!0,n=eM){return this.rowMajorBatch(e,t).map(e=>JD(e,n))}concatenate(e,t){return new CM(uM([this,e]),t)}take(e){return e<0||null==e?this:new xM(this,e)}skip(e){return e<0||null==e?this:new bM(this,e)}prefetch(e){return new EM(this,e)}shuffle(e,t){return new AM(this,e,t)}serial(){return new yM(this)}},mM=class extends fM{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:sM(e),done:!1}}},gM=class extends fM{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(Lse){throw Lse.message="Error thrown while iterating through a dataset: "+Lse.message,Lse}}},yM=class extends fM{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},bM=class extends fM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ro(e.value)}return this.upstream.next()}},xM=class extends fM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},wM=class extends fM{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},vM=class extends fM{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ro(e.value)}}},kM=class extends fM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ns.getTensorsInContainer(n);for(let a of t)Ns.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},IM=class extends fM{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(Lse){if(!this.handler(Lse))return{value:null,done:!0}}}},SM=class extends fM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ns.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Ns.getTensorsInContainer(n);for(let a of t)Ns.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},NM=class extends fM{constructor(){super(),this.outputQueue=new lM,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},TM=class extends NM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ns.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Ns.isTensorInList(a,r)||a.dispose();return!0}},CM=class extends fM{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(cM||(cM={}));var _M=class extends fM{constructor(e,t=cM.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(e){return e instanceof fM?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}}let a=await tM(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case cM.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case cM.SHORTEST:return{value:null,done:!0};case cM.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},EM=class extends fM{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new oM(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},AM=class extends EM{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=XD.alea(n||Ia.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},$M=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return Ia.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),RM(async()=>(await r.iterator()).columnMajorBatch(e,t,MM),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,RM(async()=>(await n.iterator()).concatenate(await e.iterator()),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,RM(async()=>(await n.iterator()).filter(t=>$o(()=>e(t))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return RM(async()=>(await t.iterator()).map(t=>$o(()=>e(t))),this.size)}mapAsync(e){let t=this;return RM(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return RM(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,RM(async()=>{let t=hM(async()=>({value:await n.iterator(),done:!1}));return pM(t.take(e))},t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,RM(async()=>(await n.iterator()).skip(e),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=KD.alea(t||Ia.now().toString());return RM(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,RM(async()=>(await n.iterator()).take(e),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function RM(e,t=null){return new class extends $M{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function FM(e){return RM(async()=>uM(e),e.length)}function DM(e){if(!nM(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return RM(async()=>{let t=await tM(e,e=>{if(e instanceof $M)return{value:e.iterator(),recurse:!1};if(nM(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return dM(t,cM.SHORTEST)},t)}function MM(e){if(null===e)return null;let t=e[0];return rM(t)?{value:OM(e),recurse:!1}:{value:null,recurse:!0}}function OM(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ys?hm(e):si(e)}$M.MAX_BUFFER_SIZE=1e4;var LM=class extends $M{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},zM='"',PM=Symbol("out"),BM=Symbol("field"),WM=Symbol("quote"),VM=Symbol("quoteafterquote"),UM=Symbol("quoteinquote"),GM=class extends $M{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new LM(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Ia.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Ia.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(Ia.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(let r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=PM;for(let i=0;i<a;i++)switch(s){case PM:switch(e.charAt(i)){case zM:r=i+1,s=WM;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=PM;break;default:s=BM,r=i;break}break;case BM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=PM,r=i+1;break;default:}break;case WM:switch(e.charAt(i)){case zM:s=VM;break;default:}break;case VM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=PM,r=i+1;break;case zM:s=WM;break;default:s=UM;break}break;case UM:switch(e.charAt(i)){case zM:s=WM;break;default:}break;default:}if(s===VM?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},HM=class extends fM{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Ue().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new HM(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(Ia.sizeFromShape(t));return n.set(e,n.length-e.length),si(n,t)}},jM=class extends fM{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ym([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=bm([r,n,s,a],[1,4])}else this.cropBox=bm([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Ue().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new jM(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Ia.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(Lse){throw Lse.message="Error thrown while initializing video stream: "+Lse.message,Lse}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(Lse){console.log(Lse),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=lx.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return $o(()=>{let t,n=hp(bo(e,"float32"),0);t=hb.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Gl(t,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(Lse){console.log(Lse),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},qM=class{},KM=class extends fM{split(e){return new XM(this,e)}},XM=class extends KM{constructor(e,t){super(),this.upstream=e,this.impl=new YM(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},YM=class extends NM{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},ZM=class extends fM{decodeUTF8(){return new JM(this)}},JM=class extends KM{constructor(e){super(),this.upstream=e,this.impl=new QM(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},QM=class extends NM{constructor(e){if(super(),this.upstream=e,Ue().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=F();this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Ue().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(i.from(e.buffer)),this.outputQueue.push(t),!0)}},eO=class extends ZM{constructor(e,t={}){super(),this.file=e,this.options=t,Ia.assert(e instanceof Uint8Array||!!Ue().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function tO(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=nO(e));let s=await(n||Ia.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new eO(e,t)}throw new Error(s.statusText)}var nO=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function rO(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var aO=class extends qM{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(rO(this.input)&&Ue().get("IS_NODE")){let e=D();this.input=e.readFileSync(this.input.slice(7))}return new eO(this.input,this.options)}},sO=class extends qM{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return rO(this.url)?new aO(this.url,this.fileOptions).iterator():tO(this.url,this.fileOptions)}};function iO(e,t={}){return new GM(new sO(e),t)}function oO(e){let t=hM(e);return RM(async()=>t)}function lO(e){return RM(async()=>{let t=await e();return hM(()=>t.next())})}async function uO(e,t){return jM.create(e,t)}async function hO(e){return HM.create(e)}var pO="4.2.0";function dO(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Ia.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}var cO=Jw.whereImpl,fO=class extends U{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,_o())}nextDataId(){return fO.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ue().get("IS_NODE")&&jx.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ia.isString(n[0])){let a=n.map(e=>Ia.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return jx.mergeRealAndImagArrays(e,t)}return Ia.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Ia.decodeString(e));return go(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return go(e.shape,e.dtype,t)}makeOutput(e,t,n){return _o().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=Ia.now();return e(),{kernelMs:Ia.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){dO([e],"where");let t=this.readSync(e.dataId);return cO(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};fO.nextDataId=0;var mO={};function gO(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}b(mO,{addImpl:()=>RO,bincountImpl:()=>OO,bincountReduceImpl:()=>LO,castImpl:()=>CO,ceilImpl:()=>WO,concatImpl:()=>GO,equalImpl:()=>HO,expImpl:()=>KO,expm1Impl:()=>ZO,floorImpl:()=>eL,gatherNdImpl:()=>rL,gatherV2Impl:()=>aL,greaterEqualImpl:()=>lL,greaterImpl:()=>sL,lessEqualImpl:()=>fL,lessImpl:()=>pL,linSpaceImpl:()=>yL,logImpl:()=>bL,maxImpl:()=>vL,maximumImpl:()=>kL,minimumImpl:()=>NL,multiplyImpl:()=>_L,negImpl:()=>RL,notEqualImpl:()=>ML,prodImpl:()=>WL,raggedGatherImpl:()=>ZL,raggedRangeImpl:()=>QL,raggedTensorToTensorImpl:()=>az,rangeImpl:()=>sz,rsqrtImpl:()=>iz,scatterImpl:()=>uz,sigmoidImpl:()=>hz,simpleAbsImpl:()=>gO,sliceImpl:()=>cz,sparseFillEmptyRowsImpl:()=>gz,sparseReshapeImpl:()=>yz,sparseSegmentReductionImpl:()=>bz,sqrtImpl:()=>xz,squaredDifferenceImpl:()=>kz,stridedSliceImpl:()=>Nz,stringNGramsImpl:()=>Cz,stringSplitImpl:()=>Ez,stringToHashBucketFastImpl:()=>Az,subImpl:()=>$z,tileImpl:()=>Mz,topKImpl:()=>zz,transposeImpl:()=>zL,uniqueImpl:()=>Pz});var yO=e=>{let{x:t}=e.inputs,n=e.backend;dO(t,"abs");let r=new Float32Array(Ia.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=gO(a),n.makeOutput(r,t.shape,t.dtype)},bO={kernelName:Ye,backendName:"cpu",kernelFunc:yO};function xO(e){return(t,n,r,a,s)=>{let i=jx.assertAndGetBroadcastShape(t,n),o=i.length,l=Ia.computeStrides(i),u=Ia.sizeFromShape(i),h=Ia.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=Ia.computeStrides(t),f=Ia.computeStrides(n),m=jx.getBroadcastDims(t,i),g=jx.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<h.length;++y)h[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<h.length;++y){let t=Ia.indexToLoc(y,o,l),n=t.slice(-p);m.forEach(e=>n[e]=0);let s=Ia.locToIndex(n,p,c),i=t.slice(-d);g.forEach(e=>i[e]=0);let u=Ia.locToIndex(i,d,f);h[y]=e(r[s],a[u])}return[h,i]}}function wO(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var vO={kernelName:kt,backendName:"cpu",kernelFunc:wO};function kO(e,t,n="float32"){if("complex64"===n){let n=kO(e,t,"float32"),r=kO(e,t,"float32");return wO({inputs:{real:n,imag:r},backend:e})}let r=Ia.makeZerosTypedArray(Ia.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function IO(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var SO={kernelName:pn,backendName:"cpu",kernelFunc:IO};function NO(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var TO={kernelName:lr,backendName:"cpu",kernelFunc:NO};function CO(e,t,n,r){if("int32"===r){let n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){let r=Ia.toTypedArray([0],n),[a,s]=xO((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function _O(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return IO({inputs:{x:a},backend:n});let e=kO(n,a.shape,a.dtype),t=_O({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=wO({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=NO({inputs:{input:a},backend:n}),t=_O({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ia.hasEncodingLoss(a.dtype,s)){let e=IO({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=CO(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var EO={kernelName:xt,backendName:"cpu",kernelFunc:_O};function AO(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;dO([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h="string"===s.dtype?jx.fromUint8ToStringArray(l):l,p="string"===s.dtype?jx.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,h,p,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=_O({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=_O({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=wO({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function $O(e){return(t,n,r,a,s,i)=>{let o=jx.assertAndGetBroadcastShape(t,n),l=Ia.sizeFromShape(o),u=o.length,h=Ia.computeStrides(o),p=Ia.getTypedArrayFromDType("float32",l),d=Ia.getTypedArrayFromDType("float32",l),c=jx.getBroadcastDims(t,o),f=jx.getBroadcastDims(n,o),m=jx.mergeRealAndImagArrays(r,a),g=jx.mergeRealAndImagArrays(s,i),y=t.length,b=Ia.computeStrides(t),x=n.length,w=Ia.computeStrides(n);if(c.length+f.length===0)for(let v=0;v<p.length;v++){let t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);p[v]=r.real,d[v]=r.imag}else for(let v=0;v<p.length;v++){let t=Ia.indexToLoc(v,u,h),n=t.slice(-y);c.forEach(e=>n[e]=0);let r=Ia.locToIndex(n,y,b),a=t.slice(-x);f.forEach(e=>a[e]=0);let s=Ia.locToIndex(a,x,w),i=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);p[v]=i.real,d[v]=i.imag}return[p,d,o]}}var RO=xO((e,t)=>e+t),FO=$O((e,t,n,r)=>({real:e+n,imag:t+r})),DO=AO(Qe,RO,FO),MO={kernelName:Qe,backendName:"cpu",kernelFunc:DO};function OO(e,t,n,r,a){let s=Ia.sizeFromShape(r),i=Ia.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function LO(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=go([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function zO(e){return(t,n,r)=>{let a=Ia.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function PO(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(dO(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=Ia.sizeFromShape(i.shape),h=n||i.dtype,p=Ia.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function BO(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(dO(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var WO=zO(e=>Math.ceil(e)),VO=BO(wt,WO),UO={kernelName:wt,backendName:"cpu",kernelFunc:VO};function GO(e,t,n,r){let a=Ia.getArrayFromDType(n,Ia.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{let n=Ia.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{let s="string"===n?jx.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}var HO=xO((e,t)=>e===t?1:0),jO=AO(Yt,HO,null,"bool"),qO={kernelName:Yt,backendName:"cpu",kernelFunc:jO},KO=zO(e=>Math.exp(e)),XO=BO(Zt,KO,"float32"),YO={kernelName:Zt,backendName:"cpu",kernelFunc:XO},ZO=zO(e=>Math.expm1(e)),JO=BO(Qt,ZO),QO={kernelName:Qt,backendName:"cpu",kernelFunc:JO},eL=zO(e=>Math.floor(e)),tL=BO(rn,eL),nL={kernelName:rn,backendName:"cpu",kernelFunc:tL};function rL(e,t,n,r,a,s,i,o,l){let u=go([r,s],n);for(let h=0;h<r;h++){let n=[],r=0;for(let t=0;t<a;t++){let s=e[h*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[h*s+e]=t.get(...t.indexToLoc(r*s+e))}return u}function aL(e,t,n){let r=go(n,e.dtype);for(let a=0;a<r.size;++a){let n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[a]=e.values[l])}return r}var sL=xO((e,t)=>e>t?1:0),iL=AO(un,sL,null,"bool"),oL={kernelName:un,backendName:"cpu",kernelFunc:iL},lL=xO((e,t)=>e>=t?1:0),uL=AO(hn,lL,null,"bool"),hL={kernelName:hn,backendName:"cpu",kernelFunc:uL},pL=xO((e,t)=>e<t?1:0),dL=AO(bn,pL,null,"bool"),cL={kernelName:bn,backendName:"cpu",kernelFunc:dL},fL=xO((e,t)=>e<=t?1:0),mL=AO(xn,fL,null,"bool"),gL={kernelName:xn,backendName:"cpu",kernelFunc:mL};function yL(e,t,n){let r=(t-e)/(n-1),a=Ia.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var bL=zO(e=>Math.log(e)),xL=BO(vn,bL),wL={kernelName:vn,backendName:"cpu",kernelFunc:xL};function vL(e,t,n,r){let a=Ia.getTypedArrayFromDType(r,Ia.sizeFromShape(n));for(let s=0;s<a.length;++s){let n=s*t,r=e[n];for(let a=0;a<t;++a){let t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}var kL=xO((e,t)=>Math.max(e,t)),IL=AO(Rn,kL),SL={kernelName:Rn,backendName:"cpu",kernelFunc:IL},NL=xO((e,t)=>Math.min(e,t)),TL=AO(Bn,NL),CL={kernelName:Bn,backendName:"cpu",kernelFunc:TL},_L=xO((e,t)=>e*t),EL=$O((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),AL=AO(Gn,_L,EL),$L={kernelName:Gn,backendName:"cpu",kernelFunc:AL};function RL(e,t,n){let r=Ia.createScalarValue(-1,n);return _L([],t,r,e,n)}function FL(e){let{inputs:t,backend:n}=e,{x:r}=t;dO(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=RL(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var DL={kernelName:Hn,backendName:"cpu",kernelFunc:FL},ML=xO((e,t)=>e!==t?1:0),OL=AO(jn,ML,null,"bool"),LL={kernelName:jn,backendName:"cpu",kernelFunc:OL};function zL(e,t,n,r,a){let s=t.length,i=Ia.sizeFromShape(t),o=Ia.computeStrides(t),l=Ia.computeStrides(a),u=Ia.getTypedArrayFromDType(n,Ia.sizeFromShape(a));for(let h=0;h<i;++h){let t=Ia.indexToLoc(h,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];let a=Ia.locToIndex(n,s,l);u[a]=e[h]}return u}function PL(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;dO(a,"transpose");let i=a.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=a.shape[s[h]];let l=r.data.get(a.dataId).values,u=zL(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var BL={kernelName:Jr,backendName:"cpu",kernelFunc:PL};function WL(e,t,n,r){let[a,s]=jx.computeOutAndReduceShapes(e,r),i=Cs(t,"int32"),o=Ia.makeZerosTypedArray(Ia.sizeFromShape(a),i),l=Ia.sizeFromShape(s);for(let u=0;u<o.length;++u){let e=u*l,t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:a,outDtype:i}}function VL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dO(a,"prod");let o=a.shape.length,l=Ia.parseAxisParam(s,a.shape),u=jx.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=PL({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=jx.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=WL(p.shape,p.dtype,c,h),y=m;return i&&(y=jx.expandShapeToKeepDim(m,l)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}var UL={kernelName:rr,backendName:"cpu",kernelFunc:VL};function GL(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){let a=Ia.indexToLoc(r,t.length,Ia.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}})}function HL(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function jL(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);HL(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){let a=n[e],s=e+t.length-1;if(s>=0){let e=o[s],t=e[e.length-1]-a[r];for(let n=r;n<i;++n)o[s].push(a[n+1]+t)}r=a[r],i=a[i]}i!==r&&(a.push([r,i]),s+=i-r)}return{outSplits:o,valueSlices:a,numValues:s}}function qL(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=Ia.getArrayFromDType("int32",r);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}function KL(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function XL(e,t,n,r,a,s){let i=KL(t,2)[1],o=KL(s,2)[1],l=0;for(let u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[l*o+n]=e[t*i+n];++l}}function YL(e,t,n,r,a){let s=t.slice();s[0]=a;let i=Ia.getArrayFromDType(n,Ia.sizeFromShape(s)),o=e.length,l=0===o?0:o/t[0];return XL(e,t,r,l,i,s),[i,s]}function ZL(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(GL(s,i,l),0===r.length)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:h,valueSlices:p,numValues:d}=jL(s,i,e,u),c=qL(h),f=YL(n,r,a,p,d);return[c,f[0],f[1]]}var JL=2147483647;function QL(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,h=[];o||h.push(t[0]),l||h.push(a[0]),u||h.push(i[0]);for(let g=1;g<h.length;++g)if(h[g]!==h[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=0===h.length?1:h[0],d=Ia.getArrayFromDType("int32",p+1);d[0]=0;for(let g=0;g<p;++g){let t,n=o?e[0]:e[g],a=l?r[0]:r[g],i=u?s[0]:s[g];if(0===i)throw new Error("Requires delta != 0");if(i>0&&a<n||i<0&&a>n)t=0;else if(t=Math.ceil(Math.abs((a-n)/i)),t>JL)throw new Error("Requires ((limit - start) / delta) <= "+JL);d[g+1]=d[g]+t}let c=d[p],f=Ia.getArrayFromDType(n,c),m=0;for(let g=0;g<p;++g){let t=d[g+1]-d[g],n=o?e[0]:e[g],r=u?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=r}return[d,f]}var ez=jx.RowPartitionType,tz=class{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=jx.getRowPartitionTypesHelper(u),this.raggedRank=jx.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ez.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ez.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ez.VALUE_ROWIDS:return tz.getMaxWidthValueRowID(t);case ez.ROW_SPLITS:return tz.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type "+ez[this.getRowPartitionTypeByDimension(e-1)])}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return rz(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;jx.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=jx.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return Ia.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case ez.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case ez.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error("Unsupported partition type: "+ez[s])}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case ez.FIRST_DIM_SIZE:return e[0];case ez.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ez.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type "+ez[t])}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=rz(t,!1),a=Ia.getArrayFromDType(this.valuesDType,Ia.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=Ia.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;$o(()=>{let t=Gl(u,e);u=Iu(t,i).dataSync()})}let h=0,p=0,d=0;for(let c=0;c<=l;++c){let e=c<l?t[c]:-1;if(e!==d){if(p<d){let e=a.subarray(h*o),t=s.subarray(p*o),n=(d-p)*o;nz(t,e,n)}if(c>=l){let t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){let e=s.slice(d*o);nz(e,u,o),++d}e<0?(h=c+1,p=d):(h=c,p=d,d=p+1)}else++d}}};function nz(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function rz(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function az(e,t,n,r,a,s,i,o,l,u){return new tz(e,t,n,r,a,s,i,o,l,u).compute()}function sz(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return Ia.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=Ia.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var iz=zO(e=>1/Math.sqrt(e)),oz=BO(xr,iz),lz={kernelName:xr,backendName:"cpu",kernelFunc:oz};function uz(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return go(n,t.dtype);let c=go(h,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<s;f++){let e=[],s=0;for(let t=0;t<i;t++){let n=p[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[s*a+n]+=d[f*a+n]:c.values[s*a+n]=0===t.rank?d[0]:d[f*a+n]}return c}var hz=zO(e=>1/(1+Math.exp(-e))),pz=PO(_r,e=>1/(1+Math.exp(-e))),dz={kernelName:_r,backendName:"cpu",kernelFunc:pz};function cz(e,t,n,r,a){let s=xx.isSliceContinous(r,t,n),i=Ia.sizeFromShape(n),o=Ia.computeStrides(r);if(s){let n=xx.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l="string"===a?jx.fromUint8ToStringArray(e):e,u=go(r,a,l),h=go(n,a);for(let p=0;p<h.size;++p){let e=h.indexToLoc(p),n=e.map((e,n)=>e+t[n]);h.set(u.get(...n),...e)}return"string"===a?jx.fromStringArrayToUint8(h.values):h.values}function fz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;dO(a,"slice");let[o,l]=xx.parseSliceParams(a,s,i);xx.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,h=cz(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,h)}var mz={kernelName:Sr,backendName:"cpu",kernelFunc:fz};function gz(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),h=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(jx.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let e=Ia.getArrayFromDType(n,0),t=Ia.getArrayFromDType(a,0);return[e,[0,p],t,u,h]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let t=e[g*p];if(t<0)throw new Error(jx.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(jx.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],d=d&&t>=c,c=t}let m=!0;for(let g=0;g<l;++g){let e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)h[e]=e;return[t,[o,p],n,u,h]}{let t=f[l-1],s=Ia.getArrayFromDType(n,t*p),d=Ia.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let n=0;n<o;++n){let t=e[n*p],a=c[t],i=(0===t?0:f[t-1])+a;c[t]++;for(let r=0;r<p;++r)s[i*p+r]=e[n*p+r];d[i]=r[n],h[n]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function yz(e,t,n,r,a){let s=Ia.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let m=0;m<o;++m){let e=a[m];if(-1===e){if(-1!==h)throw new Error(jx.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,m));h=m,l.push(1)}else{if(e<0)throw new Error(jx.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==h){if(u<=0)throw new Error(jx.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(jx.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(Ia.sizeFromShape(l)!==s)throw new Error(jx.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=Ia.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<p;++n)t+=e[m*p+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/c[e]),t%=c[e]}return[f,[i,o],l]}function bz(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(jx.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce((e,t)=>e*t,1),c=Ia.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw new Error(jx.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(jx.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(jx.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let n=f;n<m;++n){let t=r[n];if(t<0||t>=l[0])throw new Error(jx.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<u;n++)c[y*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}var xz=zO(e=>Math.sqrt(e)),wz=PO(Ar,e=>Math.sqrt(e)),vz={kernelName:Ar,backendName:"cpu",kernelFunc:wz},kz=xO((e,t)=>{let n=e-t;return n*n}),Iz=AO(Br,kz),Sz={kernelName:Br,backendName:"cpu",kernelFunc:Iz};function Nz(e,t,n,r){let a=go(e,t.dtype);for(let s=0;s<a.size;s++){let e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}var Tz=class{constructor(e,t,n,r,a,s){this.separator=Ia.encodeString(e),this.nGramWidths=t,this.leftPad=Ia.encodeString(n),this.rightPad=Ia.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),h=s-(l+u),p=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<h;++t)d+=e[p+t].length;d+=u*this.rightPad.length;let c=l+u+h-1;d+=c*this.separator.length,n[r+i]=new Uint8Array(d);let f=n[r+i],m=0,g=e=>e.forEach(e=>f[m++]=e);for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<h-1;++t)g(e[p+t]),g(this.separator);if(h>0){g(e[p+h-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=Ia.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let t=0;t<=a;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=a;++o){let e=t[o]-t[o-1],n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}let i=new Array(s[a]);for(let o=0;o<a;++o){let n=t[o],r=s[o];if(this.nGramWidths.forEach(a=>{let s=t[o+1]-t[o],l=this.getNumNGrams(s,a);this.createNGrams(e,n,i,r,l,a),r+=l}),this.preserveShort&&r===s[o]){let a=t[o+1]-t[o];if(0===a)continue;let s=a+2*this.padWidth,l=1;this.createNGrams(e,n,i,r,l,s)}}return[i,s]}};function Cz(e,t,n,r,a,s,i,o){return new Tz(n,r,a,s,i,o).compute(e,t)}function _z(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),e=e.subarray(s+1),s=e.indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function Ez(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let r=a.length;_z(e[d],t,n,a);let l=a.length-r;o[d]=l,s+=l,i=Math.max(i,l)}let l=Ia.getArrayFromDType("int32",2*s),u=new Array(s),h=[r,i],p=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*p]=d,l[2*p+1]=e,u[p]=a[p],++p;return[l,u,h]}function Az(e,t){let n=Ia.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ia.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var $z=xO((e,t)=>e-t),Rz=$O((e,t,n,r)=>({real:e-n,imag:t-r})),Fz=AO(jr,$z,Rz),Dz={kernelName:jr,backendName:"cpu",kernelFunc:Fz};function Mz(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=go(n,e.dtype);for(let a=0;a<r.values.length;++a){let t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];let s=e.locToIndex(n);r.values[a]=e.values[s]}return r}var Oz=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function Lz(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2),u=Math.max(n,Math.floor(t-s*o/a+l)),h=Math.min(r,Math.floor(t+(a-s)*o/a+l));Lz(e,t,u,h)}let a=e[t],s=n,i=r;for(Ia.swap(e,n,t),Oz(e[r],a)>0&&Ia.swap(e,n,r);s<i;){for(Ia.swap(e,s,i),s++,i--;Oz(e[s],a)<0;)s+=1;for(;Oz(e[i],a)>0;)i-=1}0===Oz(e[n],a)?Ia.swap(e,n,i):(i+=1,Ia.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function zz(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=Ia.getTypedArrayFromDType(n,i*r),u=Ia.getTypedArrayFromDType("int32",i*r);for(let p=0;p<i;p++){let t=p*o,n=e.subarray(t,t+o),s=new Array(n.length);n.forEach((e,t)=>s[t]={value:e,index:t}),r<s.length&&(Lz(s,r),s=s.slice(0,r)),a&&s.sort(Oz);let i=p*r,h=l.subarray(i,i+r),d=u.subarray(i,i+r);for(let e=0;e<r;e++)h[e]=s[e].value,d[e]=s[e].index}let h=t.slice();return h[h.length-1]=r,[go(h,n,l),go(h,"int32",u)]}function Pz(e,t,n,r){let a=Ia.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i={},o=new Int32Array(n[a]),l=new ps(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let t;if(h)t=e[f].toString();else{let e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==i[t])o[f]=i[t];else{let e=Object.keys(i).length;i[t]=e,o[f]=e,u.push(f)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new ps(p,r);u.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)});let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}Wo("cpu",()=>new fO,1);var Bz=PO(qt,e=>e>=0?e:Math.exp(e)-1),Wz={kernelName:qt,backendName:"cpu",kernelFunc:Bz};function Vz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;dO([a],"leakyRelu");let i=Ia.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=Ia.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var Uz={kernelName:yn,backendName:"cpu",kernelFunc:Vz},Gz=xO((e,t)=>e<0?t*e:e);function Hz(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;dO([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Gz(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var jz={kernelName:nr,backendName:"cpu",kernelFunc:Hz},qz=PO(hr,e=>Math.max(0,e)),Kz={kernelName:hr,backendName:"cpu",kernelFunc:qz},Xz=PO(gr,e=>Math.min(Math.max(0,e),6)),Yz={kernelName:gr,backendName:"cpu",kernelFunc:Xz};function Zz(e,t,n,r,a){if("linear"===n)return IO({inputs:{x:t},backend:e});if("relu"===n)return qz({inputs:{x:t},backend:e});if("elu"===n)return Bz({inputs:{x:t},backend:e});if("relu6"===n)return Xz({inputs:{x:t},backend:e});if("prelu"===n)return Hz({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Vz({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return pz({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Jz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Ia.sizeFromShape(a.shape),o=Ia.inferFromImplicitShape(s,i),l=Ia.sizeFromShape(o);Ia.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var Qz={kernelName:pr,backendName:"cpu",kernelFunc:Jz};function eP(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;dO([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ia.sizeFromShape(f),y=Ia.sizeFromShape(m),b=mh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ia.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,h,d]:[g,d,h],w=o?[y,c,p]:[y,p,c],v=Jz({inputs:{x:a},backend:n,attrs:{shape:x}}),k=Jz({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,y),C=n.data.get(v.dataId).values,_=n.data.get(k.dataId).values,E=Ia.computeStrides(v.shape),A=Ia.computeStrides(k.shape),[$,R,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,M,O]=o?[1,A[1],A[0]]:[A[1],1,A[0]],L=S*N,z=go([T,S,N],v.dtype),P=z.values,B=n.blockSize;for(let W=0;W<T;W++){let e=W%g,t=W%y;for(let n=0;n<S;n+=B){let r=Math.min(n+B,S);for(let a=0;a<N;a+=B){let s=Math.min(a+B,N);for(let i=0;i<I;i+=B){let o=Math.min(i+B,I);for(let l=n;l<r;l++)for(let n=a;n<s;n++){let r=0;for(let a=i;a<o;a++){let s=C[e*$+l*R+a*F],i=_[a*D+n*M+t*O];r+=s*i}P[W*L+(l*N+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(b,z.dtype,z.values)}var tP={kernelName:ft,backendName:"cpu",kernelFunc:eP};function nP(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=eP({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=DO({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=Zz(s,t,c,h,f),m.push(t),t=r);for(let g of m)s.disposeIntermediateTensorInfo(g);return t}var rP={kernelName:oa,backendName:"cpu",kernelFunc:nP},aP=PO(Ze,e=>Math.acos(e)),sP={kernelName:Ze,backendName:"cpu",kernelFunc:aP},iP=PO(Je,e=>Math.acosh(e)),oP={kernelName:Je,backendName:"cpu",kernelFunc:iP};function lP(e){let{inputs:t,backend:n}=e,r=t;dO(t,"addN");let a=r.map(e=>n.data.get(e.dataId).values),s=go(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var uP={kernelName:et,backendName:"cpu",kernelFunc:lP};function hP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dO(a,"all");let o=Ia.parseAxisParam(s,a.shape),l=o,u=jx.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=PL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=jx.getInnerMostAxes(l.length,a.shape.length)),jx.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=jx.computeOutAndReduceShapes(h.shape,l),c=Ia.sizeFromShape(d),f=Ia.makeZerosTypedArray(Ia.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=jx.expandShapeToKeepDim(p,o),t=Jz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var pP={kernelName:tt,backendName:"cpu",kernelFunc:hP};function dP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dO(a,"any");let o=Ia.parseAxisParam(s,a.shape),l=o,u=jx.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=PL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=jx.getInnerMostAxes(l.length,a.shape.length)),jx.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=jx.computeOutAndReduceShapes(h.shape,l),c=Ia.sizeFromShape(d),f=Ia.makeZerosTypedArray(Ia.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=jx.expandShapeToKeepDim(p,o),t=Jz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var cP={kernelName:nt,backendName:"cpu",kernelFunc:dP};function fP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dO(a,"argMax");let i=Ia.parseAxisParam(s,a.shape),o=jx.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=PL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=jx.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],jx.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=jx.computeOutAndReduceShapes(l.shape,i),d=Ia.sizeFromShape(h),c=Ia.makeZerosTypedArray(d,"int32"),f=Ia.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a>t&&(t=a,n=r)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}var mP={kernelName:rt,backendName:"cpu",kernelFunc:fP};function gP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dO(a,"argMin");let i=Ia.parseAxisParam(s,a.shape),o=jx.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=PL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=jx.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],jx.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=jx.computeOutAndReduceShapes(l.shape,i),d=Ia.sizeFromShape(h),c=Ia.makeZerosTypedArray(d,"int32"),f=Ia.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a<t&&(t=a,n=r)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}var yP={kernelName:at,backendName:"cpu",kernelFunc:gP},bP=PO(st,e=>Math.asin(e)),xP={kernelName:st,backendName:"cpu",kernelFunc:bP},wP=PO(it,e=>Math.asinh(e)),vP={kernelName:it,backendName:"cpu",kernelFunc:wP},kP=PO(ot,e=>Math.atan(e)),IP={kernelName:ot,backendName:"cpu",kernelFunc:kP},SP=xO((e,t)=>Math.atan2(e,t)),NP=AO(ut,SP),TP={kernelName:ut,backendName:"cpu",kernelFunc:NP},CP=PO(lt,e=>Math.atanh(e)),_P={kernelName:lt,backendName:"cpu",kernelFunc:CP};function EP(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=go(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let t=w*y,n=w*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){let w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,h+w),I=t+y*b;for(let t=0;t<a.outWidth;++t){let i=t*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,w=0;for(let t=v;t<k;t+=l){let a=n+t*r[1];for(let t=h;t<d;t+=u){let n=a+t*r[2],i=e[n+m];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}let S=I+t*x+m;g[S]="avg"===s?b/w:y}}}return m}function AP(e,t,n,r,a=!1,s=!1){let i=go(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=go(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){let n=t*o-c,y=n;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+n);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=u){let i=t-n;for(let n=c;n<x;n+=h){let o=n-p,l=m.get(g,t,n,e);l>w&&(w=l,v=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(v,g,t,o,e)}}return i}function $P(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=go(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let N=0;N<a.batchSize;++N){let t=N*v,n=N*r[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){let N=v*i-m,T=N;for(;T<0;)T+=u;let C=Math.min(a.inDepth,d+N),_=t+v*k;for(let t=0;t<a.outHeight;++t){let i=t*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),v=_+t*I;for(let t=0;t<a.outWidth;++t){let i=t*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=v+t*S,k=b,I=0,N=0;for(let t=T;t<C;t+=u){let a=n+t*r[1];for(let t=d;t<m;t+=h){let n=a+t*r[2];for(let t=o;t<c;t+=p){let a=n+t*r[3],i=e[a+x];if("max"===s&&i>k?k=i:"avg"===s&&(I+=i,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}let _=g+x;w[_]="avg"===s?I/Math.max(N,1):k}}}}return x}function RP(e,t){let n=go(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let v=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){let n=t-b;for(let r=d;r<v;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}function FP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dO(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ia.assert(jx.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h,p=jx.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ia.arraysEqual(p.inShape,p.outShape))h=IO({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ia.computeStrides(a.shape),r=EP(e,a.shape,a.dtype,t,p,"avg");h=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return h}var DP={kernelName:ht,backendName:"cpu",kernelFunc:FP};function MP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;dO(a,"avgPool3d");let h=jx.computePool3DInfo(a.shape,s,i,1,o,l,u),p=n.data.get(a.dataId).values,d=$P(p,a.shape,a.dtype,Ia.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var OP={kernelName:dt,backendName:"cpu",kernelFunc:MP};function LP(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;dO([a,s],"avgPool3DGrad");let h=jx.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=w-1-h.padInfo.front,S=k-1-h.padInfo.left,N=v-1-h.padInfo.top,T=go(s.shape,"float32"),C=1/(f*m*g),_=n.bufferSync(a);for(let E=0;E<h.batchSize;++E)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=t-I,s=n-N,i=r-S,o=0;for(let t=0;t<w;t+=y){let n=(a+t)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){let r=(s+t)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){let a=(i+t)/c;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;let s=_.get(E,n,r,a,e);o+=s}}}T.set(o*C,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var zP={kernelName:ct,backendName:"cpu",kernelFunc:LP};function PP(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;dO([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=jx.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,w=y-1-h.padInfo.top,v=go(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=go(a.shape,"float32",I);for(let N=0;N<h.batchSize;++N)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){let r=t-w,a=n-x,s=0;for(let t=0;t<y;t+=m){let n=(r+t)/p;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){let r=(a+t)/d;if(r<0||r>=h.outWidth||Math.floor(r)!==r)continue;let i=S.get(N,n,r,e);s+=i}}v.set(s*k,N,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var BP={kernelName:pt,backendName:"cpu",kernelFunc:PP};function WP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;Ia.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Ia.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Ia.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),dO([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,w=0,v=0,k=0,I=0;for(let S=0;S<h.length;++S)m[S]=f[w++]+(h[S]-p[v++])*c[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}var VP={kernelName:sn,backendName:"cpu",kernelFunc:WP};function UP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;dO([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=jx.getReshaped(a.shape,s,o),u=jx.getPermuted(l.length,s.length),h=jx.getReshapedPermuted(a.shape,s,o),p=jx.getSliceBeginCoords(i,s.length),d=jx.getSliceSize(h,i,s.length),c=Jz({inputs:{x:a},backend:n,attrs:{shape:l}}),f=PL({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Jz({inputs:{x:f},backend:n,attrs:{shape:h}}),g=fz({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var GP={kernelName:mt,backendName:"cpu",kernelFunc:UP};function HP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=OO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var jP={kernelName:gt,backendName:"cpu",kernelFunc:HP};function qP(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=jx.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var KP={kernelName:bt,backendName:"cpu",kernelFunc:qP},XP=PO(vt,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),YP={kernelName:vt,backendName:"cpu",kernelFunc:XP},ZP=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(Ia.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},JP={kernelName:It,backendName:"cpu",kernelFunc:ZP};function QP(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var eB={kernelName:cn,backendName:"cpu",kernelFunc:QP};function tB(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ia.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);jx.assertParamsConsistent(i,s);let o=jx.computeOutShape(t.map(e=>e.shape),s);if(0===Ia.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Ia.sizeFromShape(e.shape)>0);if(1===l.length)return IO({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map(e=>NO({inputs:{input:e},backend:n})),t=l.map(e=>QP({inputs:{input:e},backend:n})),r=tB({inputs:e,backend:n,attrs:{axis:s}}),a=tB({inputs:t,backend:n,attrs:{axis:s}}),i=wO({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map(e=>{let t=[-1,Ia.sizeFromShape(e.shape.slice(s))];return Jz({inputs:{x:e},backend:n,attrs:{shape:t}})}),h=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=jx.computeOutShape(u.map(e=>e.shape),1);let p=1===u[0].shape[0],d=GO(h,o,t[0].dtype,p),c=jx.computeOutShape(l.map(e=>e.shape),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var nB={kernelName:St,backendName:"cpu",kernelFunc:tB};function rB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;dO([a,s],"conv2d");let p=jx.convertConv2DDataFormat(l),d=jx.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new ps(d.outShape,a.dtype),v=Ia.computeStrides(a.shape),k=Ia.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],_=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],$=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let D=0;D<d.batchSize;++D){let e=D*I,t=D*C;for(let n=0;n<d.outHeight;++n){let r=t+n*_,a=n*d.strideHeight-b;for(let t=0;t<c;++t){let n=a+t*m;if(n<0||n>=d.inHeight)continue;let s=t*k[0],i=e+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=s+e*k[1],o=i+r*N,l=a;for(let e=0;e<d.inChannels;++e){let n=$[o+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*R[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}var aB={kernelName:Nt,backendName:"cpu",kernelFunc:rB};function sB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;dO([a,s],"conv2dBackpropFilter");let p=jx.convertConv2DDataFormat(l),d=jx.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new ps(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new ps(a.shape,a.dtype,v),S=new ps(s.shape,s.dtype,k);for(let N=0;N<m;++N){let e=Math.max(0,Math.ceil((w-N)/c)),t=Math.min(d.outHeight,(d.inHeight+w-N)/c);for(let n=0;n<g;++n){let r=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){let e=N+u*c-w;for(let t=r;t<a;++t){let r=n+t*f-x;o+=y?I.get(l,e,r,s)*S.get(l,u,t,i):I.get(l,s,e,r)*S.get(l,i,u,t)}}b.set(o,N,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var iB={kernelName:Tt,backendName:"cpu",kernelFunc:sB};function oB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;dO([a,s],"conv2dBackpropInput");let p=Ia.computeStrides(s.shape),d=Ia.computeStrides(a.shape),c=jx.convertConv2DDataFormat(u),f=jx.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new ps(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:_,outHeight:E,outWidth:A,strideHeight:$,strideWidth:R}=f;c=f.dataFormat;let F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<N;++e)for(let t=0;t<T;++t){let n=t-F,r=Math.max(0,Math.ceil(n/$)),a=Math.min(E,(I+n)/$);for(let s=0;s<C;++s){let i=s-D,o=Math.max(0,Math.ceil(i/R)),l=Math.min(A,(S+i)/R),u=0;for(let t=r;t<a;++t){let r=t*$-n;for(let n=o;n<l;++n){let a=n*R-i,s=B*G+W*t+V*n,o=x*(I-1-r)+w*(S-1-a)+v*e;for(let e=0;e<_;++e){let t=y[s+U*e],n=b[o+e];u+=t*n}}}let h=O*G+L*t+z*s+P*e;g[h]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var lB={kernelName:Ct,backendName:"cpu",kernelFunc:oB};function uB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;dO([a,s],"conv3d");let u=jx.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new ps(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=Ia.computeStrides(a.shape),N=Ia.computeStrides(s.shape);for(let T=0;T<u.batchSize;++T){let e=T*S[0],t=T*w.strides[0];for(let n=0;n<u.outDepth;++n){let r=t+n*w.strides[1],a=n*u.strideDepth-y;for(let t=0;t<h;++t){let n=a+t*c;if(n<0||n>=u.inDepth)continue;let s=t*N[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var hB={kernelName:_t,backendName:"cpu",kernelFunc:uB};function pB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;dO([a,s],"conv3dBackpropFilterV2");let u=Ia.computeStrides(a.shape),h=Ia.computeStrides(s.shape),p=jx.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ps(p.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,_]=h,E=n.data.get(a.dataId).values,[A,$,R,F]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let L=0;L<m;++L){let e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(p.outDepth,(p.inDepth+D-L)/d),n=L*w;for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((O-r)/c)),s=Math.min(p.outHeight,(p.inHeight+O-r)/c),i=r*v+n;for(let n=0;n<y;++n){let o=Math.max(0,Math.ceil((M-n)/f)),l=Math.min(p.outWidth,(p.inWidth+M-n)/f),u=n*k+i;for(let i=0;i<p.inChannels;++i){let h=i*I+u;for(let u=0;u<p.outChannels;++u){let m=0;for(let h=0;h<p.batchSize;++h){let p=h*A,g=h*N;for(let h=e;h<t;++h){let e=(L+h*d-D)*$+p,t=h*T+g;for(let h=a;h<s;++h){let a=(r+h*c-O)*R+e,s=h*C+t;for(let e=o;e<l;++e){let t=(n+e*f-M)*F+a,r=e*_+s;m+=E[t+i]*S[r+u]}}}}x[h+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var dB={kernelName:Et,backendName:"cpu",kernelFunc:pB};function cB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;dO([a],"conv3dBackpropInputV2");let u=Ia.computeStrides(a.shape),h=Ia.computeStrides(s.shape),p=jx.computeConv3DInfo(l,s.shape,o,1,i),d=new ps(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(s.dataId).values,[S,N,T,C]=h,{batchSize:_,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:R,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=A-1-p.padInfo.top,H=$-1-p.padInfo.left;for(let j=0;j<_;++j)for(let e=0;e<R;++e)for(let t=0;t<F;++t){let n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(L,(E+n)/B);for(let s=0;s<D;++s){let i=s-G,o=Math.max(0,Math.ceil(i/W)),l=Math.min(z,(A+i)/W);for(let u=0;u<M;++u){let h=u-H,p=Math.max(0,Math.ceil(h/V)),d=Math.min(P,($+h)/V),_=0;for(let t=r;t<a;++t){let r=t*B-n;for(let n=o;n<l;++n){let a=n*W-i;for(let s=p;s<d;++s){let i=s*V-h,o=x*j+w*t+v*n+k*s,l=S*(E-1-r)+N*(A-1-a)+T*($-1-i)+C*e;for(let e=0;e<O;++e){let t=b[o+e],n=I[l+e];_+=t*n}}}}c[f*j+m*t+g*s+y*u+e]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var fB={kernelName:At,backendName:"cpu",kernelFunc:cB},mB=PO($t,e=>Math.cos(e)),gB={kernelName:$t,backendName:"cpu",kernelFunc:mB},yB=PO(Rt,e=>Math.cosh(e)),bB={kernelName:Rt,backendName:"cpu",kernelFunc:yB};function xB(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=go([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=Ia.computeStrides(a.shape),k=Ia.computeStrides(y.shape);for(let I=0;I<f;I++){let e=4*I,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],s=x[I];if(s>=h)continue;let i=m>1?(r-t)*(p-1)/(m-1):0,o=g>1?(a-n)*(d-1)/(g-1):0;for(let h=0;h<m;h++){let e=m>1?t*(p-1)+h*i:.5*(t+r)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<c;e++){let n=e+t*k[2]+h*k[1]+I*k[0];y.values[n]=u}else if("bilinear"===l){let t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){let l=g>1?n*(d-1)+e*o:.5*(n+a)*(d-1);if(l<0||l>d-1){for(let t=0;t<c;t++){let n=t+e*k[2]+h*k[1]+I*k[0];y.values[n]=u}continue}let p=Math.floor(l),f=Math.ceil(l),m=l-p;for(let n=0;n<c;n++){let a=n+p*v[2]+t*v[1]+s*v[0],o=w[a];a=n+f*v[2]+t*v[1]+s*v[0];let l=w[a];a=n+p*v[2]+r*v[1]+s*v[0];let u=w[a];a=n+f*v[2]+r*v[1]+s*v[0];let d=w[a],c=o+(l-o)*m,g=u+(d-u)*m;a=n+e*k[2]+h*k[1]+I*k[0],y.values[a]=c+(g-c)*i}}}else for(let t=0;t<g;++t){let r=g>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(r<0||r>d-1){for(let e=0;e<c;e++){let n=e+t*k[2]+h*k[1]+I*k[0];y.values[n]=u}continue}let i=Math.round(r),l=Math.round(e);for(let e=0;e<c;e++){let n=e+i*v[2]+l*v[1]+s*v[0],r=e+t*k[2]+h*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var wB={kernelName:Mt,backendName:"cpu",kernelFunc:xB};function vB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;dO(a,"cumprod");let l=jx.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=PL({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=jx.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Cs(u.dtype,"int32"),d=Ia.makeOnesTypedArray(Ia.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?1:c[t];else{let n=m(y,e-1);d[t]=i?c[n]*d[n]:c[t]*d[n]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=jx.getUndoAxesPermutation(l),t=PL({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var kB={kernelName:Ft,backendName:"cpu",kernelFunc:vB};function IB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;dO(a,"cumsum");let l=jx.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=PL({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=jx.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Cs(u.dtype,"int32"),d=Ia.makeZerosTypedArray(Ia.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?0:c[t];else{let n=m(y,e-1);d[t]=i?c[n]+d[n]:c[t]+d[n]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=jx.getUndoAxesPermutation(l),t=PL({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var SB={kernelName:Dt,backendName:"cpu",kernelFunc:IB};function NB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=OO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=LO(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var TB={kernelName:Ot,backendName:"cpu",kernelFunc:NB};function CB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Ia.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i);let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let y=0;y<o;++y)for(let e=0;e<p;++e){let t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){let r=Math.floor(e/s),a=e%s,i=(n*s+a)*c;for(let e=0;e<c;++e){let n=e+i+h*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}var _B={kernelName:Lt,backendName:"cpu",kernelFunc:CB};function EB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;dO([a,s],"depthwiseConv2DNative");let h=Ia.computeStrides(a.shape),p=Ia.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),Ia.assert(jx.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=jx.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,v=c.outChannels/c.inChannels,k=new ps(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let T=0;T<c.batchSize;++T){let e=T*h[0],t=T*k.strides[0];for(let n=0;n<c.outHeight;++n){let r=t+n*k.strides[1],a=n*c.strideHeight-w;for(let t=0;t<f;++t){let n=a+t*g;if(n<0||n>=c.inHeight)continue;let s=t*p[0],i=e+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var AB={kernelName:zt,backendName:"cpu",kernelFunc:EB};function $B(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;dO([a,s],"depthwiseConv2dNativeBackpropFilter");let p=jx.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ps(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,v=new ps(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new ps(s.shape,s.dtype,k);for(let S=0;S<f;++S){let e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(p.outHeight,(p.inHeight+b-S)/d);for(let n=0;n<m;++n){let r=Math.max(0,Math.ceil((y-n)/c)),a=Math.min(p.outWidth,(p.inWidth+y-n)/c);for(let s=0;s<p.outChannels;++s){let i=Math.trunc(s/x),o=s%x,l=0;for(let u=0;u<p.batchSize;++u)for(let o=e;o<t;++o){let e=S+o*d-b;for(let t=r;t<a;++t){let r=n+t*c-y;l+=v.get(u,e,r,i)*I.get(u,o,t,s)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var RB={kernelName:Pt,backendName:"cpu",kernelFunc:$B};function FB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;dO([a,s],"depthwiseConv2DNativeBackpropInput");let p=Ia.computeStrides(a.shape),d=Ia.computeStrides(s.shape),c=jx.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new ps(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:C,filterHeight:_,filterWidth:E,inChannels:A,inHeight:$,inWidth:R,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=_-1-c.padInfo.top,P=E-1-c.padInfo.left,B=F/A;for(let W=0;W<C;++W)for(let e=0;e<A;++e)for(let t=0;t<$;++t){let n=t-z,r=Math.max(0,Math.ceil(n/O)),a=Math.min(D,(_+n)/O);for(let s=0;s<R;++s){let i=s-P,o=Math.max(0,Math.ceil(i/L)),l=Math.min(M,(E+i)/L),u=0;for(let t=r;t<a;++t){let r=t*O-n;for(let n=o;n<l;++n){let a=n*L-i,s=w*W+v*t+k*n,o=S*(_-1-r)+N*(E-1-a)+T*e;for(let t=0;t<B;++t){let n=e*B+t,r=x[s+n],a=I[o+t];u+=r*a}}}m[g*W+y*t+b*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var DB={kernelName:Bt,backendName:"cpu",kernelFunc:FB};function MB(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Ia.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=go([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var OB={kernelName:Wt,backendName:"cpu",kernelFunc:MB},LB={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=jx.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=Ia.sizeFromShape(T),_=T.length,E=Ia.getArrayFromDType(r.dtype,C);for(let A=0;A<c;++A)for(let e=0;e<y;++e){let t=e*w-x.top;for(let n=0;n<b;++n){let s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){let l=s+t*N;if(l>=0&&l<m){let s=Ia.locToIndex([A,n,l,i],h,Ia.computeStrides(r.shape)),c=Ia.locToIndex([e,t,i],d,Ia.computeStrides(a.shape)),f=u[s]+p[c];f>o&&(o=f)}}}let l=Ia.locToIndex([A,e,n,i],_,Ia.computeStrides(T));E[l]=o}}}return{dataId:l.write(Ia.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},zB={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Ia.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Ia.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=jx.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ia.assert(s.rank===N.length,()=>`Error in ${Gt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=Ia.toNestedArray(N,u.data.get(s.dataId).values),C=Ia.makeZerosNestedTypedArray(a.shape,a.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=h[_][n][l][a]+p[e][t][a];r>s&&(s=r,i=e,o=t)}}}C[i][o][a]+=T[_][e][n][a]}}}return{dataId:u.write(Ia.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},PB={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Ia.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Ia.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=jx.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ia.assert(s.rank===N.length,()=>`Error in ${Ut}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=Ia.toNestedArray(N,u.data.get(s.dataId).values),C=Ia.makeZerosNestedTypedArray(r.shape,r.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=h[_][n][l][a]+p[e][t][a];r>s&&(s=r,i=n,o=l)}}}C[_][i][o][a]+=T[_][e][n][a]}}}return{dataId:u.write(Ia.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function BB(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;dO(s,"sum"),t="bool"===s.dtype?_O({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):IO({inputs:{x:s},backend:r});let l=t.shape.length,u=Ia.parseAxisParam(i,t.shape),h=jx.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=PL({inputs:{x:t},backend:r,attrs:{perm:h}}),p=jx.getInnerMostAxes(p.length,l)),jx.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=jx.computeOutAndReduceShapes(d.shape,p),m=jx.upcastType(d.dtype,"int32"),g=kO(r,c,m),y=Ia.sizeFromShape(f),b=r.data.get(g.dataId).values,x=r.data.get(d.dataId).values;for(let w=0;w<b.length;++w){let e=w*y,t=0;for(let n=0;n<y;++n)t+=x[e+n];b[w]=t}if(o){let e=jx.expandShapeToKeepDim(g.shape,u),t=g;g=Jz({inputs:{x:g},backend:r,attrs:{shape:e}}),r.disposeIntermediateTensorInfo(t)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),g}var WB={kernelName:$r,backendName:"cpu",kernelFunc:BB};function VB(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=jx.decodeEinsumEquation(a,s.length);jx.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=jx.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let e of h[m]){let t,{permutationIndices:r,expandDims:a}=jx.getEinsumPermutation(c,l[e]);jx.isIdentityPermutation(r)?t=s[e]:(t=PL({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ia.arraysEqual(t.shape,i)||(t=Jz({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=AL({inputs:{a:t,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=BB({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var UB={kernelName:jt,backendName:"cpu",kernelFunc:VB};function GB(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;dO([r,a],"eluGrad");let s=new Float32Array(Ia.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let e=i[l];s[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}var HB={kernelName:Kt,backendName:"cpu",kernelFunc:GB},jB=jx.ERF_P,qB=jx.ERF_A1,KB=jx.ERF_A2,XB=jx.ERF_A3,YB=jx.ERF_A4,ZB=jx.ERF_A5,JB=PO(Xt,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+jB*n);return t*(1-((((ZB*r+YB)*r+XB)*r+KB)*r+qB)*r*Math.exp(-n*n))}),QB={kernelName:Xt,backendName:"cpu",kernelFunc:JB};function eW(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ia.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Jz({inputs:{x:a},backend:n,attrs:{shape:o}})}var tW={kernelName:Jt,backendName:"cpu",kernelFunc:eW},nW=xO((e,t)=>e/t),rW=AO(Ht,nW),aW={kernelName:Ht,backendName:"cpu",kernelFunc:rW};function sW(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=Ia.sizeFromShape(u),p=Ia.getTypedArrayFromDType("float32",h),d=Ia.getTypedArrayFromDType("float32",h);for(let g=0;g<a;g++){let e=fz({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=fz({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=wO({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=iW(a,t,n),h=jx.mergeRealAndImagArrays(i,u);for(let t=0;t<s;t++){let e=jx.getComplexWithIndex(h,t);p[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=wO({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function iW(e,t,n){let r=Ia.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(oW(r)){let a=lW(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Ia.createScalarValue(r,"float32")),i=IO({inputs:{x:s},backend:n}),l=aW.kernelFunc({inputs:{a:e,b:s},backend:n}),u=aW.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=jx.mergeRealAndImagArrays(s,i),n=uW(e,r,t);return jx.splitRealAndImagArrays(n)}}function oW(e){return 0===(e&e-1)}function lW(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=jx.mergeRealAndImagArrays(e,t),i=n/2,o=jx.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=wO({inputs:{real:p,imag:d},backend:a}),f=jx.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=wO({inputs:{real:b,imag:x},backend:a}),v=lW(l,u,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=wO({inputs:{real:N,imag:T},backend:a}),_=lW(m,g,i,r,a),E=_.real,A=_.imag,$=[E.length],R=a.makeTensorInfo($,"float32",E),F=a.makeTensorInfo($,"float32",A),D=wO({inputs:{real:R,imag:F},backend:a}),M=jx.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=wO({inputs:{real:L,imag:z},backend:a}),B=AL({inputs:{a:P,b:D},backend:a}),W=DO({inputs:{a:C,b:B},backend:a}),V=Fz({inputs:{a:C,b:B},backend:a}),U=NO({inputs:{input:W},backend:a}),G=NO({inputs:{input:V},backend:a}),H=QP({inputs:{input:W},backend:a}),j=QP({inputs:{input:V},backend:a}),q=tB({inputs:[U,G],backend:a,attrs:{axis:0}}),K=tB({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}function uW(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=jx.exponent(a*r,t,n),l=jx.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),jx.assignToTypedArray(r,s,i,a)}return r}function hW(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ia.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=Jz({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=sW(o,!1,n),u=Jz({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var pW={kernelName:en,backendName:"cpu",kernelFunc:hW};function dW(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Ia.inferDtype(a),o=Ia.getArrayFromDType(i,Ia.sizeFromShape(r));return fW(o,a,i),t.makeTensorInfo(r,i,o)}var cW={kernelName:tn,backendName:"cpu",kernelFunc:dW};function fW(e,t,n){e.fill(t)}var mW={kernelName:nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=Ia.getTypedArrayFromDType(r.dtype,Ia.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let p=0;p<i;p++){let e=p*l*o*u;for(let t=0;t<o;t++){let n=t*(l*u);for(let t=0;t<l;t++){let r=t*u;for(let a=0;a<u;a++){let i=Math.round(l-t-1),o=e+n+r+a,p=h[o];if(i>=0&&i<l){let t=i*u,r=e+n+t+a;p=h[r]}s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},gW=xO((e,t)=>Math.floor(e/t)),yW=AO(an,gW,null,"int32"),bW={kernelName:an,backendName:"cpu",kernelFunc:yW};function xW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=rB({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=Jz({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=DO({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=DO({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=Jz({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Zz(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=Zz(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}var wW={kernelName:la,backendName:"cpu",kernelFunc:xW};function vW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=EB({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=DO({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=Zz(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}var kW={kernelName:ua,backendName:"cpu",kernelFunc:vW};function IW(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Ia.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=jx.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=n.data.get(a.dataId).values,c=n.bufferSync(r),f=rL(d,c,r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,f.values)}var SW={kernelName:ln,backendName:"cpu",kernelFunc:IW};function NW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;dO([a,s],"gatherV2");let l=Ia.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let w=0;w<u.length;++w){let e=u[w];Ia.assert(e<=h-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`)}let p=o;null==o&&(p=0);let d=Ia.sizeFromShape(s.shape),c=jx.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=Jz({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Jz({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=aL(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var TW={kernelName:on,backendName:"cpu",kernelFunc:NW};function CW(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ia.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=Jz({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=sW(o,!0,n),u=Jz({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var _W={kernelName:dn,backendName:"cpu",kernelFunc:CW},EW=PO(fn,e=>Number.isFinite(e)?1:0,"bool"),AW={kernelName:fn,backendName:"cpu",kernelFunc:EW},$W=PO(mn,e=>Math.abs(e)===1/0?1:0,"bool"),RW={kernelName:mn,backendName:"cpu",kernelFunc:$W},FW=PO(gn,e=>Number.isNaN(e)?1:0,"bool"),DW={kernelName:gn,backendName:"cpu",kernelFunc:FW};function MW(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=yL(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var OW={kernelName:wn,backendName:"cpu",kernelFunc:MW},LW=PO(kn,e=>Math.log1p(e)),zW={kernelName:kn,backendName:"cpu",kernelFunc:LW},PW=xO((e,t)=>e&&t),BW=AO(In,PW,null,"bool"),WW={kernelName:In,backendName:"cpu",kernelFunc:BW},VW=PO(Sn,e=>e?0:1,"bool"),UW={kernelName:Sn,backendName:"cpu",kernelFunc:VW},GW=xO((e,t)=>e||t),HW=AO(Nn,GW,null,"bool"),jW={kernelName:Nn,backendName:"cpu",kernelFunc:HW};function qW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;dO(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=Ia.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let m=0;m<d;m++){let e=f(m),t=p[m]*Math.pow(i+o*e,-l);c[m]=t}return n.makeTensorInfo(a.shape,a.dtype,c)}var KW={kernelName:En,backendName:"cpu",kernelFunc:qW};function XW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;dO(i,"LRNGrad");let p=Ia.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1),r=0;for(let a=t;a<n;a++)r+=Math.pow(f[a],2);r=u*r+l;for(let a=t;a<n;a++){let e=-2*u*h*f[a]*m[b]/r;b===a&&(e+=Math.pow(r,-h)),e*=c[b],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}var YW={kernelName:An,backendName:"cpu",kernelFunc:XW};function ZW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=Ia.parseAxisParam(s,l),p=h,d=jx.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=zL(c,l,a.dtype,d,e),p=jx.getInnerMostAxes(p.length,u),l=e}dO(a,"max"),jx.assertAxesAreInnerMostDims("max",p,u);let[f,m]=jx.computeOutAndReduceShapes(l,p),g=Ia.sizeFromShape(m),y=vL(c,g,f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=jx.expandShapeToKeepDim(f,h)),{dataId:b,shape:x,dtype:a.dtype}}var JW={kernelName:$n,backendName:"cpu",kernelFunc:ZW};function QW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dO(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ia.assert(jx.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h,p=jx.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ia.arraysEqual(p.inShape,p.outShape))h=IO({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ia.computeStrides(a.shape),r=EP(e,a.shape,a.dtype,t,p,"max");h=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return h}var eV={kernelName:Fn,backendName:"cpu",kernelFunc:QW};function tV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;dO(a,"maxPool3d");let h=jx.computePool3DInfo(a.shape,s,i,1,o,l,u),p=n.data.get(a.dataId).values,d=$P(p,a.shape,a.dtype,Ia.computeStrides(a.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var nV={kernelName:Mn,backendName:"cpu",kernelFunc:tV};function rV(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;dO([a,s],"maxPool3DGrad");let h=jx.computePool3DInfo(s.shape,i,o,1,l,u),p=n.bufferSync(s),d=RP(p,h),c=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,w=h.effectiveFilterHeight,v=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=v-1-h.padInfo.left,S=w-1-h.padInfo.top,N=go(s.shape,"float32"),T=n.bufferSync(a);for(let C=0;C<h.batchSize;++C)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=t-k,s=n-S,i=r-I,o=0;for(let t=0;t<x;t+=g){let n=(a+t)/c;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){let a=(s+r)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=b){let l=(i+s)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;let u=x*w*v-1-d.get(C,n,a,l,e),p=t*w*v+r*v+s,c=u===p?1:0;if(0===c)continue;let f=T.get(C,n,a,l,e);o+=f*c}}}N.set(o,C,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var aV={kernelName:On,backendName:"cpu",kernelFunc:rV};function sV(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;dO([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=jx.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=go(d.outShape,o.dtype,AP(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=go(o.shape,"float32"),S=n.data.get(a.dataId).values,N=go(a.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){let r=t-k,a=n-v,s=0;for(let t=0;t<x;t+=y){let n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){let i=(a+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;let o=x*w-1-f.get(T,n,i,e),l=t*w+r,u=o===l?1:0;if(0===u)continue;let h=N.get(T,n,i,e);s+=h*u}}I.set(s,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var iV={kernelName:Dn,backendName:"cpu",kernelFunc:sV};function oV(e,t,n,r,a){let s=Ia.computeStrides(t),i=EP(e,t,n,s,a,"max"),o=AP(e,t,n,a,!0,r);return[i.values,o.values]}var lV={kernelName:Ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;dO(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=jx.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=oV(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};function uV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Ia.parseAxisParam(s,a.shape),l=jx.computeOutAndReduceShapes(a.shape,o)[1],u=Ia.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=_O({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=rW({inputs:{a:d,b:p},backend:n});h.push(c);let f=BB({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var hV={kernelName:zn,backendName:"cpu",kernelFunc:uV};function pV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dO(a,"min");let o=Ia.parseAxisParam(s,a.shape),l=o,u=jx.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=PL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=jx.getInnerMostAxes(l.length,a.shape.length)),jx.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=jx.computeOutAndReduceShapes(h.shape,l),c=Ia.sizeFromShape(d),f=Ia.makeZerosTypedArray(Ia.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=jx.expandShapeToKeepDim(p,o),t=Jz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var dV={kernelName:Pn,backendName:"cpu",kernelFunc:pV};function cV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;dO(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=Ia.computeStrides(a.shape),f=Ia.sizeFromShape(o),m=o.length,g=Ia.computeStrides(o),y=Ia.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=Ia.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-h:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+h);e=e.map((e,t)=>e-l[t]);let t=Ia.locToIndex(e,d,c);y[b]=p[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var fV={kernelName:Wn,backendName:"cpu",kernelFunc:cV},mV=xO((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),gV=AO(Vn,mV),yV={kernelName:Vn,backendName:"cpu",kernelFunc:gV},bV=w(R());function xV(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=Ia.parseAxisParam([o],a.shape),u=ZW({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=jx.expandShapeToKeepDim(u.shape,l),p=Jz({inputs:{x:u},backend:n,attrs:{shape:h}}),d=Fz({inputs:{a:a,b:p},backend:n}),c=XO({inputs:{x:d},backend:n}),f=BB({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=Jz({inputs:{x:f},backend:n,attrs:{shape:h}}),g=rW({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var wV={kernelName:Dr,backendName:"cpu",kernelFunc:xV};function vV(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;dO(a,"multinomial");let l=o?a:xV({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=Ia.makeZerosTypedArray(Ia.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let e=f*h,t=new Float32Array(h-1);t[0]=p[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+p[e+a];let n=bV.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){let e=n();c[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){c[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var kV={kernelName:Un,backendName:"cpu",kernelFunc:vV},IV=Jw.nonMaxSuppressionV3Impl;function SV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;dO(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=IV(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var NV={kernelName:qn,backendName:"cpu",kernelFunc:SV},TV=Jw.nonMaxSuppressionV4Impl;function CV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;dO(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=TV(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var _V={kernelName:Kn,backendName:"cpu",kernelFunc:CV},EV=Jw.nonMaxSuppressionV5Impl;function AV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;dO(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=EV(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var $V={kernelName:Xn,backendName:"cpu",kernelFunc:AV};function RV(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;dO(a,"oneHot");let u=Ia.sizeFromShape(a.shape),h=new Float32Array(u*i);h.fill(l);let p=n.data.get(a.dataId).values;for(let d=0;d<u;++d)p[d]>=0&&p[d]<i&&(h[d*i+p[d]]=o);return n.makeTensorInfo([...a.shape,i],s,h)}var FV={kernelName:Zn,backendName:"cpu",kernelFunc:RV};function DV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=NO({inputs:{input:r},backend:n}),t=DV({inputs:{x:e},backend:n}),a=QP({inputs:{input:r},backend:n}),s=DV({inputs:{x:a},backend:n}),i=wO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return dW({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var MV={kernelName:ra,backendName:"cpu",kernelFunc:DV};function OV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let e=NO({inputs:{input:r},backend:n}),t=OV({inputs:{x:e},backend:n}),a=QP({inputs:{input:r},backend:n}),s=DV({inputs:{x:a},backend:n}),i=wO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return dW({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var LV={kernelName:Yn,backendName:"cpu",kernelFunc:OV};function zV(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return eW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ia.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ia.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=eW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=tB({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}var PV={kernelName:Jn,backendName:"cpu",kernelFunc:zV};function BV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;dO(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=n.data.get(a.dataId).values,h=Ia.sizeFromShape(a.shape),p=a.shape.length,d=Ia.computeStrides(a.shape),c=Ia.sizeFromShape(o),f=o.length,m=Ia.computeStrides(o),g=Ia.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let y=0;y<h;y++){let e=Ia.indexToLoc(y,p,d).map((e,t)=>e+l[t]),t=Ia.locToIndex(e,f,m);g[t]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var WV={kernelName:Qn,backendName:"cpu",kernelFunc:BV},VV=xO((e,t)=>Math.pow(e,t)),UV=AO(tr,VV),GV={kernelName:tr,backendName:"cpu",kernelFunc:UV};function HV(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.data.get(e.dataId).values),u=a.map(e=>e.shape),h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,[d,c,f]=ZL(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var jV={kernelName:ar,backendName:"cpu",kernelFunc:HV};function qV(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=QL(i,r.shape,r.dtype,o,a.shape,l,s.shape),p=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([h.length],r.dtype,h);return[p,d]}var KV={kernelName:sr,backendName:"cpu",kernelFunc:qV};function XV(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),c=o.map(e=>e.shape),[f,m]=az(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var YV={kernelName:ir,backendName:"cpu",kernelFunc:XV};function ZV(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=sz(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var JV={kernelName:or,backendName:"cpu",kernelFunc:ZV},QV=PO(ur,e=>1/e),eU={kernelName:ur,backendName:"cpu",kernelFunc:QV};function tU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dO(a,"resizeBilinear");let l=Ia.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Ia.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<p;k++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),s=k*l[0]+n*l[1],o=k*l[0]+a*l[1];for(let e=0;e<h;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),a=t-n,u=Math.min(c-1,Math.ceil(t)),h=s+n*l[2],p=o+n*l[2],d=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=m[d+e],i=m[y+e],o=t+(s-t)*a,l=n+(i-n)*a,u=o+(l-o)*r;g[x++]=u}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}var nU={kernelName:fr,backendName:"cpu",kernelFunc:tU};function rU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dO([s,a],"resizeBilinearGrad");let o=Ia.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let v=0;v<l;v++){let e=v*o[0];for(let t=0;t<d;t++){let n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=e+r*o[1],i=e+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[w++];f[c+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}var aU={kernelName:mr,backendName:"cpu",kernelFunc:rU};function sU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dO(a,"resizeNearestNeighbor");let l=Ia.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],w=y[1]/b[1],v=0;for(let k=0;k<p;k++){let e=k*l[0];for(let t=0;t<u;t++){let n=i?x*(t+.5):x*t,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=e+r*l[1];for(let e=0;e<h;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}var iU={kernelName:dr,backendName:"cpu",kernelFunc:sU};function oU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dO([s,a],"resizeNearestNeighborGrad");let o=Ia.computeStrides(a.shape),l=Ia.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<u;N++){let e=N*o[0];for(let t=0;t<h;t++){let n=e+t*o[1],r=Math.floor(t*v),a=Math.floor(r-I/2);for(let s=0;s<p;s++){let r=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){let u=r+a;if(u<0||u>=c)continue;let d=e+u*l[1],m=u*x,b=Math.min(h-1,i?Math.round(m):Math.floor(m));if(t===b)for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let r=d+t*l[2],a=t*w,u=Math.min(p-1,i?Math.round(a):Math.floor(a));s===u&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}var lU={kernelName:cr,backendName:"cpu",kernelFunc:oU};function uU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;dO(a,"reverse");let i=a.shape.length,o=Ia.parseAxisParam(s,a.shape);if(0===i)return IO({inputs:{x:a},backend:n});let l=new ps(a.shape,a.dtype),u=n.bufferSync(a);for(let h=0;h<l.size;h++){let e=l.indexToLoc(h),t=e.slice();o.forEach(e=>t[e]=a.shape[e]-1-t[e]),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var hU={kernelName:yr,backendName:"cpu",kernelFunc:uU},pU={kernelName:ia,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=Ia.getTypedArrayFromDType(r.dtype,Ia.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=jx.getImageCenter(i,h,p),m=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let e=x*p*h*d;for(let t=0;t<h;t++){let n=t*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,t,r,i],x=o[2],w=o[1],v=(x-c)*y-(w-f)*g,k=(x-c)*g+(w-f)*y;v=Math.round(v+c),k=Math.round(k+f);let I=s;if("number"!=typeof s&&(I=3===i?m:s[i]),v>=0&&v<p&&k>=0&&k<h){let t=k*(p*d),n=v*d,r=e+t+n+i;I=b[r]}let S=e+n+a+i;l[S]=I}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dU=PO(br,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),cU={kernelName:br,backendName:"cpu",kernelFunc:dU};function fU(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=jx.calculateShapes(s,a,i),d=!0,c=n.bufferSync(a),f=n.bufferSync(s),m=uz(c,f,i,p,u,l,o,h,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var mU={kernelName:wr,backendName:"cpu",kernelFunc:fU};function gU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function yU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function bU(e,t,n,r,a,s){let i=Ia.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?gU(n,t[e+l]):yU(n,t[e+l])}return i}function xU(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=bU(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var wU={kernelName:vr,backendName:"cpu",kernelFunc:xU};function vU(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;dO([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=Cs(a.dtype,s.dtype),p=Ia.makeZerosTypedArray(Ia.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:Ia.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<c;e++)1===o[f]?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(a.shape,h,p)}var kU={kernelName:kr,backendName:"cpu",kernelFunc:vU},IU=jx.SELU_SCALEALPHA,SU=jx.SELU_SCALE,NU=PO(Ir,e=>e>=0?SU*e:IU*(Math.exp(e)-1)),TU={kernelName:Ir,backendName:"cpu",kernelFunc:NU},CU=PO(Cr,e=>e<0?-1:e>0?1:0),_U={kernelName:Cr,backendName:"cpu",kernelFunc:CU},EU=PO(Nr,e=>Math.sin(e)),AU={kernelName:Nr,backendName:"cpu",kernelFunc:EU},$U=PO(Tr,e=>Math.sinh(e)),RU={kernelName:Tr,backendName:"cpu",kernelFunc:$U},FU=1.1920928955078125e-7,DU=Math.log(FU)+2,MU=PO(Er,e=>{let t,n=e>-DU,r=e<DU,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t}),OU={kernelName:Er,backendName:"cpu",kernelFunc:MU};function LU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;dO([a],"spaceToBatchND");let o=Ia.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=WV.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=jx.getReshaped(u.shape,s,o,!1),p=jx.getPermuted(h.length,s.length,!1),d=jx.getReshapedPermuted(u.shape,s,o,!1),c=Jz({inputs:{x:u},backend:n,attrs:{shape:h}}),f=PL({inputs:{x:c},backend:n,attrs:{perm:p}}),m=Jz({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}var zU={kernelName:Rr,backendName:"cpu",kernelFunc:LU};function PU(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=gz(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var BU={kernelName:Mr,backendName:"cpu",kernelFunc:PU};function WU(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=yz(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var VU={kernelName:Or,backendName:"cpu",kernelFunc:WU};function UU(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+s.shape);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=bz(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}var GU={kernelName:Lr,backendName:"cpu",kernelFunc:UU};function HU(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+s.shape);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=bz(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}var jU={kernelName:zr,backendName:"cpu",kernelFunc:HU};function qU(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=jx.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":{let e=r.bufferSync(i),n=Boolean(r.data.get(o.dataId).values[0]);t=uz(m,e,l,c,p,h,u,d,n,f);break}case"float32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=uz(m,e,l,c,p,h,u,d,n,f);break}case"int32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=uz(m,e,l,c,p,h,u,d,n,f);break}case"string":{let e=r.bufferSync(i),n=Ia.decodeString(r.data.get(o.dataId).values[0]);t=uz(m,e,l,c,p,h,u,d,n,f);break}default:throw new Error("Unsupported type "+i.dtype)}return r.makeTensorInfo(l,t.dtype,t.values)}var KU={kernelName:Pr,backendName:"cpu",kernelFunc:qU};function XU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ia.parseAxisParam(i,a.shape)[0],l=jx.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let r=fz({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}var YU={kernelName:Fr,backendName:"cpu",kernelFunc:XU},ZU={kernelName:Wr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;dO(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},JU=PO(aa,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),QU={kernelName:aa,backendName:"cpu",kernelFunc:JU};function eG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;dO(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=xx.sliceInfo(a.shape,s,i,o,l,u,h,p,d);if(g)c=Jz({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){Ia.assert(a.shape.length>=1,()=>"Input must have rank at least 1, got: "+a.shape.length);let e=xx.computeOutShape(x,w,v),t=fz({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=Jz({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=n.bufferSync(a),t=Nz(f,e,v,x);c=n.makeTensorInfo(m,t.dtype,t.values)}return c}var tG={kernelName:Vr,backendName:"cpu",kernelFunc:eG};function nG(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.data.get(h.dataId).values,c=n.data.get(p.dataId).values,[f,m]=Cz(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var rG={kernelName:Ur,backendName:"cpu",kernelFunc:nG};function aG(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,h,p]=Ez(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var sG={kernelName:Gr,backendName:"cpu",kernelFunc:aG};function iG(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=Az(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var oG={kernelName:Hr,backendName:"cpu",kernelFunc:iG},lG=PO(qr,e=>Math.tan(e)),uG={kernelName:qr,backendName:"cpu",kernelFunc:lG},hG=PO(Kr,e=>Math.tanh(e)),pG={kernelName:Kr,backendName:"cpu",kernelFunc:hG};function dG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;dO(a,"tile");let i=Mz(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var cG={kernelName:Xr,backendName:"cpu",kernelFunc:dG};function fG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;dO(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=zz(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var mG={kernelName:Yr,backendName:"cpu",kernelFunc:fG};function gG(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=Ia.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=Ia.computeStrides(g),k=v[0],I=v[1],S=v[2],N=Ia.getTypedArrayFromDType(a.dtype,Ia.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,C=r.data.get(s.dataId).values;for(let _=0;_<h;++_){let e=1===s.shape[0]?C:C.subarray(8*_,8*_+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<c;++r){let a,s=e[6]*n+e[7]*t+1;if(0===s)continue;let u=(e[0]*n+e[1]*t+e[2])/s,h=(e[3]*n+e[4]*t+e[5])/s,c=bG(u,d,o),f=bG(h,p,o);switch(i){case"nearest":a=SG(T,p,d,b,x,w,_,f,c,r,l);break;case"bilinear":a=NG(T,p,d,b,x,w,_,f,c,r,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}let m=_*k+t*I+n*S+r;N[m]=a}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}var yG={kernelName:Zr,backendName:"cpu",kernelFunc:gG};function bG(e,t,n){switch(n){case"reflect":return xG(e,t);case"wrap":return wG(e,t);case"nearest":return kG(e,t);case"constant":default:return vG(e,t)}}function xG(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Ia.clamp(0,n,t-1)}function wG(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return Ia.clamp(0,n,t-1)}function vG(e,t){return e}function kG(e,t){return Ia.clamp(0,e,t-1)}function IG(e,t,n,r,a,s,i,o,l,u,h){let p=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[p]:h}function SG(e,t,n,r,a,s,i,o,l,u,h){let p=Math.round(o),d=Math.round(l);return IG(e,t,n,r,a,s,i,p,d,u,h)}function NG(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1,m=(f-l)*IG(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*IG(e,t,n,r,a,s,i,p,f,u,h),g=(f-l)*IG(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*IG(e,t,n,r,a,s,i,c,f,u,h);return(c-o)*m+(o-p)*g}function TG(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;dO(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Pz(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var CG={kernelName:Qr,backendName:"cpu",kernelFunc:TG};function _G(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){h[s]=c;let e=fz({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[c]=Jz({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}var EG={kernelName:ea,backendName:"cpu",kernelFunc:_G};function AG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;dO(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],h=[],p=o-l,d=s;for(let f=0;f<p;++f){let e=eW({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,h.push(e)}for(let f=0;f<i;++f){let e=Ia.createScalarValue(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=jO({inputs:{a:t,b:d},backend:n}),s=_O({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=AL({inputs:{a:s,b:a},backend:n}),o=BB({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),h.push(t),h.push(r),h.push(s),h.push(i),h.push(o)}let c=zV({inputs:u,backend:n,attrs:{axis:0}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}var $G={kernelName:ta,backendName:"cpu",kernelFunc:AG},RG=[rP,bO,sP,oP,MO,uP,pP,cP,mP,yP,xP,vP,IP,TP,_P,DP,OP,zP,BP,tP,VP,GP,jP,KP,EO,UO,YP,vO,JP,nB,aB,iB,lB,hB,dB,fB,gB,bB,wB,kB,SB,TB,_B,AB,RB,DB,OB,LB,zB,PB,UB,Wz,HB,qO,QB,YO,tW,QO,pW,cW,mW,nL,bW,wW,kW,SW,TW,oL,hL,SO,_W,eB,AW,RW,DW,Uz,cL,gL,OW,wL,zW,WW,UW,jW,KW,YW,JW,SL,eV,nV,aV,iV,lV,hV,dV,CL,fV,yV,kV,$L,DL,NV,_V,$V,LL,FV,LV,PV,WV,GV,jz,UL,jV,KV,YV,JV,TO,aW,eU,Kz,Yz,Qz,nU,aU,iU,lU,hU,pU,cU,lz,mU,wU,kU,TU,dz,_U,AU,RU,mz,wV,OU,zU,BU,VU,GU,jU,KU,YU,vz,ZU,Sz,QU,tG,rG,sG,oG,Dz,WB,uG,pG,cG,mG,yG,BL,CG,EG,$G,MV];for(let t of RG)ya(t);var FG={};b(FG,{assertNotComplex:()=>KH,bindCanvasToFramebuffer:()=>IH,bindColorTextureToFramebuffer:()=>SH,bindTextureToProgramUniformSampler:()=>kH,bindTextureUnit:()=>bH,bindVertexBufferToProgramAttribute:()=>yH,callAndCheck:()=>XG,canBeRepresented:()=>QG,createFragmentShader:()=>rH,createFramebuffer:()=>gH,createProgram:()=>lH,createStaticIndexBuffer:()=>dH,createStaticVertexBuffer:()=>pH,createTexture:()=>fH,createVertexShader:()=>nH,getBatchDim:()=>AH,getExtensionOrThrow:()=>tH,getFramebufferErrorMessage:()=>CH,getMaxTexturesInShader:()=>PH,getNumChannels:()=>cH,getProgramUniformLocation:()=>vH,getProgramUniformLocationOrThrow:()=>wH,getRowsCols:()=>$H,getShapeAs3D:()=>RH,getTextureShapeFromLogicalShape:()=>FH,getWebGLDisjointQueryTimerVersion:()=>BH,getWebGLErrorMessage:()=>eH,getWebGLMaxTextureSize:()=>OH,hasExtension:()=>WH,isCapableOfRenderingToFloatTexture:()=>UH,isDownloadFloatTextureEnabled:()=>GH,isReshapeFree:()=>MH,isWebGLFenceEnabled:()=>qH,isWebGLVersionEnabled:()=>VH,linkProgram:()=>uH,logShaderSourceAndInfoLog:()=>oH,resetMaxTextureSize:()=>LH,resetMaxTexturesInShader:()=>zH,unbindColorTextureFromFramebuffer:()=>NH,unbindTextureUnit:()=>xH,validateFramebuffer:()=>TH,validateProgram:()=>hH,validateTextureSize:()=>mH});var DG,MG,OG,LG={},zG={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function PG(e,t){LG[e]=t}function BG(e,t){if(!(e in LG)||null!=t){let n=VG(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;LG[e]=n}let n=LG[e];return null==n||n.isContextLost()?(delete LG[e],BG(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),LG[e])}function WG(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function VG(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?WG(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete LG[e]},!1),Ue().getBool("SOFTWARE_WEBGL_ENABLED")&&(zG.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",zG)||n.getContext("experimental-webgl",zG):n.getContext("webgl2",zG)}function UG(e,t){return[t,e]}function GG(e,t){return e*t}function HG(e){let t=Ia.sizeFromShape(e),n=Math.ceil(t/4);return Ia.sizeToSquarishShape(n)}function jG(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function qG(e,t){let[n,r]=jG(e,t);return n*r*4}function KG(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Ue().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function XG(e,t){let n=t();return Ue().getBool("DEBUG")&&YG(e),n}function YG(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+eH(e,t))}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(DG||(DG={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(MG||(MG={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(OG||(OG={}));var ZG=5.96e-8,JG=65504;function QG(e){return!!(Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||ZG<Math.abs(e)&&Math.abs(e)<JG)}function eH(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function tH(e,t){return _H(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function nH(e,t){let n=_H(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(XG(e,()=>e.shaderSource(n,t)),XG(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function rH(e,t){let n=_H(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(XG(e,()=>e.shaderSource(n,t)),XG(e,()=>e.compileShader(n)),Ue().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw oH(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var aH,sH,iH=/ERROR: [0-9]+:([0-9]+):/g;function oH(e,t){let n=iH.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>Ia.rightPad((t+1).toString(),s)+e),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+Ia.rightPad(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function lH(e){return _H(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function uH(e,t){if(XG(e,()=>e.linkProgram(t)),!Ue().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function hH(e,t){if(XG(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function pH(e,t){let n=_H(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return XG(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),XG(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function dH(e,t){let n=_H(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return XG(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),XG(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function cH(){return 2===Ue().getNumber("WEBGL_VERSION")?1:4}function fH(e){return _H(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function mH(e,t){let n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function gH(e){return _H(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function yH(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(XG(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),XG(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),XG(e,()=>e.enableVertexAttribArray(o)),!0)}function bH(e,t,n){EH(e,n),XG(e,()=>e.activeTexture(e.TEXTURE0+n)),XG(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function xH(e,t){EH(e,t),XG(e,()=>e.activeTexture(e.TEXTURE0+t)),XG(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function wH(e,t,n){return _H(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function vH(e,t,n){return e.getUniformLocation(t,n)}function kH(e,t,n,r){XG(e,()=>bH(e,t,r)),XG(e,()=>e.uniform1i(n,r))}function IH(e){XG(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),XG(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),XG(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function SH(e,t,n){XG(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),XG(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function NH(e,t){XG(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),XG(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function TH(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+CH(e,t))}function CH(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function _H(e,t,n){let r=XG(e,()=>t());if(null==r)throw new Error(n);return r}function EH(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function AH(e,t=2){return Ia.sizeFromShape(e.slice(0,e.length-t))}function $H(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function RH(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[AH(e),...$H(e)]),t}function FH(e,t=!1){let n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Ue().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Ue().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map((t,n)=>n>=e.length-2?Ia.nearestLargerEven(e[n]):e[n]),1===e.length&&(e=[2,e[0]])),2!==e.length&&(e=Ia.squeezeShape(e).newShape);let a=Ia.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=AH(e),n=2,r=2;e.length&&([n,r]=$H(e)),a=t*(n/2)*(r/2),s=Ia.sizeToSquarishShape(a).map(e=>2*e)}else s=Ia.sizeToSquarishShape(a);return s}function DH(e){return e%2===0}function MH(e,t){if(e=e.slice(-2),t=t.slice(-2),Ia.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||DH(n)&&DH(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&DH(e[0])&&DH(t[0])}function OH(e){if(null==aH){let t=BG(e);aH=t.getParameter(t.MAX_TEXTURE_SIZE)}return aH}function LH(){aH=null}function zH(){sH=null}function PH(e){if(null==sH){let t=BG(e);sH=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,sH)}function BH(e){if(0===e)return 0;let t,n=BG(e);return t=WH(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:WH(n,"EXT_disjoint_timer_query")?1:0,t}function WH(e,t){return null!=e.getExtension(t)}function VH(e){try{if(null!=BG(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function UH(e){if(0===e)return!1;let t=BG(e);if(1===e){if(!WH(t,"OES_texture_float"))return!1}else if(!WH(t,"EXT_color_buffer_float"))return!1;return HH(t)}function GH(e){if(0===e)return!1;let t=BG(e);if(1!==e){if(WH(t,"EXT_color_buffer_float"))return HH(t);let e="EXT_color_buffer_half_float";if(WH(t,e)){let n=t.getExtension(e);return jH(t,n)}return!1}return!(!WH(t,"OES_texture_float")||!WH(t,"WEBGL_color_buffer_float"))&&HH(t)}function HH(e){let t=KG(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function jH(e,t){let n=KG(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function qH(e){return 2===e&&null!=BG(e).fenceSync}function KH(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Ia.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}var XH=Ue();function YH(){let e,t,n,r,a,s,i,o,l,u;return 2===Ue().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=Ue().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function ZH(e,t,n="index"){let r=Ia.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function JH(e,t,n="index"){let r=Ia.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`}).join("")}function QH(e,t){let n=e.length,r=e.map(e=>`${t}[${e}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function ej(e,t,n="index"){let r=e.map((e,t)=>t),a=QH(r,t);return a.map((t,r)=>{let s=`int ${e[r]} = ${n} / ${a[r]}`,i=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`;return`${s}; ${i};`}).join("")}function tj(e){let t=Ia.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function nj(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}XH.registerFlag("HAS_WEBGL",()=>XH.getNumber("WEBGL_VERSION")>0),XH.registerFlag("WEBGL_VERSION",()=>VH(2)?2:VH(1)?1:0),XH.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),XH.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===XH.get("WEBGL_VERSION")),XH.registerFlag("WEBGL_CPU_FORWARD",()=>!0),XH.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),XH.registerFlag("WEBGL_PACK",()=>XH.getBool("HAS_WEBGL")),XH.registerFlag("WEBGL_PACK_NORMALIZATION",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_CLIP",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_PACK_REDUCE",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_LAZILY_UNPACK",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_CONV_IM2COL",()=>XH.getBool("WEBGL_PACK")),XH.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>OH(XH.getNumber("WEBGL_VERSION"))),XH.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>PH(XH.getNumber("WEBGL_VERSION"))),XH.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=XH.getNumber("WEBGL_VERSION");return 0===e?0:BH(e)}),XH.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>XH.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Us.isMobile()),XH.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>UH(XH.getNumber("WEBGL_VERSION"))),XH.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!XH.getBool("WEBGL_FORCE_F16_TEXTURES")&&XH.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),XH.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>GH(XH.getNumber("WEBGL_VERSION"))),XH.registerFlag("WEBGL_FENCE_API_ENABLED",()=>qH(XH.getNumber("WEBGL_VERSION"))),XH.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>XH.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),XH.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),XH.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Us.isMobile()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),XH.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),XH.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),XH.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),XH.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),XH.registerFlag("WEBGL_EXP_CONV",()=>!1),XH.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>XH.getBool("IS_TEST")),XH.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),XH.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),XH.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),XH.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var rj="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:aj}=jx;function sj(e,t,n){let r=[];if(e.forEach(e=>{let t=Ia.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=qj(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let a,s,i=r.join("\n"),o=e.map(e=>lj(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),l=t.texShape,u=YH(),h=pj(u),p=fj(u);return t.isPacked?(a=uj(t.logicalShape,l,n.enableShapeUniforms),s=cj(u)):(a=hj(t.logicalShape,l,n.enableShapeUniforms),s=dj(u)),n.packedInputs&&(p+=bj),[p,h,s,i,a,o,n.userCode].join("\n")}function ij(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Rj(e,t);case 1:return Dj(e,t);case 2:return Oj(e,t);case 3:return zj(e,t);case 4:return Bj(e,t);case 5:return Wj(e);case 6:return Vj(e);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function oj(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return $j(e);case 1:return Fj(e,t);case 2:return Mj(e,t);case 3:return Lj(e,t);default:return Pj(e,t)}}function lj(e,t,n=!1,r){let a="";a+=n?oj(e,r):ij(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?Gj(e,t):Hj(e,t)),a}function uj(e,t,n){switch(e.length){case 0:return xj();case 1:return wj(e,t,n);case 2:return _j(e,t,n);case 3:return kj(e,t,n);default:return Sj(e,t,n)}}function hj(e,t,n){switch(e.length){case 0:return xj();case 1:return vj(e,t,n);case 2:return Ej(e,t,n);case 3:return Ij(e,t,n);case 4:return Nj(e,t,n);case 5:return Tj(e,t);case 6:return Cj(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}function pj(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function dj(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function cj(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function fj(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${mj}\n    ${gj}\n    ${yj}\n  `}var mj="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gj="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yj="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bj="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function xj(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function wj(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function vj(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function kj(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Ij(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${JH(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=ZH(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function Sj(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function Nj(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${JH(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=ZH(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Tj(e,t){let n=ZH(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Cj(e,t){let n=ZH(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function _j(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ia.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Ej(e,t,n){return Ia.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Aj(e){return"offset"+e}function $j(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=YH();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function Rj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=Aj(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Fj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=YH();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function Dj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Uj(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=Aj(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Mj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=YH();if(null!=s&&Ia.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}function Oj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Ia.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0],n=s[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=Ia.squeezeShape(n),l=i;if(l.length<n.length){let n=Kj(e,l),r=["row","col"];return`\n      ${ij(n,t)}\n      float ${a}(int row, int col) {\n        return ${a}(${Xj(r,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Uj(e)}\n      }\n    `;let u=s[0],h=s[1],p=Aj(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function Lj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=n.slice(1),s=[1,2],i=Kj(e,r),o=["b","row","col"];return`\n        ${oj(i,t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Xj(o,s)});\n        }\n      `}let o=YH();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}function zj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Ia.squeezeShape(n),u=o;if(u.length<n.length){let n=Kj(e,u),r=["row","col","depth"];return`\n        ${ij(n,t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Xj(r,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Uj(e)}\n      }\n    `;let h=e.shapeInfo.texShape,p=h[0],d=h[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=Aj(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function Pj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=YH();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function Bj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=Ia.squeezeShape(n);if(l.length<n.length){let n=Kj(e,l),r=["row","col","depth","depth2"];return`\n      ${ij(n,t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Xj(r,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Uj(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=Aj(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function Wj(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=Ia.squeezeShape(t);if(l.length<t.length){let t=Kj(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${ij(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Xj(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Uj(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=Aj(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Vj(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Ia.squeezeShape(t);if(a.length<t.length){let t=Kj(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ij(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Xj(n,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Uj(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=Aj(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Uj(e){let t=e.name,n=Ia.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Gj(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=aj(e.shapeInfo.logicalShape,t.logicalShape),u=jj(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${p[e+h]} = 0;`).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+p[t+h]).join(", ");let c="return outputValue;",f=1===Ia.sizeFromShape(e.shapeInfo.logicalShape),m=1===Ia.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}function Hj(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Ia.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=jj(l),p=aj(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map(e=>`coords.${c[e+d]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+c[t+d]).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}function jj(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function qj(e,t,n){let{newShape:r,keptDims:a}=Ia.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!Ia.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Kj(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Xj(e,t){return t.map(t=>e[t]).join(", ")}function Yj(e,t,n,r){let a=n.map((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=a.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=sj(a,i,t),l=rH(e.gl,o),u=e.createProgram(l);return Ue().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},Zj(e,t,u))}function Zj(e,t,n){let r,a,s,i={},o={},l={},u=[],h=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===Ue().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let c=0;c<t.variableNames.length;c++){let r=t.variableNames[c];i[r]=e.getUniformLocation(n,r,d),i["offset"+r]=e.getUniformLocation(n,"offset"+r,d),t.enableShapeUniforms&&(o[r+"Shape"]=e.getUniformLocation(n,r+"Shape",d),l[r+"TexShape"]=e.getUniformLocation(n,r+"TexShape",d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)}),{uniformLocations:i,customUniformLocations:u,infLoc:h,nanLoc:p,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function Jj(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!Ia.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Ia.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function Qj(e,t,n,r,a){t.program.enableShapeUniforms||(Jj(t.inShapeInfos,n),Jj([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ue().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations["offset"+a],o=t.inShapesLocations[a+"Shape"],l=t.inTexShapesLocations[a+"TexShape"];if(o){let{uniformShape:r}=qj(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r));break;default:break}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(Ia.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}});let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let n=Ia.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}),e.executeProgram()}function eq(e,t,n){let r="";t.concat(n).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=qj(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=Ia.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&Ia.arraysEqual(t.shape,s),f=1===Ia.sizeFromShape(t.shape),m=jx.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Ia.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+Ue().getNumber("WEBGL_VERSION"),s}function tq(e){return Ue().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var nq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=DG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=YH();this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?JH(["r","c","d"],e):ZH(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},rq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=DG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=YH();this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?JH(["r","c","d"],e):ZH(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},aq=class{constructor(e){this.variableNames=["A"],this.outTexUsage=MG.DOWNLOAD;let t=YH();this.outputShape=e,this.userCode=`\n      ${rj}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},sq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=MG.DOWNLOAD;let t=YH();this.outputShape=e,this.userCode=`\n      ${rj}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},iq={R:0,G:1,B:2,A:3},oq=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=YH();this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${iq[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?nj():tj(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},lq=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=YH();this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){let a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":""+e[2]}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":""+e[1]}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?nj():tj(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},uq={};function hq(e){let t=YH(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return nH(e,n)}function pq(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return pH(e,t)}function dq(e){let t=new Uint16Array([0,1,2,2,1,3]);return dH(e,t)}function cq(e,t,n,r,a,s){mH(t,n);let i=fH(e),o=e.TEXTURE_2D;return XG(e,()=>e.bindTexture(o,i)),XG(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),XG(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),XG(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),XG(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Ue().getNumber("WEBGL_VERSION")?XG(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):XG(e,()=>e.texStorage2D(o,1,r,t,n)),XG(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function fq(e){return e.internalFormatFloat}function mq(e,t,n,r){let[a,s]=UG(t,n);return cq(e,a,s,fq(r),r.textureFormatFloat,e.FLOAT)}function gq(e){return e.internalFormatHalfFloat}function yq(e,t,n,r){let[a,s]=UG(t,n);return cq(e,a,s,gq(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function bq(e){return e.downloadTextureFormat}function xq(e,t,n,r){let[a,s]=UG(t,n);return cq(e,a,s,bq(r),e.RGBA,e.UNSIGNED_BYTE)}function wq(e){return e.internalFormatPackedFloat}function vq(e,t,n,r){let[a,s]=jG(t,n);return cq(e,a,s,wq(r),e.RGBA,e.FLOAT)}function kq(e){return e.internalFormatPackedHalfFloat}function Iq(e,t,n,r){let[a,s]=jG(t,n);return cq(e,a,s,kq(r),e.RGBA,r.textureTypeHalfFloat)}function Sq(e,t,n){return XG(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),yH(e,t,"clipSpacePos",n,3,20,0)&&yH(e,t,"uv",n,2,20,12)}function Nq(e,t,n,r,a,s){let i,o,l;XG(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Ue().getNumber("WEBGL_VERSION")?XG(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):XG(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),XG(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Tq(e,t,n){XG(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Ue().getNumber("WEBGL_VERSION")?XG(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):XG(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Ue().getNumber("WEBGL_VERSION")?XG(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):XG(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),XG(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Cq(e,t,n,r){let a=e.createBuffer();XG(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*n;return XG(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),XG(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),XG(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function _q(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Eq(e,t,n,r){let[a,s]=UG(t,n),i=4,o=new Uint8Array(GG(t*n,i));return XG(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function Aq(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(qG(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function $q(e,t,n){let r=new Float32Array(t*n*4);return XG(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}b(uq,{bindVertexProgramAttributeStreams:()=>Sq,createBufferFromOutputTexture:()=>Cq,createFloat16MatrixTexture:()=>yq,createFloat16PackedMatrixTexture:()=>Iq,createFloat32MatrixTexture:()=>mq,createIndexBuffer:()=>dq,createPackedMatrixTexture:()=>vq,createUnsignedBytesMatrixTexture:()=>xq,createVertexBuffer:()=>pq,createVertexShader:()=>hq,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Eq,downloadFloat32MatrixFromBuffer:()=>_q,downloadMatrixFromPackedOutputTexture:()=>$q,downloadPackedMatrixFromBuffer:()=>Aq,getInternalFormatForFloat16MatrixTexture:()=>gq,getInternalFormatForFloat16PackedMatrixTexture:()=>kq,getInternalFormatForFloat32MatrixTexture:()=>fq,getInternalFormatForPackedMatrixTexture:()=>wq,getInternalFormatForUnsignedBytesMatrixTexture:()=>bq,uploadDenseMatrixToTexture:()=>Nq,uploadPixelDataToTexture:()=>Tq});var Rq=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Ue().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,PG(t,e)):this.gl=BG(t),e=this.gl,2===Ue().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>XG(t,()=>t.createVertexArray()),this.bindVertexArray=e=>XG(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>XG(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>XG(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>XG(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>XG(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>XG(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>XG(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ue().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=tH(this.gl,e),WH(this.gl,t))this.textureHalfFloatExtension=tH(this.gl,t);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),WH(this.gl,r))this.colorBufferHalfFloatExtension=tH(this.gl,r);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",WH(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!WH(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=pq(this.gl),this.indexBuffer=dq(this.gl),this.framebuffer=gH(this.gl),this.textureConfig=KG(this.gl,this.textureHalfFloatExtension)}get debug(){return Ue().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;XG(e,()=>e.finish()),XG(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),XG(e,()=>e.deleteFramebuffer(this.framebuffer)),XG(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),XG(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),XG(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),mq(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),yq(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),xq(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Tq(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Nq(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Iq(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),vq(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(NH(this.gl,this.framebuffer),this.outputTexture=null),XG(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Eq(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Aq(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return _q(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=Cq(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ue().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>$q(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=hq(t));let n,r=lH(t);return XG(t,()=>t.attachShader(r,this.vertexShader)),XG(t,()=>t.attachShader(r,e)),uH(t,r),n=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(n.vao),XG(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(Sq(t,n,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&hH(t,n),this.setProgram(n),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(XG(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&hH(this.gl,this.program)),XG(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?wH(this.gl,e,t):vH(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),XG(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),kH(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=jG(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&hH(this.gl,this.program),TH(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}XG(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),XG(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=tH(this.gl,2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ia.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Fq(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ue().platform&&(n=Ue().platform.setTimeoutCustom.bind(Ue().platform)),Ia.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),SH(this.gl,e,this.framebuffer),this.debug&&TH(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(SH(this.gl,this.outputTexture,this.framebuffer),this.debug&&TH(this.gl)):NH(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;SH(r,e,this.framebuffer),this.debug&&TH(r),this.outputTexture=e,XG(r,()=>r.viewport(0,0,t,n)),XG(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),XG(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};function Fq(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:Dq,bincountImpl:Mq,bincountReduceImpl:Oq,castImpl:Lq,ceilImpl:zq,concatImpl:Pq,equalImpl:Bq,expImpl:Wq,expm1Impl:Vq,floorImpl:Uq,gatherNdImpl:Gq,gatherV2Impl:Hq,greaterImpl:jq,greaterEqualImpl:qq,lessImpl:Kq,lessEqualImpl:Xq,linSpaceImpl:Yq,logImpl:Zq,maxImpl:Jq,maximumImpl:Qq,minimumImpl:eK,multiplyImpl:tK,negImpl:nK,notEqualImpl:rK,prodImpl:aK,raggedGatherImpl:sK,raggedRangeImpl:iK,raggedTensorToTensorImpl:oK,rangeImpl:lK,rsqrtImpl:uK,scatterImpl:hK,sigmoidImpl:pK,simpleAbsImpl:dK,sliceImpl:cK,sparseFillEmptyRowsImpl:fK,sparseReshapeImpl:mK,sparseSegmentReductionImpl:gK,sqrtImpl:yK,stridedSliceImpl:bK,stringNGramsImpl:xK,stringSplitImpl:wK,stringToHashBucketFastImpl:vK,subImpl:kK,tileImpl:IK,topKImpl:SK,transposeImpl:NK,uniqueImpl:TK}=mO;function CK(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function _K(e,t){return 1===t?[e]:CK(e,t)}function EK(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var AK=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=tq(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=_K("rc",this.rank),t=jj(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=e[e.length-1-t]+","+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > "+(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},$K=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${RK(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?nj():tj(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function RK(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?ej(["r","c","d"],"inputShape"):ZH(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}var FK=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=zK(t,n),a=PK(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=MK(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===OG.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===OG.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===OG.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===OG.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===OG.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=zK(n,r),s=PK(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=MK(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ue().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function DK(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format "+t)}function MK(e,t,n,r,a){let s,i=OK(t,r);if(a){let[t,n]=jG(e[0],e[1]);s=t*n}else{let[t,n]=UG(e[0],e[1]);s=t*n}let o=DK(n,i);return s*o}function OK(e,t){switch(e){case OG.PACKED_2X2_FLOAT32:return wq(t);case OG.PACKED_2X2_FLOAT16:return kq(t);case OG.UNPACKED_FLOAT32:return fq(t);case OG.UNPACKED_FLOAT16:return gq(t);case OG.PACKED_4X1_UNSIGNED_BYTE:return bq(t);default:throw new Error("Unknown physical texture type "+e)}}function LK(e){return Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?OG.PACKED_2X2_FLOAT32:OG.UNPACKED_FLOAT32:e?OG.PACKED_2X2_FLOAT16:OG.UNPACKED_FLOAT16}function zK(e,t){if(e===MG.UPLOAD)return OG.PACKED_2X2_FLOAT32;if(e===MG.RENDER||null==e)return LK(t);if(e===MG.DOWNLOAD||e===MG.PIXELS)return OG.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function PK(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var BK=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},WK="if (isnan(x)) return x;",VK="return x;",UK="return abs(x);",GK="return (x >= 0.0) ? x : (exp(x) - 1.0);",HK=WK+"\n  return (x < 0.0) ? 0.0 : x;\n",jK=WK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",qK="return x;",KK="return 1.0 / (1.0 + exp(-1.0 * x));",XK="return x;",YK="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",ZK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",JK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",QK="return 1.0 / (1.0 + exp(-1.0 * x));",eX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},tX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length);let t=e.length,n=_K("rc",t),r=jj(t),a=EK(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},nX=Jw.whereImpl,rX=1e-7,aX=1e-4,sX={};function iX(e){return e in sX||(sX[e]={}),sX[e]}var oX=Ue().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),lX=600;function uX(){return null==Ue().global.screen?1024:Ue().global.screen.height*Ue().global.screen.width*window.devicePixelRatio*lX/1024/1024}var hX=class extends U{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ue().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Rq)t=e;else{let n=BG(Ue().getNumber("WEBGL_VERSION"),e);t=new Rq(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=BG(Ue().getNumber("WEBGL_VERSION"));t=new Rq(e),this.binaryCache=iX(Ue().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new FK(this.gpgpu),this.numMBBeforeWarning=uX(),this.texData=new V(this,_o())}nextDataId(){return hX.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=RH(t),u=new oq(l,!1,s),h=this.runWebGLProgram(u,[i],n,[[r,a]]);return h.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,t,n){if((Ue().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ue().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:MG.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Ue().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:MG.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new eX(i,qK):new BK(i,qK);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=Ia.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=jx.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=Ia.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new eX(r,qK):new BK(r,qK);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ue().getBool("DEBUG")&&!Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ue().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Ue().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...HG(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=jx.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=Ia.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){let e=this.gpgpu.gl;XG(e,()=>e.deleteBuffer(h))}let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&_o().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new eX(a,qK):new BK(a,qK);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),h=_o().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Ia.decodeString(e));return go(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return go(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!QG(n))throw Ue().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Ia.sizeFromShape(t);if(Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...HG(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Ue().getBool("WEBGL_PACK")&&!0===r,i=s?RH(t):t,o=s?new sq(i):new aq(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Ia.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=Ia.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=Ia.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ia.now(),endMs:null}}endTimer(e){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ia.now(),e)}async getQueryTime(e){if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=oX){return Ue().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&Ia.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){jx.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return nX(e.shape,t)}packedUnaryOp(e,t,n){let r=new eX(e.shape,t),a=this.compileAndRun(r,[e],n);return _o().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=dK(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,UK,e.dtype);let t=new BK(e.shape,UK),n=this.compileAndRun(t,[e]);return _o().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ia.isString(n[0])){let a=n.map(e=>Ia.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return _o().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new tX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new AK(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[AH(e.shape),...$H(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[AH(t),...$H(t)],s=new $K(a,n),i=!0,o=[n],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=Ia.sizeFromShape(a),n=t[0]*t[1]*4;Ia.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i,o=RH(a);i=r?new rq(o):new nq(o);let l=!0,u=[null!=t?t:HG(o)],h=this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:a,dataId:h.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===DG.DENSE){let t=null!=s?s:HG(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Ia.sizeFromShape(i.shape))return o.values=Ia.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Ia.sizeFromShape(t.shape)<=Ue().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!MH(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);let h,p={shape:i.shape,texData:o,isUniform:!1},d=eq(e,u,p),c=this.getAndSaveBinary(d,()=>Yj(this.gpgpu,e,u,p)),f=null!=this.activeTimers;f&&(h=this.startTimer()),Ue().get("ENGINE_COMPILE_ONLY")||Qj(this.gpgpu,c,u,p,r),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Ue().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=Ia.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ue().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ue().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=$o(()=>{if(!Ue().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Ue().getBool("DEBUG");Ue().set("DEBUG",!1);let t=this.abs(Xh(1e-8)).dataSync()[0];if(Ue().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?rX:aX}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=Ia.now());let h=t.texShape;if(null==h&&(h=FH(n,o),t.texShape=h),null!=a){let e,s=RH(n),i=h[1],p=h[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,p]=jG(h[0],h[1])),e=o?new lq(s,d):new oq(s,d);let c=d?[p,i]:h,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?MG.PIXELS:MG.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);let g=[[p,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ue().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ia.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=pX(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ia.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Gx(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(oH(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=Zj(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=_o().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return _o().makeTensorFromDataId(l,t,n,o)}};function pX(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}hX.nextDataId=0;var dX="4.2.0";function cX(){Ue().set("WEBGL_FORCE_F16_TEXTURES",!0)}Us.isBrowser()&&Wo("webgl",()=>new hX,2);var fX={forceHalfFloat:cX},mX="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",gX=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=jx.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=tq(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},yX="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",bX=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=jx.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=tq(a);let s="";if(r)if(0===a||1===Ia.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${jj(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=_K("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function xX(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var wX={kernelName:pn,backendName:"webgl",kernelFunc:xX};function vX(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=xX({inputs:{x:r},backend:n}),l=xX({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var kX={kernelName:kt,backendName:"webgl",kernelFunc:vX},IX="return (a < 0.) ? b * a : a;",SX="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function NX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Ia.createScalarValue(s,"float32")),o=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bX(SX,a.shape,i.shape):new gX(IX,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var TX={kernelName:yn,backendName:"webgl",kernelFunc:NX},CX="return (a < 0.) ? b * a : a;",_X="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function EX(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bX(_X,r.shape,a.shape):new gX(CX,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var AX={kernelName:nr,backendName:"webgl",kernelFunc:EX},$X="if (isnan(x)) return x;";function RX({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u,h=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;return u=h?new eX(i.shape,t):new BK(i.shape,e),o.runWebGLProgram(u,[i],l)}}function FX({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new gX(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],Cs(n.dtype,r.dtype))}),s=vX({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p=s||Cs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=a){let e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?jx.fromUint8ToStringArray(e):e,r="string"===l.dtype?jx.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,p),o=h.makeTensorInfo(i,p),d=h.texData.get(o.dataId);return d.values=s,o}let d,c=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;return d=c?new bX(t,l.shape,u.shape,n):new gX(e,l.shape,u.shape),h.runWebGLProgram(d,[l,u],p)}}function DX(e,t=!1){if("linear"===e)return t?XK:VK;if("relu"===e)return t?ZK:HK;if("elu"===e)return t?YK:GK;if("relu6"===e)return t?JK:jK;if("prelu"===e)return t?_X:CX;if("leakyrelu"===e)return t?SX:IX;if("sigmoid"===e)return t?QK:KK;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var MX=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=tq(this.outputShape.length);let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${h}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},OX={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},LX=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=jx.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},zX="return a * b;";function PX(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=jx.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new LX(OX.REAL,a.shape,s.shape),i=new LX(OX.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=vX({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=tK(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i),u=r.texData.get(l.dataId);return u.values=n,l}return t=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bX(zX,a.shape,s.shape):new gX(zX,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var BX={kernelName:Gn,backendName:"webgl",kernelFunc:PX};function WX(e,t,n){let r=[AH(e.shape),...$H(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[AH(t),...$H(t)],i=new $K(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function VX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Ia.sizeFromShape(a.shape),l=Ia.inferFromImplicitShape(s,o),u=Ia.sizeFromShape(l);Ia.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let h=i.texData.get(a.dataId);return!h.isPacked||MH(a.shape,l)||null!==h.texture&&MH(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):WX(a,l,i)}var UX={kernelName:pr,backendName:"webgl",kernelFunc:VX},GX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Ia.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},HX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function jX(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=jx.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function qX(e,t,n,r){let a=jX(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new GX({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new GX({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new HX({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var KX=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=jj(this.rank),a=XX(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};function XX(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var YX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=jj(this.rank),a=CK("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function ZX(e,t,n){let r=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YX(e.shape,t):new KX(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function JX(e,t,n,r){let a=t,s=e.shape.length,i=Ia.parseAxisParam(a,e.shape),o=i,l=jx.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=ZX(e,l,r),o=jx.getInnerMostAxes(o.length,s)),jx.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=jx.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=jx.expandShapeToKeepDim(p,i));let f=Ia.sizeFromShape(d),m=Ia.sizeFromShape(e.shape)/f,g=VX({inputs:{x:h},attrs:{shape:[m,f]},backend:r}),y=_s(e.dtype),b=qX(g,y,"sum",r),x=VX({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(h),x}function QX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return JX(a,s,i,n)}var eY={kernelName:$r,backendName:"webgl",kernelFunc:QX};function tY(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let h=0;h<u.length;h++)u[h]=s.shape[i[h]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=NK(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype);let r=o.texData.get(t.dataId);r.values=n}else t=ZX(s,i,o);return t}var nY={kernelName:Jr,backendName:"webgl",kernelFunc:tY},rY=1e3;function aY({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Ia.sizeFromShape(m),b=Ia.sizeFromShape(g),x=mh.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);Ia.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w,v=n?[y,p,c]:[y,c,p],k=r?[b,f,d]:[b,d,f],I=VX({inputs:{x:e},backend:a,attrs:{shape:v}}),S=VX({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),C=n?I.shape[1]:I.shape[2],_=null!=s,E=null!=i,A="leakyrelu"===l,$=null!=l?DX(l,!0):null,R=_||E||A||null!=$;if((1===c||1===f)&&C>rY&&!1===R){let e=I,t=S;n&&(e=tY({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=tY({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1!==f,i=1===f,o=e;s&&(o=VX({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(o));let l=1===f?2:1,u=t;i&&(u=VX({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(u));let h=PX({inputs:{a:o,b:u},backend:a});w=QX({inputs:{x:h},backend:a,attrs:{axis:l,keepDims:!0}}),N.push(h)}else{let l=Cs(e.dtype,t.dtype),u=new MX(v,k,[T,c,f],n,r,_,$,E,A),h=[I,S];if(null!=s&&h.push(s),E&&h.push(i),A){let e=a.makeTensorInfo([],"float32",Ia.createScalarValue(o,"float32"));h.push(e),N.push(e)}w=a.runWebGLProgram(u,h,l)}let F=VX({inputs:{x:w},backend:a,attrs:{shape:x}});N.push(w);for(let D of N)a.disposeIntermediateTensorInfo(D);return F}function sY(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return aY({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}var iY={kernelName:oa,backendName:"webgl",kernelFunc:sY},oY="return abs(x);";function lY(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=dK(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new eX(a.shape,oY):new BK(a.shape,oY),r.runWebGLProgram(t,[a],a.dtype)}var uY={kernelName:Ye,backendName:"webgl",kernelFunc:lY},hY=WK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",pY=RX({opSnippet:hY}),dY={kernelName:Ze,backendName:"webgl",kernelFunc:pY},cY=WK+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",fY=RX({opSnippet:cY}),mY={kernelName:Je,backendName:"webgl",kernelFunc:fY},gY="return a + b;",yY=FX({opSnippet:gY,packedOpSnippet:gY,supportsComplex:!0,cpuKernelImpl:Dq}),bY={kernelName:Qe,backendName:"webgl",kernelFunc:yY},xY=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},wY=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};function vY(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return xX({inputs:{x:r[0]},backend:n});if(r.length>Ue().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let e=Math.floor(r.length/2),t=vY({inputs:r.slice(0,e),backend:n}),a=vY({inputs:r.slice(e),backend:n});return vY({inputs:[t,a],backend:n})}let a=r.map(e=>e.dtype).reduce((e,t)=>Cs(e,t)),s=r.map(e=>e.shape),i=Ue().getBool("WEBGL_PACK")?new wY(r[0].shape,s):new xY(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var kY={kernelName:et,backendName:"webgl",kernelFunc:vY};function IY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ia.parseAxisParam(s,a.shape),u=l,h=jx.getAxesPermutation(u,o),p=a;null!=h&&(p=tY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=jx.getInnerMostAxes(u.length,o)),jx.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=jx.computeOutAndReduceShapes(p.shape,u),m=Ia.sizeFromShape(f),g=VX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=qX(g,g.dtype,"all",n);if(i){let e=jx.expandShapeToKeepDim(c,l);d=VX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=VX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var SY={kernelName:tt,backendName:"webgl",kernelFunc:IY};function NY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ia.parseAxisParam(s,a.shape),u=l,h=jx.getAxesPermutation(u,o),p=a;null!=h&&(p=tY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=jx.getInnerMostAxes(u.length,o)),jx.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=jx.computeOutAndReduceShapes(p.shape,u),m=Ia.sizeFromShape(f),g=VX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=qX(g,g.dtype,"any",n);if(i){let e=jx.expandShapeToKeepDim(c,l);d=VX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=VX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var TY={kernelName:nt,backendName:"webgl",kernelFunc:NY},CY=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},_Y=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Ia.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=jj(u),p=_K("coords",u);if(1===s){o=u+1;let e=jj(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map(e=>"int "+e),m=_K("sourceLocR",o-1).concat("inIdx.r"),g=_K("sourceLocG",o-1).concat("inIdx.g"),y=_K("sourceLocB",o-1).concat("inIdx.b"),b=_K("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function EY(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=jx.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new CY(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=EY(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function AY(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=jx.computeOptimalWindowSize(s),o=new _Y(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=AY(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function $Y(e,t,n,r){let a=[n];if(jx.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ue().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&(o=e.unpackTensor(t),n.push(o));let[l,u]=jx.computeOutAndReduceShapes(o.shape,a),h=Ia.sizeFromShape(u),p=VX({inputs:{x:o},backend:e,attrs:{shape:[-1,h]}});n.push(p);let d=EY(e,p,r);n.push(d);let c=VX({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return AY(e,t,r)}function RY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ia.parseAxisParam(s,a.shape),o=jx.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=tY({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=jx.getInnerMostAxes(i.length,l.shape.length)),jx.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=$Y(n,l,i[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}var FY={kernelName:rt,backendName:"webgl",kernelFunc:RY};function DY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ia.parseAxisParam(s,a.shape),o=jx.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=tY({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=jx.getInnerMostAxes(i.length,l.shape.length)),jx.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=$Y(n,l,i[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}var MY={kernelName:at,backendName:"webgl",kernelFunc:DY},OY=WK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",LY=RX({opSnippet:OY}),zY={kernelName:st,backendName:"webgl",kernelFunc:LY},PY=WK+"return log(x + sqrt(x * x + 1.0));",BY=RX({opSnippet:PY}),WY={kernelName:it,backendName:"webgl",kernelFunc:BY},VY=WK+"\n  return atan(x);\n",UY=RX({opSnippet:VY}),GY={kernelName:ot,backendName:"webgl",kernelFunc:UY},HY=mX+"\n  return atan(a, b);\n",jY="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yX+"\n  return result;\n",qY=FX({opSnippet:HY,packedOpSnippet:jY}),KY={kernelName:ut,backendName:"webgl",kernelFunc:qY},XY=WK+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",YY=RX({opSnippet:XY}),ZY={kernelName:lt,backendName:"webgl",kernelFunc:YY},JY=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),v=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${b}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}},QY=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let k=4*Math.floor(s/4),I=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${w}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}};function eZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KH(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ia.assert(jx.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h=jx.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ia.arraysEqual(h.inShape,h.outShape))return xX({inputs:{x:a},backend:n});let p=new JY(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}var tZ={kernelName:ht,backendName:"webgl",kernelFunc:eZ};function nZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=[1,1,1],p=jx.computePool3DInfo(a.shape,s,i,h,o,l,u),d=new QY(p,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var rZ={kernelName:dt,backendName:"webgl",kernelFunc:nZ},aZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},sZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function iZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=[1,1,1],d=jx.computePool3DInfo(i.shape,o,l,p,u,h),c=new sZ(d);return n.runWebGLProgram(c,[a],i.dtype)}var oZ={kernelName:ct,backendName:"webgl",kernelFunc:iZ};function lZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;KH([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=jx.computePool2DInfo(i.shape,o,l,1,u),p=new aZ(h);return n.runWebGLProgram(p,[a],i.dtype)}var uZ={kernelName:pt,backendName:"webgl",kernelFunc:lZ};function hZ(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return aY({a:a,b:s,transposeA:i,transposeB:o,backend:n})}var pZ={kernelName:ft,backendName:"webgl",kernelFunc:hZ},dZ=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],jx.assertAndGetBroadcastShape(e,t),jx.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(jx.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(jx.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},cZ=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],jx.assertAndGetBroadcastShape(e,t),jx.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(jx.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(jx.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},fZ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;Ia.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Ia.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Ia.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new cZ(r.shape,a.shape,s.shape,h,p,l):new dZ(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},mZ={kernelName:sn,backendName:"webgl",kernelFunc:fZ},gZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=jj(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=bZ(this.rank),a=e.map((e,t)=>`sourceLoc.${yZ[t]} = start[${t}] + coords.${yZ[t]};`);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},yZ=["x","y","z","w","u","v"];function bZ(e){if(1===e)return"sourceLoc";if(e<=6)return yZ.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var xZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=jj(this.rank),n=_K("coords",this.rank),r=_K("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function wZ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=xx.computeFlatOffset(t,Ia.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function vZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=xx.parseSliceParams(a,s,i);if(xx.assertParamsValid(a,o,l),0===Ia.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=cK(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=xx.isSliceContinous(a.shape,o,l);if(u||!h){let e=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xZ(l):new gZ(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),wZ(a,o,l,n)}var kZ={kernelName:Sr,backendName:"webgl",kernelFunc:vZ},IZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Ia.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=jx.getReshaped(a.shape,s,o),u=jx.getPermuted(l.length,s.length),h=jx.getReshapedPermuted(a.shape,s,o),p=jx.getSliceBeginCoords(i,s.length),d=jx.getSliceSize(h,i,s.length),c=[],f=VX({inputs:{x:a},backend:n,attrs:{shape:l}}),m=tY({inputs:{x:f},backend:n,attrs:{perm:u}}),g=VX({inputs:{x:m},backend:n,attrs:{shape:h}}),y=vZ({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y},SZ={kernelName:mt,backendName:"webgl",kernelFunc:IZ};function NZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=Mq(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var TZ={kernelName:gt,backendName:"webgl",kernelFunc:NZ};function CZ(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=jx.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var _Z={kernelName:bt,backendName:"webgl",kernelFunc:CZ},EZ="return float(a != b);",AZ=FX({opSnippet:EZ,cpuKernelImpl:rK,dtype:"bool"}),$Z={kernelName:jn,backendName:"webgl",kernelFunc:AZ};function RZ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return xX({inputs:{x:a.complexTensorInfos.real},backend:n})}var FZ={kernelName:lr,backendName:"webgl",kernelFunc:RZ},DZ="return float(int(x));";function MZ(e,t){let n=new BK(e.shape,DZ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function OZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return xX({inputs:{x:a},backend:n});let e=Fd(a.shape),t=OZ({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=vX({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=RZ({inputs:{input:a},backend:n}),t=OZ({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ia.hasEncodingLoss(a.dtype,s)){let e=xX({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let e=n.texData.get(a.dataId).values,[t,r,i]=Lq(e,a.shape,a.dtype,s);return n.makeTensorInfo(t,r,i)}if("int32"===s)return MZ(a,n);if("bool"===s){let e=n.makeTensorInfo([],"bool",Ia.getTypedArrayFromDType("bool",1)),t=AZ({inputs:{a:a,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var LZ={kernelName:xt,backendName:"webgl",kernelFunc:OZ},zZ="return ceil(x);",PZ=RX({opSnippet:zZ,packedOpSnippet:zZ,cpuKernelImpl:zq}),BZ={kernelName:wt,backendName:"webgl",kernelFunc:PZ},WZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},VZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};function UZ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Ue().getBool("WEBGL_PACK_CLIP")?new VZ(s.shape):new WZ(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}var GZ={kernelName:vt,backendName:"webgl",kernelFunc:UZ},HZ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function jZ(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function qZ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new HZ(r.shape),i=[jZ(r,a.complexTensorInfos.real),jZ(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var KZ={kernelName:It,backendName:"webgl",kernelFunc:qZ},XZ=class{constructor(e){this.outputShape=[],this.outputShape=jx.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},YZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jx.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=jj(r),s=_K("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let e=o[f-1];p+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${ZZ(i,l,e)}),\n            vec2(${ZZ(u,l,e)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${ZZ(i,l,c)}),\n          vec2(${ZZ(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function ZZ(e,t,n){let r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function JZ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return xX({inputs:{x:a.complexTensorInfos.imag},backend:n})}var QZ={kernelName:cn,backendName:"webgl",kernelFunc:JZ};function eJ(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map(e=>RZ({inputs:{input:e},backend:n})),a=e.map(e=>JZ({inputs:{input:e},backend:n})),s=eJ(r,t,n),i=eJ(a,t,n),o=vX({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map(e=>{let r=[-1,Ia.sizeFromShape(e.shape.slice(t))];return VX({inputs:{x:e},backend:n,attrs:{shape:r}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=jx.computeOutShape(a.map(e=>e.shape),1),o=1===a[0].shape[0],l=Pq(s,i,r,o),u=jx.computeOutShape(e.map(e=>e.shape),t),h=n.makeTensorInfo(u,r,l);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}let s=e.filter(e=>Ia.sizeFromShape(e.shape)>0),i=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new BK(e[0].shape,qK):new eX(e[0].shape,qK);return n.runWebGLProgram(t,e,r)}let o=Ue().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(eJ(r,t,n))}let r=eJ(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){let e=new YZ(s.map(e=>e.shape),t);return n.runWebGLProgram(e,s,r)}let{tensors2D:l,outShape:u}=tJ(s,t,n),h=new XZ(l.map(e=>e.shape)),p=n.runWebGLProgram(h,l,r);l.forEach(e=>n.disposeIntermediateTensorInfo(e));let d=VX({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),d}function tJ(e,t,n){let r=jx.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>VX({inputs:{x:e},attrs:{shape:[-1,Ia.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}function nJ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ia.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);jx.assertParamsConsistent(i,s);let o=jx.computeOutShape(t.map(e=>e.shape),s);if(0===Ia.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Ia.sizeFromShape(e.shape)>0);return 1===l.length?xX({inputs:{x:l[0]},backend:n}):eJ(l,s,n)}var rJ={kernelName:St,backendName:"webgl",kernelFunc:nJ},aJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}},sJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},iJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tq(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)p+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)p+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){let t=2*m;if(p+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){let e=s%2===0?Ia.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},oJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=tq(this.outputShape.length);let{dataFormat:n}=t,r=YH(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function lJ(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function uJ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=!1,y=[];if(null!=s){let e=lJ(s.shape,f);null!=e&&(s=VX({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=a){let e=lJ(a.shape,f);null!=e&&(a=VX({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if((1!==d&&1!==c||!(p>rY))&&h.isPacked&&f&&null!=h.texture&&u[2]%2!==0&&Ia.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,Ia.assert(MH(h.shape,d.shape),()=>`packed reshape ${h.shape} to ${d.shape} isn't free`);let f=VX({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);let b=aY({a:d,b:f,backend:r,transposeA:m,transposeB:g,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);Ia.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=c,x.shape=n.outShape,l=xX({inputs:{x:b},backend:r}),l.shape=n.outShape,y.push(b)}else{let u=n.outHeight*n.outWidth,h=VX({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=VX({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=aY({a:f?h:p,b:f?p:h,transposeA:!f,transposeB:g,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=VX({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(h),y.push(p),y.push(d)}for(let b of y)r.disposeIntermediateTensorInfo(b);return l}function hJ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[n.batchSize,m,g],b=!0,x=!1,w=[];if(null!=s){let e=lJ(s.shape,f);null!=e&&(s=VX({inputs:{x:s},backend:r,attrs:{shape:e}}),w.push(s))}if(null!=a){let e=lJ(a.shape,f);null!=e&&(a=VX({inputs:{x:a},backend:r,attrs:{shape:e}}),w.push(a))}let v=VX({inputs:{x:t},backend:r,attrs:{shape:[1,m,Ia.sizeFromShape(t.shape)/m]}});w.push(v);let k=new oJ(y,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[e],"float32",I),N=VX({inputs:{x:S},backend:r,attrs:{shape:y}});w.push(S),w.push(N);let T=null!=a,C=null!=s,_="leakyrelu"===o,E=o?DX(o,!0):null,A=new MX(f?N.shape:v.shape,f?v.shape:N.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,T,E,C,_),$=f?[N,v]:[v,N];if(a&&$.push(a),C&&$.push(s),_){let e=r.makeTensorInfo([],"float32",Ia.createScalarValue(i,"float32"));$.push(e),w.push(e)}let R=r.runWebGLProgram(A,$,"float32"),F=VX({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});w.push(R);for(let D of w)r.disposeIntermediateTensorInfo(D);return F}function pJ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=jx.convertConv2DDataFormat(u),c=jx.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===d&&Ue().getBool("WEBGL_EXP_CONV")){let e=new iJ(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Ue().getBool("WEBGL_CONV_IM2COL"))t=hJ({x:s,filter:i,convInfo:c,backend:r});else{let e=new aJ(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=uJ({x:s,filter:i,convInfo:c,backend:r});let f=VX({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}var dJ={kernelName:Nt,backendName:"webgl",kernelFunc:pJ},cJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},fJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},mJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},gJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function yJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=jx.convertConv2DDataFormat(l),d=jx.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new cJ(d);return n.runWebGLProgram(c,[a,s],"float32")}var bJ={kernelName:Tt,backendName:"webgl",kernelFunc:yJ};function xJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=jx.convertConv2DDataFormat(u),d=jx.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new fJ(d);return n.runWebGLProgram(c,[a,s],"float32")}var wJ={kernelName:Ct,backendName:"webgl",kernelFunc:xJ};function vJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=jx.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new sJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var kJ={kernelName:_t,backendName:"webgl",kernelFunc:vJ};function IJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=jx.computeConv3DInfo(a.shape,l,i,1,o),h=new mJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var SJ={kernelName:Et,backendName:"webgl",kernelFunc:IJ};function NJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=jx.computeConv3DInfo(l,s.shape,o,1,i),h=new gJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var TJ,CJ={kernelName:At,backendName:"webgl",kernelFunc:NJ},_J=$X+"\n  return cos(x);\n",EJ=RX({opSnippet:_J}),AJ={kernelName:$t,backendName:"webgl",kernelFunc:EJ},$J="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",RJ=RX({opSnippet:$J}),FJ={kernelName:Rt,backendName:"webgl",kernelFunc:RJ},DJ=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+c],[b,x,w]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},MJ=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new DJ(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")},OJ={kernelName:Mt,backendName:"webgl",kernelFunc:MJ};(function(e){e.Prod="*",e.Sum="+"})(TJ||(TJ={}));var LJ=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===TJ.Prod?"1.0":"0.0",i=n?s:`getX(${zJ(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?"end + pow2 < "+o:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${jj(a)} coords = getOutputCoords();\n        int end = ${PJ(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${PJ(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${zJ(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function zJ(e,t,n){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function PJ(e,t,n){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function BJ(e,t,n,r,a,s){let i=t.shape.length,o=jx.getAxesPermutation([r],i),l=t;null!=o&&(l=tY({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=jx.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let h=l.shape[u],p=xX({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(h))-1;d++){let t=new LJ(e,l.shape,!1,s),r=[[d]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){let t=new LJ(e,l.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=jx.getUndoAxesPermutation(o),t=tY({inputs:{x:p},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),t}return p}function WJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return BJ(TJ.Prod,a,n,s,i,o)}var VJ={kernelName:Ft,backendName:"webgl",kernelFunc:WJ};function UJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return BJ(TJ.Sum,a,n,s,i,o)}var GJ={kernelName:Dt,backendName:"webgl",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Mq(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=Oq(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var jJ={kernelName:Ot,backendName:"webgl",kernelFunc:HJ},qJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function KJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=new qJ(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}var XJ={kernelName:Lt,backendName:"webgl",kernelFunc:KJ},YJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tq(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}},ZJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tq(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=h,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<h;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<h;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){let e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<h&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){let t=i%2===0?Ia.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};function JJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),Ia.assert(jx.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let p,d=jx.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);p=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new ZJ(d):new YJ(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}var QJ={kernelName:zt,backendName:"webgl",kernelFunc:JJ},eQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},tQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function nQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=jx.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new eQ(p);return n.runWebGLProgram(d,[a,s],"float32")}var rQ={kernelName:Pt,backendName:"webgl",kernelFunc:nQ};function aQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=jx.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new tQ(p);return n.runWebGLProgram(d,[a,s],"float32")}var sQ={kernelName:Bt,backendName:"webgl",kernelFunc:aQ},iQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};function oQ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Ia.sizeFromShape(r.shape),i=VX({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new iQ(s),l=n.runWebGLProgram(o,[i],i.dtype),u=VX({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var lQ={kernelName:Wt,backendName:"webgl",kernelFunc:oQ},uQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};function hQ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=jx.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new uQ(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=VX({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}var pQ={kernelName:Vt,backendName:"webgl",kernelFunc:hQ};function dQ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=jx.decodeEinsumEquation(a,s.length);jx.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=jx.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let e of h[m]){let t,{permutationIndices:r,expandDims:a}=jx.getEinsumPermutation(c,l[e]);jx.isIdentityPermutation(r)?t=s[e]:(t=tY({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ia.arraysEqual(t.shape,i)||(t=VX({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=PX({inputs:{a:t,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=QX({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var cQ={kernelName:jt,backendName:"webgl",kernelFunc:dQ},fQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",mQ="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",gQ=RX({opSnippet:fQ,packedOpSnippet:mQ}),yQ={kernelName:qt,backendName:"webgl",kernelFunc:gQ},bQ="return (b >= 1.0) ? a : a * (b + 1.0);",xQ="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",wQ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bX(xQ,r.shape,a.shape):new gX(bQ,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},vQ={kernelName:Kt,backendName:"webgl",kernelFunc:wQ},kQ="\n  return vec4(equal(a, b));\n",IQ="return float(a == b);",SQ=FX({opSnippet:IQ,packedOpSnippet:kQ,dtype:"bool",cpuKernelImpl:Bq}),NQ={kernelName:Yt,backendName:"webgl",kernelFunc:SQ},TQ=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${jx.ERF_P};\n  float a1 = ${jx.ERF_A1};\n  float a2 = ${jx.ERF_A2};\n  float a3 = ${jx.ERF_A3};\n  float a4 = ${jx.ERF_A4};\n  float a5 = ${jx.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,CQ=RX({opSnippet:TQ}),_Q={kernelName:Xt,backendName:"webgl",kernelFunc:CQ},EQ=$X+"\n  return exp(x);\n",AQ="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",$Q=RX({opSnippet:EQ,packedOpSnippet:AQ,cpuKernelImpl:Wq,dtype:"float32"}),RQ={kernelName:Zt,backendName:"webgl",kernelFunc:$Q};function FQ(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Ia.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),VX({inputs:{x:s},backend:r,attrs:{shape:o}})}var DQ={kernelName:Jt,backendName:"webgl",kernelFunc:FQ},MQ="return exp(x) - 1.0;",OQ=RX({opSnippet:MQ,packedOpSnippet:MQ,cpuKernelImpl:Vq}),LQ={kernelName:Qt,backendName:"webgl",kernelFunc:OQ},zQ=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function PQ(e,t,n){let r=n.texData.get(e.dataId),a=Ia.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=VX({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new zQ("real",l,t),h=new zQ("imag",l,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),c=n.runWebGLProgram(h,p,"float32"),f=vX({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let m=VX({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function BQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return PQ(r,!1,n)}var WQ={kernelName:en,backendName:"webgl",kernelFunc:BQ},VQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function UQ(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Ia.inferDtype(a),"string"===s){let e=Ia.getArrayFromDType(s,Ia.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new VQ(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var GQ,HQ={kernelName:tn,backendName:"webgl",kernelFunc:UQ},jQ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},qQ={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new jQ(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},KQ="return floor(x);",XQ=RX({opSnippet:KQ,packedOpSnippet:KQ,cpuKernelImpl:Uq}),YQ={kernelName:rn,backendName:"webgl",kernelFunc:XQ},ZQ="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",JQ="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",QQ=FX({opSnippet:ZQ,packedOpSnippet:JQ,dtype:"int32"}),e0={kernelName:an,backendName:"webgl",kernelFunc:QQ},t0=class{constructor(e){this.variableNames=["A"];let t=YH(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},n0=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=YH(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},r0={kernelName:sa,backendName:"webgl",kernelFunc:s0},a0=Ue().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function s0(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];if(o||i){let e=Ue().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==GQ||e!==a0)&&(a0=e,GQ=document.createElement("canvas").getContext("2d",{willReadFrequently:a0})),GQ.canvas.width=l,GQ.canvas.height=u,GQ.drawImage(a,0,0,l,u),a=GQ.canvas}let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=MG.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Ue().getBool("WEBGL_PACK")?new n0(p):new t0(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}function i0(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=jx.convertConv2DDataFormat(p),y=jx.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[],x=null!=o,w=null!=l,v="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=VX({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,p)),w&&e.push(t(l,p)),v){let t=r.makeTensorInfo([],"float32",Ia.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Ue().getBool("WEBGL_EXP_CONV")){let e=f?DX(f,!0):null,n=new iJ(y,x,e,w,v),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Ue().getBool("WEBGL_CONV_IM2COL"))t=hJ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?DX(f,!1):null,n=new aJ(y,x,e,w,v),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=uJ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=VX({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach(e=>r.disposeIntermediateTensorInfo(e)),I}var o0={kernelName:la,backendName:"webgl",kernelFunc:i0};function l0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),Ia.assert(jx.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g,y=jx.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?DX(d,b):null,w=[a,s],v=null!=i,k=null!=o,I="leakyrelu"===d;if(v&&w.push(i),k&&w.push(o),I){let e=n.makeTensorInfo([],"float32",Ia.createScalarValue(c,"float32"));w.push(e),f.push(e)}g=b?new ZJ(y,v,x,k,I):new YJ(y,v,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,w,"float32",S);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}var u0={kernelName:ua,backendName:"webgl",kernelFunc:l0},h0=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=jj(n.length),s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};function p0(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=Ia.sizeFromShape(r.shape),[l,u,h,p]=jx.prepareAndValidate(r,a),d=VX({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=VX({inputs:{x:r},backend:n,attrs:{shape:[Ia.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=Gq(e,t,r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new h0(i,p,[u,h],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=VX({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}var d0={kernelName:ln,backendName:"webgl",kernelFunc:p0},c0=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=jj(this.rank),r=f0(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function f0(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("index"):r.push(""+n[a]);return r.join()}function m0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Ia.parseAxisParam(i,a.shape)[0];if(Ue().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];Ia.assert(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}let u=jx.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Ia.sizeFromShape(s.shape),p=[],d=VX({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=VX({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=Hq(t,e,f);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new c0(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=VX({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}var g0={kernelName:on,backendName:"webgl",kernelFunc:m0},y0="return float(a > b);",b0="\n  return vec4(greaterThan(a, b));\n",x0=FX({opSnippet:y0,packedOpSnippet:b0,cpuKernelImpl:jq,dtype:"bool"}),w0={kernelName:un,backendName:"webgl",kernelFunc:x0},v0="return float(a >= b);",k0="\n  return vec4(greaterThanEqual(a, b));\n",I0=FX({opSnippet:v0,packedOpSnippet:k0,dtype:"bool",cpuKernelImpl:qq}),S0={kernelName:hn,backendName:"webgl",kernelFunc:I0};function N0(e){let{inputs:t,backend:n}=e,{input:r}=t;return PQ(r,!0,n)}var T0={kernelName:dn,backendName:"webgl",kernelFunc:N0},C0="return float(!isnan(x) && !isinf(x));",_0=RX({opSnippet:C0,dtype:"bool"}),E0={kernelName:fn,backendName:"webgl",kernelFunc:_0},A0="return float(isinf(x));",$0=RX({opSnippet:A0,dtype:"bool"}),R0={kernelName:mn,backendName:"webgl",kernelFunc:$0},F0="return float(isnan(x));",D0=RX({opSnippet:F0,dtype:"bool"}),M0={kernelName:gn,backendName:"webgl",kernelFunc:D0},O0="return float(a < b);",L0="\n  return vec4(lessThan(a, b));\n",z0=FX({opSnippet:O0,packedOpSnippet:L0,cpuKernelImpl:Kq,dtype:"bool"}),P0={kernelName:bn,backendName:"webgl",kernelFunc:z0},B0="return float(a <= b);",W0="\n  return vec4(lessThanEqual(a, b));\n",V0=FX({opSnippet:B0,packedOpSnippet:W0,cpuKernelImpl:Xq,dtype:"bool"}),U0={kernelName:xn,backendName:"webgl",kernelFunc:V0};function G0(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Yq(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var H0={kernelName:wn,backendName:"webgl",kernelFunc:G0},j0=$X+"\n  return x < 0.0 ? 0./0. : log(x);\n",q0="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",K0=RX({opSnippet:j0,packedOpSnippet:q0,cpuKernelImpl:Zq}),X0={kernelName:vn,backendName:"webgl",kernelFunc:K0},Y0=$X+"\n  return log(1.0 + x);\n",Z0=RX({opSnippet:Y0}),J0={kernelName:kn,backendName:"webgl",kernelFunc:Z0},Q0="return float(a >= 1.0 && b >= 1.0);",e1="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",t1=FX({opSnippet:Q0,packedOpSnippet:e1,dtype:"bool"}),n1={kernelName:In,backendName:"webgl",kernelFunc:t1},r1="return float(!(x >= 1.0));",a1=RX({opSnippet:r1}),s1={kernelName:Sn,backendName:"webgl",kernelFunc:a1},i1="return float(a >= 1.0 || b >= 1.0);",o1="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",l1=FX({opSnippet:i1,packedOpSnippet:o1,dtype:"bool"}),u1={kernelName:Nn,backendName:"webgl",kernelFunc:l1},h1=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},p1=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},d1=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new p1(a.shape,s,i,o,l):new h1(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},c1={kernelName:En,backendName:"webgl",kernelFunc:d1},f1=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},m1=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new f1(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)},g1={kernelName:An,backendName:"webgl",kernelFunc:m1};function y1(e,t,n,r){let a=Ia.sizeFromShape(t),s=Ia.sizeFromShape(e.shape)/a,i=VX({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=qX(i,e.dtype,"max",r),l=VX({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function b1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=Ia.parseAxisParam(s,a.shape),u=l,h=jx.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];let r=NK(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype);let s=n.texData.get(c.dataId);s.values=r}else c=ZX(a,h,n);u=jx.getInnerMostAxes(u.length,o)}jx.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=jx.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=jx.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=Jq(e,Ia.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype);let r=n.texData.get(f.dataId);r.values=t}else f=y1(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var x1={kernelName:$n,backendName:"webgl",kernelFunc:b1},w1=mX+"\n  return max(a, b);\n",v1="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yX+"\n  return result;\n",k1=FX({opSnippet:w1,packedOpSnippet:v1,cpuKernelImpl:Qq}),I1={kernelName:Rn,backendName:"webgl",kernelFunc:k1};function S1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KH(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ia.assert(jx.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h=jx.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ia.arraysEqual(h.inShape,h.outShape))return xX({inputs:{x:a},backend:n});let p=new JY(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}var N1={kernelName:Fn,backendName:"webgl",kernelFunc:S1};function T1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=[1,1,1],p=jx.computePool3DInfo(a.shape,s,i,h,o,u,l),d=new QY(p,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var C1={kernelName:Mn,backendName:"webgl",kernelFunc:T1},_1=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},E1=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function A1(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=[1,1,1],d=jx.computePool3DInfo(i.shape,o,l,p,u,h),c=new QY(d,"max",!0),f=n.runWebGLProgram(c,[i],i.dtype),m=new E1(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var $1={kernelName:On,backendName:"webgl",kernelFunc:A1};function R1(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;KH([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=jx.computePool2DInfo(o.shape,l,u,1,h,p),c=!0,f=new JY(d,"max",c),m=n.runWebGLProgram(f,[o],o.dtype),g=new _1(d),y=n.runWebGLProgram(g,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}var F1={kernelName:Dn,backendName:"webgl",kernelFunc:R1};function D1(e,t,n,r){let a=new JY(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new JY(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var M1={kernelName:Ln,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Ia.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];Ia.assert(jx.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let h=jx.computePool2DInfo(r.shape,a,s,u,i),[p,d]=D1(r,o,h,l);return[p,d]}};function O1(e,t,n,r){let a=Ia.sizeFromShape(t),s=Ia.sizeFromShape(e.shape)/a,i=VX({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=qX(i,"float32","mean",r),l=VX({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var L1={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=Ia.parseAxisParam(s,r.shape),u=l,h=jx.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let s=0;s<t.length;s++)t[s]=r.shape[h[s]];let n=NK(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype);let a=i.texData.get(f.dataId);a.values=n}else f=ZX(r,h,i);c.push(f),u=jx.getInnerMostAxes(u.length,o)}jx.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=jx.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=jx.expandShapeToKeepDim(m,l));let b=O1(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function z1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ia.parseAxisParam(s,a.shape),u=l,h=jx.getAxesPermutation(u,o),p=a;null!=h&&(p=tY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=jx.getInnerMostAxes(u.length,a.shape.length)),jx.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=jx.computeOutAndReduceShapes(p.shape,u),m=Ia.sizeFromShape(f),g=VX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=qX(g,g.dtype,"min",n);if(i){let e=jx.expandShapeToKeepDim(c,l);d=VX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=VX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var P1={kernelName:Pn,backendName:"webgl",kernelFunc:z1},B1=mX+"\n  return min(a, b);\n",W1="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+yX+"\n  return result;\n",V1=FX({opSnippet:B1,packedOpSnippet:W1,cpuKernelImpl:eK}),U1={kernelName:Bn,backendName:"webgl",kernelFunc:V1},G1=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=jj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},H1=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=jj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=_K("rc",r),l=_K("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},j1=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H1(r.shape,a,s):new G1(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},q1={kernelName:Wn,backendName:"webgl",kernelFunc:j1},K1="if (b == 0.0) return NAN;\n  return mod(a, b);",X1="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+yX+"\n  return result;\n",Y1=FX({opSnippet:K1,packedOpSnippet:X1}),Z1={kernelName:Vn,backendName:"webgl",kernelFunc:Y1},J1=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},Q1="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",e2="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t2=FX({opSnippet:Q1,packedOpSnippet:e2,checkOutOfBounds:!0}),n2={kernelName:Ht,backendName:"webgl",kernelFunc:t2},r2="return a - b;",a2=FX({opSnippet:r2,packedOpSnippet:r2,supportsComplex:!0,cpuKernelImpl:kK}),s2={kernelName:jr,backendName:"webgl",kernelFunc:a2};function i2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Ia.parseAxisParam([s],a.shape),o=b1({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=jx.expandShapeToKeepDim(o.shape,i),u=VX({inputs:{x:o},backend:n,attrs:{shape:l}}),h=a2({inputs:{a:a,b:u},backend:n}),p=$Q({inputs:{x:h},backend:n}),d=QX({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=VX({inputs:{x:d},backend:n,attrs:{shape:l}}),f=t2({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var o2={kernelName:Dr,backendName:"webgl",kernelFunc:i2};function l2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:i2({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new J1(u,h,s),d=[[i]],c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var u2={kernelName:Un,backendName:"webgl",kernelFunc:l2},h2=WK+"\n  return -x;\n",p2="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function d2(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=nK(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new eX(a.shape,p2):new BK(a.shape,h2),r.runWebGLProgram(t,[a],a.dtype)}var c2={kernelName:Hn,backendName:"webgl",kernelFunc:d2},f2=Jw.nonMaxSuppressionV3Impl;function m2(e){jx.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=f2(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var g2={kernelName:qn,backendName:"webgl",kernelFunc:m2},y2=Jw.nonMaxSuppressionV4Impl;function b2(e){jx.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=y2(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var x2={kernelName:Kn,backendName:"webgl",kernelFunc:b2},w2=Jw.nonMaxSuppressionV5Impl;function v2(e){jx.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=w2(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var k2={kernelName:Xn,backendName:"webgl",kernelFunc:v2},I2=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},S2=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=Ia.sizeFromShape(a.shape),h=new I2(u,i,o,l),p=VX({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(h,[p],s);n.disposeIntermediateTensorInfo(p);let c=[...a.shape,i],f=VX({inputs:{x:d},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),f},N2={kernelName:Zn,backendName:"webgl",kernelFunc:S2};function T2(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=RZ({inputs:{input:r},backend:n}),t=T2({inputs:{x:e},backend:n}),a=JZ({inputs:{input:r},backend:n}),s=T2({inputs:{x:a},backend:n}),i=vX({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return UQ({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var C2={kernelName:ra,backendName:"webgl",kernelFunc:T2};function _2(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let e=RZ({inputs:{input:r},backend:n}),t=_2({inputs:{x:e},backend:n}),a=JZ({inputs:{input:r},backend:n}),s=T2({inputs:{x:a},backend:n}),i=vX({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return UQ({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var E2={kernelName:Yn,backendName:"webgl",kernelFunc:_2};function A2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FQ({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ia.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ia.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=FQ({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=nJ({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}var $2={kernelName:Jn,backendName:"webgl",kernelFunc:A2},R2=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=jj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},F2=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=jj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=_K("rc",r),l=_K("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===r?2:4;f<m;f++)c+=`\n        ${p[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},D2=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===Ia.sizeFromShape(a.shape)){let e=s.map((e,t)=>e[0]+a.shape[t]+e[1]);return UQ({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}let o=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new F2(a.shape,s,i):new R2(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},M2={kernelName:Qn,backendName:"webgl",kernelFunc:D2},O2="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",L2="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+yX+"\n  return result;\n",z2=FX({opSnippet:O2,packedOpSnippet:L2}),P2={kernelName:tr,backendName:"webgl",kernelFunc:z2};function B2(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=Ia.parseAxisParam(i,s.shape),p=h,d=jx.getAxesPermutation(p,l),c=s;if(null!=d&&(c=tY({inputs:{x:s},backend:r,attrs:{perm:d}}),p=jx.getInnerMostAxes(p.length,l),u.push(c)),jx.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=aK(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=jx.computeOutAndReduceShapes(c.shape,p),a=Ia.sizeFromShape(n),i=VX({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=_s(s.dtype),l=qX(i,o,"prod",r);t=VX({inputs:{x:l},backend:r,attrs:{shape:e}}),u.push(i),u.push(l)}if(o){u.push(t);let e=jx.expandShapeToKeepDim(t.shape,h);t=VX({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),t}var W2={kernelName:rr,backendName:"webgl",kernelFunc:B2};function V2(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.readSync(e.dataId)),u=a.map(e=>e.shape),h=n.readSync(s.dataId),p=n.readSync(i.dataId),[d,c,f]=sK(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var U2={kernelName:ar,backendName:"webgl",kernelFunc:V2};function G2(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=iK(i,r.shape,r.dtype,o,a.shape,l,s.shape),p=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([h.length],r.dtype,h);return[p,d]}var H2={kernelName:sr,backendName:"webgl",kernelFunc:G2};function j2(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),p=n.readSync(i.dataId),d=o.map(e=>n.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=oK(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var q2={kernelName:ir,backendName:"webgl",kernelFunc:j2},K2=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=lK(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},X2={kernelName:or,backendName:"webgl",kernelFunc:K2},Y2="return 1.0 / x;",Z2=RX({opSnippet:Y2}),J2={kernelName:ur,backendName:"webgl",kernelFunc:Z2},Q2=WK+"\n  return (x < 0.0) ? 0.0 : x;\n",e3="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",t3=RX({opSnippet:Q2,packedOpSnippet:e3}),n3={kernelName:hr,backendName:"webgl",kernelFunc:t3},r3=WK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",a3="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",s3=RX({opSnippet:r3,packedOpSnippet:a3}),i3={kernelName:gr,backendName:"webgl",kernelFunc:s3},o3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},l3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};function u3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new l3(a.shape,l,u,s,i):new o3(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}var h3={kernelName:fr,backendName:"webgl",kernelFunc:u3},p3=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function d3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new p3(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var c3={kernelName:mr,backendName:"webgl",kernelFunc:d3},f3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},m3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};function g3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new m3(a.shape,l,u,s,i):new f3(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}var y3={kernelName:dr,backendName:"webgl",kernelFunc:g3},b3=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function x3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new b3(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var w3={kernelName:cr,backendName:"webgl",kernelFunc:x3},v3=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),s=jj(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},k3=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=_K("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=jj(n);function o(e){return p(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",p(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",p(e)}function h(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",p(e)}function p(t){let n=e.map((e,n)=>d(n,t)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function d(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${a}){\n            result.g = ${l(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${u(r.slice())};\n            if(${a}) {\n              result.a = ${h(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};function I3(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Ia.parseAxisParam(s,a.shape);if(0===i)return xX({inputs:{x:a},backend:n});let l=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new k3(a.shape,o):new v3(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var S3={kernelName:yr,backendName:"webgl",kernelFunc:I3},N3=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},T3={kernelName:ia,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new N3(r.shape,s),[u,h]=jx.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,h,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},C3="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",_3=RX({opSnippet:C3}),E3={kernelName:br,backendName:"webgl",kernelFunc:_3},A3="return inversesqrt(x);",$3=RX({opSnippet:A3,cpuKernelImpl:uK}),R3={kernelName:xr,backendName:"webgl",kernelFunc:$3},F3=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=jj(a.length),l=jj(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};function D3(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=jx.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=VX({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=VX({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new F3(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=VX({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}var M3={kernelName:wr,backendName:"webgl",kernelFunc:D3},O3=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Ue().getNumber("WEBGL_VERSION")?a:s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};function L3(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new O3(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var z3={kernelName:vr,backendName:"webgl",kernelFunc:L3},P3=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}let s=jj(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};function B3(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new P3(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Cs(a.dtype,s.dtype))}var W3={kernelName:kr,backendName:"webgl",kernelFunc:B3},V3=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${jx.SELU_SCALEALPHA};\n  float scale = ${jx.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,U3=RX({opSnippet:V3}),G3={kernelName:Ir,backendName:"webgl",kernelFunc:U3},H3=$X+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",j3="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",q3=RX({opSnippet:H3,packedOpSnippet:j3,cpuKernelImpl:pK}),K3={kernelName:_r,backendName:"webgl",kernelFunc:q3},X3="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Y3=RX({opSnippet:X3}),Z3={kernelName:Cr,backendName:"webgl",kernelFunc:Y3},J3=$X+"\n  return sin(x);\n",Q3=RX({opSnippet:J3}),e4={kernelName:Nr,backendName:"webgl",kernelFunc:Q3},t4="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",n4=RX({opSnippet:t4}),r4={kernelName:Tr,backendName:"webgl",kernelFunc:n4},a4="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",s4=RX({opSnippet:a4}),i4={kernelName:Er,backendName:"webgl",kernelFunc:s4},o4=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Ia.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],h=D2({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=jx.getReshaped(h.shape,s,o,!1),d=jx.getPermuted(p.length,s.length,!1),c=jx.getReshapedPermuted(h.shape,s,o,!1),f=VX({inputs:{x:h},backend:n,attrs:{shape:p}}),m=tY({inputs:{x:f},backend:n,attrs:{perm:d}}),g=VX({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),g},l4={kernelName:Rr,backendName:"webgl",kernelFunc:o4};function u4(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=fK(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var h4={kernelName:Mr,backendName:"webgl",kernelFunc:u4};function p4(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=mK(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var d4={kernelName:Or,backendName:"webgl",kernelFunc:p4};function c4(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=gK(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}var f4={kernelName:Lr,backendName:"webgl",kernelFunc:c4};function m4(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=gK(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}var g4={kernelName:zr,backendName:"webgl",kernelFunc:m4};function y4(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=jx.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=Ia.decodeString(n.readSync(i.dataId)[0]),f=hK(e,t,o,d,h,u,l,p,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new F3(u,l,a.shape.length,s.shape.length,p,[d,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=VX({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var b4={kernelName:Pr,backendName:"webgl",kernelFunc:y4};function x4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ia.parseAxisParam(i,a.shape)[0],l=jx.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let r=vZ({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r})}var w4={kernelName:Fr,backendName:"webgl",kernelFunc:x4},v4="return sqrt(x);",k4=RX({opSnippet:v4,packedOpSnippet:v4,cpuKernelImpl:yK}),I4={kernelName:Ar,backendName:"webgl",kernelFunc:k4},S4="return x * x;",N4=RX({opSnippet:S4}),T4={kernelName:Wr,backendName:"webgl",kernelFunc:N4},C4="return (a - b) * (a - b);",_4=FX({opSnippet:C4,packedOpSnippet:C4}),E4={kernelName:Br,backendName:"webgl",kernelFunc:_4};function A4({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=WK+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new BK(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var $4={kernelName:aa,backendName:"webgl",kernelFunc:A4},R4=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=jj(n.length),s=jj(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};function F4(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=xx.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=VX({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){Ia.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: "+s.shape.length);let e=xx.computeOutShape(x,w,v),n=vZ({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=VX({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=go(s.shape,s.dtype,e),a=bK(f,n,v,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new R4(x,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=VX({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}var D4={kernelName:Vr,backendName:"webgl",kernelFunc:F4};function M4(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.readSync(h.dataId),c=n.readSync(p.dataId),[f,m]=xK(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var O4={kernelName:Ur,backendName:"webgl",kernelFunc:M4};function L4(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,h,p]=wK(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var z4={kernelName:Gr,backendName:"webgl",kernelFunc:L4};function P4(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=vK(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var B4={kernelName:Hr,backendName:"webgl",kernelFunc:P4},W4="return tan(x);",V4=RX({opSnippet:W4}),U4={kernelName:qr,backendName:"webgl",kernelFunc:V4},G4="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",H4=RX({opSnippet:G4}),j4={kernelName:Kr,backendName:"webgl",kernelFunc:H4},q4=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=jj(this.rank),a=K4(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function K4(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function X4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>Ia.decodeString(e)):e,r=go(a.shape,a.dtype,t),i=IK(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new q4(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var Y4={kernelName:Xr,backendName:"webgl",kernelFunc:X4},Z4=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},J4=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function Q4(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function e6(e){let t=1;for(;t<e;)t*=2;return t}function t6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ue().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ue().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let e=n.readSync(a.dataId),[t,r]=SK(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,UQ({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=Ia.sizeFromShape(u)/h,m=VX({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&Q4(n,c);let g=e6(s),y=e6(h),b=null,x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{let a=x(),s=new Z4(r),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),Q4(n,o)};for(let N=1;N<g;N*=2){let e=2*N;for(let t=N;t>=1;t/=2)w(e,t,[f,y])}for(let N=y;N>g;N/=2){let e=x(),t=new J4([f,N/2]),r=[[h],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(t,e,"int32",r),Q4(n,a);let s=g/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,b.shape)}let v=b;b=vZ({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),Q4(n,v);let k=m0({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Q4(n,m);let I=u.slice(0,-1);I.push(s),v=b,b=VX({inputs:{x:b},attrs:{shape:I},backend:n}),Q4(n,v);let S=k;return k=VX({inputs:{x:k},attrs:{shape:I},backend:n}),Q4(n,S),[k,b]}var n6={kernelName:Yr,backendName:"webgl",kernelFunc:t6},r6=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};function a6(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=new r6(p,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var s6={kernelName:Zr,backendName:"webgl",kernelFunc:a6};function i6(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;KH(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=TK(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var o6={kernelName:Qr,backendName:"webgl",kernelFunc:i6};function l6(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let m=0;m<o;m++)m!==s&&(u[h++]=i.shape[m]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let e=vZ({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),t=VX({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,p.push(e)}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var u6={kernelName:ea,backendName:"webgl",kernelFunc:l6},h6=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=4*Math.floor(n/4),h=n%4,p="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function p6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=jx.getAxesPermutation([u],o),p=a;null!=h&&(p=tY({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=jx.getInnerMostAxes(1,o)[0]);let d=jx.segment_util.computeOutShape(p.shape,u,i),c=Ia.sizeFromShape([p.shape[u]]),f=VX({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=_s(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=jx.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new h6(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=K2({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=X4({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=g(f,"unsortedSegmentSum",s,m,i),b=VX({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(null!=h){l.push(b);let e=jx.getUndoAxesPermutation(h);x=tY({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}var d6,c6,f6,m6={kernelName:ta,backendName:"webgl",kernelFunc:p6},g6=[iY,uY,dY,mY,bY,kY,SY,TY,FY,MY,zY,WY,GY,KY,ZY,tZ,rZ,oZ,uZ,pZ,mZ,SZ,TZ,_Z,LZ,BZ,GZ,kX,KZ,rJ,dJ,bJ,wJ,kJ,SJ,CJ,AJ,FJ,OJ,VJ,GJ,jJ,XJ,QJ,rQ,sQ,lQ,pQ,cQ,yQ,vQ,NQ,_Q,RQ,DQ,LQ,WQ,HQ,qQ,YQ,e0,r0,o0,u0,d0,g0,w0,S0,wX,T0,QZ,E0,R0,M0,TX,P0,U0,H0,X0,J0,n1,s1,u1,c1,g1,x1,I1,N1,C1,$1,F1,M1,L1,P1,U1,q1,Z1,u2,BX,c2,g2,x2,k2,$Z,N2,E2,$2,M2,P2,AX,W2,U2,H2,q2,X2,FZ,n2,J2,n3,i3,UX,h3,c3,y3,w3,S3,T3,E3,R3,M3,z3,W3,G3,K3,Z3,e4,r4,kZ,o2,i4,l4,h4,d4,f4,g4,b4,w4,I4,T4,E4,$4,D4,O4,z4,B4,s2,eY,U4,j4,Y4,n6,s6,nY,o6,u6,m6,C2];for(let t of g6)ya(t);function y6(e){f6=e.wasm.cwrap(oa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function b6(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=c6[h];if(null==g)throw new Error(h+" activation not yet supported for FusedConv2D in the wasm backend.");let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=mh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return f6(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,v),w}(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(d6||(d6={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(c6||(c6={}));var x6={kernelName:oa,backendName:"wasm",setupFunc:y6,kernelFunc:b6};function w6(e,t){let n;function r(t){n=t.wasm.cwrap(e,null,["number","number","number"])}function a(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===Ia.sizeFromShape(i.shape)||n(s,d6[a.dtype],o),i}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var v6=w6(Ye);function k6(e,t,n){let r;function a(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,h=jx.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(h,u);if(0===Ia.sizeFromShape(h))return p;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,d6[s.dtype],f),p}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var I6,S6=!0,N6=k6(Qe,S6);function T6(e){I6=e.wasm.cwrap(et,null,["array","number","number","number"])}function C6(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Ia.sizeFromShape(r.shape))return r;let a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return I6(s,a.length,d6[r.dtype],i),r}var _6={kernelName:et,backendName:"wasm",setupFunc:T6,kernelFunc:C6};function E6(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return si(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var A6,$6={kernelName:pn,backendName:"wasm",kernelFunc:E6};function R6(e){A6=e.wasm.cwrap(Jr,null,["number","array","number","number","number","array","number"])}function F6(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=M6(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=D6(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=E6({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return A6(h,c,l.shape.length,d6[l.dtype],p,d,s.length),u}function D6(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function M6(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}var O6,L6={kernelName:Jr,backendName:"wasm",kernelFunc:F6,setupFunc:R6};function z6(e,t,n){let r=e.shape,a=e.shape.length,s=Ia.parseAxisParam(t,r),i=s,o=jx.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=jx.getInnerMostAxes(i.length,a),l=F6({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function P6(e){O6=e.wasm.cwrap(tt,null,["number, number, number"])}function B6(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=z6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;jx.assertAxesAreInnerMostDims("all",h,c);let[f,m]=jx.computeOutAndReduceShapes(l.shape,h),g=Ia.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ia.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;O6(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=jx.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var W6,V6={kernelName:tt,backendName:"wasm",setupFunc:P6,kernelFunc:B6};function U6(e){W6=e.wasm.cwrap(nt,null,["number, number, number"])}function G6(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=z6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;jx.assertAxesAreInnerMostDims("any",h,c);let[f,m]=jx.computeOutAndReduceShapes(l.shape,h),g=Ia.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ia.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;W6(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=jx.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var H6,j6={kernelName:nt,backendName:"wasm",setupFunc:U6,kernelFunc:G6};function q6(e){H6=e.wasm.cwrap(rt,null,["number","number","number","number","number"])}function K6(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=z6(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=Ia.sizeFromShape(c.shape),g=l.shape[h[0]];return H6(o,d6[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c}var X6,Y6={kernelName:rt,backendName:"wasm",kernelFunc:K6,setupFunc:q6};function Z6(e){X6=e.wasm.cwrap(ht,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function J6(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=jx.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let w=r.makeOutput(h.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return X6(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v),w}var Q6={kernelName:ht,backendName:"wasm",setupFunc:Z6,kernelFunc:J6};function e5(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Ia.sizeFromShape(r.shape),i=Ia.inferFromImplicitShape(a,s);return Ia.assert(s===Ia.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var t5,n5={kernelName:pr,backendName:"wasm",kernelFunc:e5};function r5(e){t5=e.wasm.cwrap(ft,null,["number","array","number","number","array","number","number","number","number"])}function a5(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ia.sizeFromShape(f),y=Ia.sizeFromShape(m),b=mh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ia.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,h,d]:[g,d,h],w=o?[y,c,p]:[y,p,c],v=e5({inputs:{x:a},backend:n,attrs:{shape:x}}),k=e5({inputs:{x:s},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?v.shape[2]:v.shape[1],T=o?k.shape[1]:k.shape[2],C=Math.max(g,y),_=n.makeOutput([C,N,T],v.dtype),E=n.dataIdMap.get(_.dataId).id,A=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(k.shape).buffer);return t5(I,A,v.shape.length,S,$,k.shape.length,i,o,E),n.disposeData(v.dataId),n.disposeData(k.dataId),_.shape=b,_}var s5={kernelName:ft,backendName:"wasm",setupFunc:r5,kernelFunc:a5};function i5(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=xx.parseSliceParams(t,n,r),o=xx.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=Ia.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=xx.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+Ia.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+Ia.sizeFromShape(i))),u}if("string"===t.dtype){let e=cz(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)o5(l,h[0],d,s,i);else if(3===c)l5(l,h[0],h[1],d,s,i);else if(4===c)u5(l,h[0],h[1],h[2],d,s,i);else{let e=cz(l,s,i,t.shape,t.dtype);d.set(e)}return u}function o5(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let r=u*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}function l5(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let d=o;d<h;d++)for(let a=l;a<p;a++){let o=d*t+a*n+u;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}function u5(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let m=l;m<p;m++)for(let s=u;s<d;s++)for(let l=h;l<c;l++){let u=m*t+s*n+l*r+f;a.set(e.subarray(u,u+i[3]),o),o+=i[3]}}var h5={kernelName:Sr,backendName:"wasm",kernelFunc:i5};function p5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((e,t)=>e*t),l=jx.getReshaped(a.shape,s,o),u=jx.getPermuted(l.length,s.length),h=jx.getReshapedPermuted(a.shape,s,o),p=jx.getSliceBeginCoords(i,s.length),d=jx.getSliceSize(h,i,s.length),c=e5({inputs:{x:a},backend:n,attrs:{shape:l}}),f=F6({inputs:{x:c},backend:n,attrs:{perm:u}}),m=e5({inputs:{x:f},backend:n,attrs:{shape:h}}),g=i5({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),g}var d5={kernelName:mt,backendName:"wasm",kernelFunc:p5};function c5(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var f5,m5={kernelName:xt,backendName:"wasm",kernelFunc:c5},g5=w6(wt);function y5(e){f5=e.wasm.cwrap(vt,null,["number","number","number","number"])}function b5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return f5(o,s,i,u),l}var x5={kernelName:vt,backendName:"wasm",setupFunc:y5,kernelFunc:b5};function w5(e){let{inputs:t,backend:n}=e,r=Ia.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(e=>e.shape);jx.assertParamsConsistent(a,r);let s=jx.computeOutShape(t.map(e=>e.shape),r),i=t.filter(e=>Ia.sizeFromShape(e.shape)>0);if(1===i.length)return E6({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===Ia.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map(e=>{let t=[-1,Ia.sizeFromShape(e.shape.slice(r))];return e5({inputs:{x:e},backend:n,attrs:{shape:t}})}),a=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));s=jx.computeOutShape(e.map(e=>e.shape),1);let l=1===e[0].shape[0],u=GO(a,s,t[0].dtype,l),h=jx.computeOutShape(i.map(e=>e.shape),r);o.shape=h;let p=n.dataIdMap.get(o.dataId);return p.stringBytes=jx.fromStringArrayToUint8(u),e.forEach(e=>n.disposeData(e.dataId)),o}let l=Ia.sizeFromShape(i[0].shape.slice(0,r)),u=0,h=i.map(e=>{let t=Ia.sizeFromShape(e.shape.slice(r));return u+=t,t}),p=i.map(e=>n.typedArrayFromHeap(e)),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let e=c*u;for(let t=0;t<p.length;t++){let n=h[t],r=c*n,a=p[t].subarray(r,r+n);d.set(a,e),e+=n}}return o}var v5,k5={kernelName:St,backendName:"wasm",kernelFunc:w5};function I5(e){v5=e.wasm.cwrap(Nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function S5(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=jx.convertConv2DDataFormat(d),f=jx.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return v5(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,C,v,k,I,S,N,T,E),_}var N5,T5={kernelName:Nt,backendName:"wasm",setupFunc:I5,kernelFunc:S5};function C5(e){N5=e.wasm.cwrap(Ct,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _5(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=1,d=jx.convertConv2DDataFormat(l),c=jx.computeConv2DInfo(h,s.shape,i,p,o,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:I,strideWidth:S}=c,N=m-1-c.padInfo.top,T=g-1-c.padInfo.left,C="channelsLast"===c.dataFormat,_=Ia.computeStrides(c.inShape),E=Ia.computeStrides(a.shape),[A,$,R]=Ia.computeStrides(s.shape),F=_[0],D=C?_[1]:_[2],M=C?_[2]:1,O=C?1:_[1],L=E[0],z=C?E[1]:E[2],P=C?E[2]:1,B=C?1:E[1],W=t.makeOutput(c.inShape,"float32"),V=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return N5(U,G,f,m,g,b,x,y,v,k,w,I,S,N,T,A,$,R,F,D,M,O,L,z,P,B,V),W}var E5,A5,$5={kernelName:Ct,backendName:"wasm",setupFunc:C5,kernelFunc:_5},R5=w6($t),F5=w6(Rt);function D5(e){A5=e.wasm.cwrap(Mt,null,["number","number","number","number","array","number","number","number","number","number"])}function M5(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=c5({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return A5(g,y,b,p,v,d,c,E5[s],i,w),null!=t&&n.disposeData(t.dataId),x}(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(E5||(E5={}));var O5,L5={kernelName:Mt,backendName:"wasm",setupFunc:D5,kernelFunc:M5};function z5(e){O5=e.wasm.cwrap(Ft,null,["number","number","number","number","number","number"])}function P5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ia.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=jx.getAxesPermutation([s],l),h=a;null!==u&&(h=F6({inputs:{x:a},attrs:{perm:u},backend:n}));let p=jx.getInnerMostAxes(1,l)[0];jx.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;O5(f,i?1:0,o?1:0,c,m,d6[a.dtype]);let g=d;if(null!==u){let e=jx.getUndoAxesPermutation(u);g=F6({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}var B5,W5={kernelName:Ft,backendName:"wasm",setupFunc:z5,kernelFunc:P5};function V5(e){B5=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number"])}function U5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ia.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=jx.getAxesPermutation([s],l),h=a;null!==u&&(h=F6({inputs:{x:a},attrs:{perm:u},backend:n}));let p=jx.getInnerMostAxes(1,l)[0];jx.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;B5(f,i?1:0,o?1:0,c,m,d6[a.dtype]);let g=d;if(null!==u){let e=jx.getUndoAxesPermutation(u);g=F6({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}var G5,H5={kernelName:Dt,backendName:"wasm",setupFunc:V5,kernelFunc:U5};function j5(e){G5=e.wasm.cwrap(Lt,null,["number","number","number","array","number","array","array","number","number"])}function q5(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(Ia.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Ia.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return G5(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,w),m}var K5,X5={kernelName:Lt,backendName:"wasm",setupFunc:j5,kernelFunc:q5};function Y5(e){K5=e.wasm.cwrap(zt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Z5(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=jx.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,v=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(c.outShape,"float32"),_=r.dataIdMap.get(C.dataId).id;return K5(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,_),C}var J5={kernelName:zt,backendName:"wasm",setupFunc:Y5,kernelFunc:Z5},Q5=w6(qt),e8=!1,t8=k6(Yt,e8,"bool"),n8=w6(Zt,"float32");function r8(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ia.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),e5({inputs:{x:a},backend:r,attrs:{shape:o}})}var a8={kernelName:Jt,backendName:"wasm",kernelFunc:r8};function s8(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var i8,o8={kernelName:tn,backendName:"wasm",kernelFunc:s8};function l8(e){i8=e.wasm.cwrap(nn,null,["number","number","number","number","number","number"])}function u8(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return i8(s,o,l,u,h,i),a}var h8,p8={kernelName:nn,backendName:"wasm",kernelFunc:u8,setupFunc:l8},d8=w6(rn),c8=!1,f8=k6(an,c8);function m8(e){h8=e.wasm.cwrap(sn,null,["number","number","number","number","number","number","number"])}function g8(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Ia.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return h8(h,p,d,c,f,a,g),m}var y8,b8={kernelName:sn,backendName:"wasm",setupFunc:m8,kernelFunc:g8};function x8(e){y8=e.wasm.cwrap(la,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function w8(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=jx.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=c6[c];if(null==g)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return y8(y,F,D,M,b,v,k,w,I,S,N,T,R,C,_,E,A,$,x,g,z,f||0,L),O}var v8,k8={kernelName:la,backendName:"wasm",setupFunc:x8,kernelFunc:w8};function I8(e){v8=e.wasm.cwrap(ua,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function S8(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=jx.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=c6[c];if(null==g)throw new Error(c+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return v8(y,F,D,M,b,v,k,w,I,S,N,T,R,C,_,E,A,$,x,g,z,f||0,L),O}var N8,T8={kernelName:ua,backendName:"wasm",setupFunc:I8,kernelFunc:S8};function C8(e){N8=e.wasm.cwrap(ln,null,["number","number","number","number","number","number","array","number"])}function _8(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=yx.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return N8(d,d6[r.dtype],c,i,p,o,f,m),u}var E8,A8={kernelName:ln,backendName:"wasm",setupFunc:C8,kernelFunc:_8};function $8(e){E8=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function R8(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=Ia.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),h=a.shape[l];for(let I=0;I<u.length;++I){let e=u[I];Ia.assert(e<=h-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`)}let p=jx.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=e5({inputs:{x:a},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=Ia.sizeFromShape(s.shape),f=e5({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,a.dtype);if(0===Ia.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(Ia.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(Ia.computeStrides(m)).buffer);return E8(b,d6[a.dtype],v,y,x,p.batchSize,k,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var F8,D8={kernelName:on,backendName:"wasm",setupFunc:$8,kernelFunc:R8},M8=!1,O8=k6(un,M8,"bool"),L8=!1,z8=k6(hn,L8,"bool"),P8=w6(gn,"bool");function B8(e){F8=e.wasm.cwrap(yn,null,["number","number","number","number"])}function W8(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==Ia.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;F8(a,d6[t.dtype],n,e)}return s}var V8,U8={kernelName:yn,backendName:"wasm",setupFunc:B8,kernelFunc:W8},G8=!1,H8=k6(bn,G8,"bool"),j8=!1,q8=k6(xn,j8,"bool"),K8=w6(vn),X8=!1,Y8=k6(In,X8,"bool"),Z8=w6(Sn),J8=!1,Q8=k6(Nn,J8,"bool"),e7=!1,t7=k6(Tn,e7,"bool");function n7(e){V8=e.wasm.cwrap($n,null,["number","number","number","number"])}function r7(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=z6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;jx.assertAxesAreInnerMostDims("max",h,c);let[f,m]=jx.computeOutAndReduceShapes(l.shape,h),g=Ia.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ia.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;V8(o,d6[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=jx.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var a7,s7={kernelName:$n,backendName:"wasm",setupFunc:n7,kernelFunc:r7},i7=!1,o7=k6(Rn,i7);function l7(e){a7=e.wasm.cwrap(Fn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function u7(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;Ia.assert("float32"===a.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=jx.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,w=h.strideWidth,v=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return a7(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w,v,k,S),I}var h7,p7={kernelName:Fn,backendName:"wasm",setupFunc:l7,kernelFunc:u7};function d7(e){h7=e.wasm.cwrap(zn,null,["number, number, number"])}function c7(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=z6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=jx.getInnerMostAxes(f.length,u.shape.length))}jx.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=jx.computeOutAndReduceShapes(u.shape,f),y=Ia.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=c5({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==Ia.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;h7(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=jx.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}var f7,m7={kernelName:zn,backendName:"wasm",setupFunc:d7,kernelFunc:c7};function g7(e){f7=e.wasm.cwrap(Pn,null,["number","number","number","number"])}function y7(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=z6(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;jx.assertAxesAreInnerMostDims("min",p,f);let[m,g]=jx.computeOutAndReduceShapes(u.shape,p),y=Ia.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ia.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;f7(l,d6[i.dtype],y,e)}if(c&&t.disposeData(h.dataId),s){let e=jx.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var b7,x7,w7={kernelName:Pn,backendName:"wasm",setupFunc:g7,kernelFunc:y7},v7=!1,k7=k6(Bn,v7);function I7(e){x7=e.wasm.cwrap(Wn,null,["number","array","number","number","array","array","number","number"])}function S7(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map(e=>e[0]),p=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return x7(i,u,t.shape.length,d6[t.dtype],d,c,b7[a],l),o}(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(b7||(b7={}));var N7,T7={kernelName:Wn,backendName:"wasm",kernelFunc:S7,setupFunc:I7},C7=!0,_7=k6(Gn,C7),E7=w6(Hn);function A7(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}function $7(e){N7=e.wasm.cwrap(qn,"number",["number","number","number","number","number"])}function R7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=N7(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=A7(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var F7,D7={kernelName:qn,backendName:"wasm",setupFunc:$7,kernelFunc:R7};function M7(e){F7=e.wasm.cwrap(Kn,"number",["number","number","number","number","number","bool"])}function O7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=F7(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=A7(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var L7,z7={kernelName:Kn,backendName:"wasm",setupFunc:M7,kernelFunc:O7};function P7(e){L7=e.wasm.cwrap(Xn,"number",["number","number","number","number","number","number"])}function B7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=L7(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=A7(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([f],"float32",m);return[y,b]}var W7,V7={kernelName:Xn,backendName:"wasm",setupFunc:P7,kernelFunc:B7},U7=!1,G7=k6(jn,U7,"bool");function H7(e){W7=e.wasm.cwrap(Zn,null,["number","number","number","number","number"])}function j7(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),h=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(a.dataId).id;return W7(p,i,o,l,h),u}var q7={kernelName:Zn,backendName:"wasm",setupFunc:H7,kernelFunc:j7};function K7(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var X7={kernelName:Yn,backendName:"wasm",kernelFunc:K7};function Y7(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return r8({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{Ia.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ia.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=r8({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),u=w5({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeData(e.dataId)),u}var Z7,J7={kernelName:Jn,backendName:"wasm",kernelFunc:Y7};function Q7(e){Z7=e.wasm.cwrap(Qn,null,["number","array","number","number","array","array","number","number"])}function e9(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]);if(0===Ia.sizeFromShape(t.shape))return s8({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map(e=>e[0]),p=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return Z7(i,u,t.shape.length,d6[t.dtype],d,c,a,l),o}var t9,n9={kernelName:Qn,backendName:"wasm",kernelFunc:e9,setupFunc:Q7},r9=!1,a9=k6(tr,r9);function s9(e){t9=e.wasm.cwrap(nr,null,["number","number","number"])}function i9(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=c5({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let h=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(h.dataId).id;return t9(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),h}var o9,l9={kernelName:nr,backendName:"wasm",setupFunc:s9,kernelFunc:i9};function u9(e){o9=e.wasm.cwrap(rr,null,["number","number","number","number"])}function h9(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=z6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=jx.getInnerMostAxes(f.length,u.shape.length))}jx.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=jx.computeOutAndReduceShapes(u.shape,f),y=Ia.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ia.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;o9(l,y,d6[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=jx.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var p9,d9={kernelName:rr,backendName:"wasm",setupFunc:u9,kernelFunc:h9},c9=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=sz(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},f9={kernelName:or,backendName:"wasm",kernelFunc:c9},m9=!0,g9=k6(Ht,m9),y9=w6(ur),b9=w6(hr),x9=w6(gr);function w9(e){p9=e.wasm.cwrap(fr,null,["number","number","number","number","number","number","number","number","number","number"])}function v9(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=c5({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===Ia.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return p9(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}var k9,I9={kernelName:fr,backendName:"wasm",setupFunc:w9,kernelFunc:v9};function S9(e){k9=e.wasm.cwrap(dr,null,["number","number","number","number","number","number","number","number","number","number"])}function N9(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[h,p,d,c]=a.shape,f=[h,l,u,c],m=t.makeOutput(f,"float32");if(0===Ia.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=c5({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return k9(b,h,p,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}var T9,C9={kernelName:dr,backendName:"wasm",setupFunc:S9,kernelFunc:N9};function _9(e){T9=e.wasm.cwrap(yr,null,["number","array","number","array","number","number"])}function E9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Ia.parseAxisParam(s,a.shape);if(0===a.shape.length)return E6({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);T9(l,h,i.length,p,a.shape.length,u);let d=e5({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d}var A9,$9={kernelName:yr,backendName:"wasm",kernelFunc:E9,setupFunc:_9};function R9(e){A9=e.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","array","number","number"])}function F9(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=jx.getImageCenter(o,d,c),y=0===i,b=255,x="number"==typeof i?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return A9(u,p,d,c,f,s,m,g,w,x.length,h),l}var D9,M9={kernelName:ia,backendName:"wasm",kernelFunc:F9,setupFunc:R9},O9=w6(br),L9=w6(xr);function z9(e){D9=e.wasm.cwrap(wr,null,["number","number","number","number","number","number","array","number","number"])}function P9(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Ia.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=Gm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return D9(c,f,d6[s.dtype],l,u,h,m,d,g),o}var B9,W9={kernelName:wr,backendName:"wasm",setupFunc:z9,kernelFunc:P9};function V9(e){B9=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function U9(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:Ia.sizeFromShape(a.shape.slice(1));return B9(i,o,l,c,h),u}var G9,H9={kernelName:kr,backendName:"wasm",kernelFunc:U9,setupFunc:V9};function j9(e){G9=e.wasm.cwrap(_r,null,["number","number"])}function q9(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Ia.sizeFromShape(a.shape)||G9(r,s),a}var K9,X9={kernelName:"Sigmoid",backendName:"wasm",setupFunc:j9,kernelFunc:q9},Y9=w6(Nr);function Z9(e){K9=e.wasm.cwrap(Dr,null,["number","number","number","number"])}function J9(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=Ia.sizeFromShape(n.shape)/o;return 0===Ia.sizeFromShape(s.shape)||K9(a,i,o,l),s}var Q9={kernelName:Dr,backendName:"wasm",setupFunc:Z9,kernelFunc:J9};function eee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=Ia.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=n9.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=jx.getReshaped(u.shape,s,o,!1),p=jx.getPermuted(h.length,s.length,!1),d=jx.getReshapedPermuted(u.shape,s,o,!1),c=e5({inputs:{x:u},backend:n,attrs:{shape:h}}),f=F6({inputs:{x:c},backend:n,attrs:{perm:p}}),m=e5({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}var tee,nee={kernelName:Rr,backendName:"wasm",kernelFunc:eee};function ree(e){tee=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function aee(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],h=n.readSync(i.dataId)[0],p=[l+h,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([h],"bool"),w=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(v.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=tee(d,c,d6[s.dtype],l,h,u,f,g,b,w,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=jx.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=jx.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=jx.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let C=m,_=y;return N!==p[0]&&(C=i5({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),_=i5({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[C,_,x,v]}var see,iee={kernelName:Mr,backendName:"wasm",setupFunc:ree,kernelFunc:aee};function oee(e){see=e.wasm.cwrap(Or,null,["number","number","number","number","number","number","number"])}function lee(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],h=Ia.sizeFromShape(s.shape),p=t.makeOutput([u,h],r.dtype),d=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([h],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;see(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=jx.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=jx.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=jx.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=jx.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=jx.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}var uee,hee={kernelName:Or,backendName:"wasm",setupFunc:oee,kernelFunc:lee};function pee(e){uee=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function dee(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(jx.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=a.shape.slice();h[0]=u;let p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(h,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;uee(p,d6[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=jx.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=jx.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=jx.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=jx.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}function cee(e){return dee(e,!0)}var fee={kernelName:Lr,backendName:"wasm",setupFunc:pee,kernelFunc:cee};function mee(e){return dee(e,!1)}var gee={kernelName:zr,backendName:"wasm",setupFunc:pee,kernelFunc:mee};function yee(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Ia.parseAxisParam(i,a.shape)[0],l=jx.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let n=i5({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n})}var bee,xee={kernelName:Fr,backendName:"wasm",kernelFunc:yee},wee=w6(Ar),vee=w6(Wr),kee=!0,Iee=k6(Br,kee);function See(e){bee=e.wasm.cwrap(aa,null,["number","number","number","number"])}function Nee(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return bee(i,a,d6[s.dtype],l),o}var Tee,Cee={kernelName:aa,backendName:"wasm",setupFunc:See,kernelFunc:Nee};function _ee(e){Tee=e.wasm.cwrap(Vr,null,["number","array","number","array","array","array","array","array","number","number"])}function Eee(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=xx.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=e5({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){Ia.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: "+s.shape.length);let e=xx.computeOutShape(x,w,v),r=i5({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=e5({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(Ia.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),h=new Uint8Array(new Int32Array(Ia.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;Tee(r,a,s.shape.length,i,o,l,u,h,f.length,p),t=e5({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}var Aee={kernelName:Vr,backendName:"wasm",setupFunc:_ee,kernelFunc:Eee};function $ee(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:h,preserveShortSequences:p}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=Cz(d,c,i,o,l,u,h,p),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}var Ree={kernelName:Ur,backendName:"wasm",kernelFunc:$ee};function Fee(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,h,p]=Ez(o,l[0],i),d=h.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=h;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(p),[c,f,g]}var Dee={kernelName:Gr,backendName:"wasm",kernelFunc:Fee};function Mee(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=Az(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Oee,Lee={kernelName:Hr,backendName:"wasm",kernelFunc:Mee},zee=!0,Pee=k6(jr,zee);function Bee(e){Oee=e.wasm.cwrap($r,null,["number","number","number","number"])}function Wee(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=z6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=jx.getInnerMostAxes(f.length,u.shape.length))}jx.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=jx.computeOutAndReduceShapes(u.shape,f),y=Ia.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ia.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;Oee(l,y,d6[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=jx.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var Vee,Uee={kernelName:$r,backendName:"wasm",setupFunc:Bee,kernelFunc:Wee},Gee=w6(qr),Hee=w6(Kr);function jee(e){Vee=e.wasm.cwrap(Xr,null,["number","array","number","array","number","number"])}function qee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return Vee(s,l,a.shape.length,u,o.length,d6[h.dtype],p),h}var Kee,Xee={kernelName:Xr,backendName:"wasm",setupFunc:jee,kernelFunc:qee};function Yee(e){Kee=e.wasm.cwrap(Yr,null,["number","array","number","number","number","bool","number","number"])}var Zee,Jee=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return Kee(i,o,r.shape.length,d6[r.dtype],a,s,h,d),[u,p]},Qee={kernelName:Yr,backendName:"wasm",setupFunc:Yee,kernelFunc:Jee};function ete(e){Zee=e.wasm.cwrap(Zr,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function tte(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:h}=a,[p,d,c,f]=s.shape,[m,g]=null!=h?h:[d,c],y=[p,m,g,f],b=new Uint8Array(new Int32Array(Ia.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(Ia.computeStrides(y)).buffer),w=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4;break;default:t=1;break}return Zee(k,I,i.shape[0]>1,p,m,g,f,c,d,b,s.shape.length-1,x,y.length-1,S,t,u,v),w}var nte={kernelName:Zr,backendName:"wasm",setupFunc:ete,kernelFunc:tte};function rte(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<h.length;c++)p[s]=c,h[c]=i5({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l}))}var ate={kernelName:ea,backendName:"wasm",kernelFunc:rte};function ste(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var ite={kernelName:ra,backendName:"wasm",kernelFunc:ste},ote=[x6,v6,N6,_6,V6,j6,Y6,Q6,s5,d5,m5,g5,x5,k5,T5,$5,R5,F5,L5,W5,H5,X5,J5,Q5,t8,n8,a8,o8,p8,d8,f8,b8,k8,T8,A8,D8,O8,z8,$6,P8,U8,H8,q8,K8,Y8,Z8,Q8,t7,s7,o7,p7,m7,w7,k7,T7,_7,E7,D7,z7,V7,G7,q7,X7,J7,n9,a9,l9,d9,f9,g9,y9,b9,x9,n5,I9,C9,$9,M9,O9,L9,W9,H9,X9,Y9,h5,Q9,nee,iee,hee,fee,gee,xee,wee,vee,Iee,Cee,Aee,Ree,Dee,Lee,Pee,Uee,Gee,Hee,Xee,Qee,nte,L6,ate,ite];for(let t of ote)ya(t);var lte=Ue();lte.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(Lse){return!1}}),lte.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(lte.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(Lse){return!1}});var ute=w(P()),hte=w(B()),pte=w(W()),dte=ute.default||ute,cte=pte.default||pte,fte=class extends U{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Cte),_te=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new V(this,_o())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Ia.now();return e(),{kernelMs:Ia.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=Ia.sizeFromShape(n),o=i*Ia.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||Ia.sizeFromShape(s);let o=Ia.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return bte(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=Ia.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Ia.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Unknown dtype "+t)}}};function mte(e){return(t,n)=>(Ia.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{n(e.instance,e.module)})})}),{})}function gte(e,t,n){if(null!=wte)return wte;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=kte&&null!=kte[r]?kte[r]:n+r}async function yte(){let[e,t]=await Promise.all([Ue().getAsync("WASM_HAS_SIMD_SUPPORT"),Ue().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=hte.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?gte(e,t,null!=vte?vte:r):r+n}};Ste&&(a.instantiateWasm=mte(gte(e,t,null!=vte?vte:"")));let s,i=!1;a.onAbort=()=>{i||Ite||(Ite=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==wte?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+dte.toString()],{type:"text/javascript"}),s=dte(a)):s=cte(a),s.then(e=>{i=!0,Ite=!1;let t=null;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",t,["number"]),dispose:e.cwrap("dispose",t,[])},n({wasm:e})}).catch(r)})}function bte(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}var xte=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],wte=null,vte=null,kte={},Ite=!1,Ste=!1;function Nte(e,t=!1){if(To("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Ite)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");wte=e,Ste=t}function Tte(e,t=!1){if(Ite)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)vte=e;else{kte=e;let t=xte.filter(e=>null==kte[e]);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Ste=t}var Cte=-1,_te=-1;function Ete(e){Cte=e}function Ate(){if(-1===_te)throw new Error("WASM backend not initialized.");return _te}var $te="4.2.0",Rte=2;Wo("wasm",async()=>{let{wasm:e}=await yte();return new fte(e)},Rte);var Fte="4.2.0",Dte="4.2.0",Mte="4.2.0",Ote="4.2.0",Lte="4.2.0",zte={tfjs:Fte,"tfjs-core":Fte,"tfjs-converter":Dte,"tfjs-backend-cpu":Mte,"tfjs-backend-webgl":Ote,"tfjs-backend-wasm":Lte},Pte={};function Bte(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)}),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}u(Pte,{AnchorPosition:()=>Lne,DrawBox:()=>Wne,DrawBoxOptions:()=>Bne,DrawFaceLandmarks:()=>Pre,DrawFaceLandmarksOptions:()=>zre,DrawTextField:()=>Pne,DrawTextFieldOptions:()=>zne,drawContour:()=>Bte,drawDetections:()=>Vne,drawFaceExpressions:()=>Dre,drawFaceLandmarks:()=>Bre});var Wte={};u(Wte,{computeReshapedDimensions:()=>Jte,getCenterPoint:()=>Qte,isDimensions:()=>Zte,isEven:()=>Xte,isFloat:()=>Kte,isTensor:()=>Ute,isTensor1D:()=>Gte,isTensor2D:()=>Hte,isTensor3D:()=>jte,isTensor4D:()=>qte,isValidNumber:()=>tne,isValidProbablitiy:()=>nne,range:()=>ene,round:()=>Yte});var Vte=class{constructor(e,t){if(!tne(e)||!tne(t))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:e,height:t}));this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new Vte(1/this.width,1/this.height)}};function Ute(e,t){return e instanceof ys&&e.shape.length===t}function Gte(e){return Ute(e,1)}function Hte(e){return Ute(e,2)}function jte(e){return Ute(e,3)}function qte(e){return Ute(e,4)}function Kte(e){return e%1!==0}function Xte(e){return e%2===0}function Yte(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Zte(e){return e&&e.width&&e.height}function Jte({width:e,height:t},n){let r=n/Math.max(t,e);return new Vte(Math.round(e*r),Math.round(t*r))}function Qte(e){return e.reduce((e,t)=>e.add(t),new rne(0,0)).div(new rne(e.length,e.length))}function ene(e,t,n){return Array(e).fill(0).map((e,r)=>t+r*n)}function tne(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function nne(e){return tne(e)&&e>=0&&e<=1}var rne=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new rne(this.x+e.x,this.y+e.y)}sub(e){return new rne(this.x-e.x,this.y-e.y)}mul(e){return new rne(this.x*e.x,this.y*e.y)}div(e){return new rne(this.x/e.x,this.y/e.y)}abs(){return new rne(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new rne(Math.floor(this.x),Math.floor(this.y))}},ane=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(tne)}static assertIsValidBox(e,t,n=!1){if(!ane.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(tne),a=[n.x,n.y,n.width,n.height].every(tne);if(!a&&!r)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(n));let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];ane.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new rne(this.left,this.top)}get topRight(){return new rne(this.right,this.top)}get bottomLeft(){return new rne(this.left,this.bottom)}get bottomRight(){return new rne(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.round(e));return new ane({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.floor(e));return new ane({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new ane({x:e,y:t,width:n,height:r})}rescale(e){let t=Zte(e)?e.width:e,n=Zte(e)?e.height:e;return new ane({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new ane({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new ane({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new ane({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=1,s=1,i=n,o=r,l=this.left,u=this.top,h=this.right,p=this.bottom;return h>t&&(i=-h+t+n,h=t),p>e&&(o=-p+e+r,p=e),l<1&&(o=2-l,l=1),u<1&&(o=2-u,u=1),{dy:s,edy:o,dx:a,edx:i,y:u,ey:p,x:l,ex:h,w:n,h:r}}calibrate(e){return new ane({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},sne=class extends ane{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},ine=class{constructor(e,t,n,r,a){this._imageDims=new Vte(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new ane(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ane(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new ine(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},one=class extends ine{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new one(n,r,a)}};function lne(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function une(e){let t=e.map(e=>e.x),n=e.map(e=>e.y),r=t.reduce((e,t)=>t<e?t:e,1/0),a=n.reduce((e,t)=>t<e?t:e,1/0),s=t.reduce((e,t)=>e<t?t:e,0),i=n.reduce((e,t)=>e<t?t:e,0);return new sne(r,a,s,i)}function hne(e,t,n,r=!0){let a=t.map((e,t)=>({score:e,boxIndex:t})).sort((e,t)=>e.score-t.score).map(e=>e.boxIndex),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(lne(s,l,r))}a=a.filter((e,t)=>o[t]<=n)}return s}function pne(e,t){return $o(()=>{let[n,r,a]=t,s=Tu([...e.shape.slice(0,3),1],n,"float32"),i=Tu([...e.shape.slice(0,3),1],r,"float32"),o=Tu([...e.shape.slice(0,3),1],a,"float32"),l=Yl([s,i,o],3);return id(e,l)})}function dne(e,t=!1){return $o(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,Tu(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter(e=>!!e).map(e=>bo(e,"float32"));return Yl(h,i)})}function cne(e){return 1/(1+Math.exp(-e))}var fne,mne=class extends ane{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},gne=.5,yne=.43,bne=.45,xne=class{constructor(e,t,n=new rne(0,0)){let{width:r,height:a}=t;this._imgDims=new Vte(r,a),this._shift=n,this._positions=e.map(e=>e.mul(new rne(r,a)).add(n))}get shift(){return new rne(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new rne(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new rne(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof one?e.box.floor():new ane(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/bne),o=Qte(e),l=Math.floor(Math.max(0,o.x-gne*i)),u=Math.floor(Math.max(0,o.y-yne*i));return new mne(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=une(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},wne=class extends xne{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Qte)}},vne=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${Yte(this.distance)})`:""}`}},kne=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some(e=>!(e instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(e=>Array.from(e))}}static fromJSON(e){let t=e.descriptors.map(e=>new Float32Array(e));return new kne(e.label,t)}};function Ine(e){return e.detection instanceof one}function Sne(e,t){return{...e,detection:t}}function Nne(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Tne(){return"object"==typeof s&&"undefined"!=typeof r&&null!=r.versions&&null!=r.versions.node}function Cne(e){let t="";if(!e&&Tne())try{e=l("fs")}catch(n){t=n.toString()}return{readFile:e?t=>new Promise((n,r)=>{e.readFile(t,(e,t)=>e?r(e):n(t))}):()=>{throw new Error("readFile - failed to require fs in nodejs environment with error: "+t)}}}function _ne(){let e=s.Canvas||s.HTMLCanvasElement,t=s.Image||s.HTMLImageElement,n=s.Video||s.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},i=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},o=s.fetch,l=Cne();return{Canvas:e||class{},CanvasRenderingContext2D:s.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:s.ImageData||class{},Video:s.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:i,fetch:o,...l}}function Ene(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function Ane(){if(!fne)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return fne}function $ne(e){fne=e}function Rne(){return Ene()?$ne(Nne()):Tne()?$ne(_ne()):null}function Fne(e){if(fne||Rne(),!fne)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=fne.Canvas,Image:n=fne.Image}=e;fne.Canvas=t,fne.Image=n,fne.createCanvasElement=e.createCanvasElement||(()=>new t),fne.createImageElement=e.createImageElement||(()=>new n),fne.ImageData=e.ImageData||fne.ImageData,fne.Video=e.Video||fne.Video,fne.fetch=e.fetch||fne.fetch,fne.readFile=e.readFile||fne.readFile}var Dne={getEnv:Ane,setEnv:$ne,initialize:Rne,createBrowserEnv:Nne,createFileSystem:Cne,createNodejsEnv:_ne,monkeyPatch:Fne,isBrowser:Ene,isNodejs:Tne};function Mne(e){return Dne.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function One(e){let{Canvas:t,CanvasRenderingContext2D:n}=Dne.getEnv();if(e instanceof n)return e;let r=Mne(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}Rne();var Lne=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(Lne||{}),zne=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},Pne=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof Pne?e.text:e,this.anchor=t,this.options=new zne(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map(t=>e.measureText(t).width).reduce((e,t)=>e<t?t:e,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t,r=Math.max(Math.min(o,e-s),0),a=Math.max(Math.min(l,n-i),0);return{x:r,y:a}}return{x:o,y:l}}draw(e){let t=Mne(e),n=One(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)})}},Bne=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new zne({...s,...a})}},Wne=class{constructor(e,t={}){this.box=new ane(e),this.options=new Bne(t)}draw(e){let t=One(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new Pne([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Vne(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof one?t.score:Ine(t)?t.detection.score:void 0,r=t instanceof one?t.box:Ine(t)?t.detection.box:new ane(t),a=n?""+Yte(n):void 0;new Wne(r,{label:a}).draw(e)})}function Une(e){let{Image:t,Video:n}=Dne.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Gne(e){return new Promise((t,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof Dne.getEnv().Canvas||Une(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)})}function Hne(e){let{Image:t,Video:n}=Dne.getEnv();return e instanceof t?new Vte(e.naturalWidth,e.naturalHeight):e instanceof n?new Vte(e.videoWidth,e.videoHeight):new Vte(e.width,e.height)}function jne({width:e,height:t}){let{createCanvasElement:n}=Dne.getEnv(),r=n();return r.width=e,r.height=t,r}function qne(e,t){let{ImageData:n}=Dne.getEnv();if(!(e instanceof n)&&!Une(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||Hne(e),s=jne({width:r,height:a});return e instanceof n?One(s).putImageData(e,0,0):One(s).drawImage(e,0,0,r,a),s}async function Kne(e,t){let n=t||Dne.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(qte(e)?1:0),i=$o(()=>e.as3D(r,a,s).toInt());return await lx.toPixels(i,n),i.dispose(),n}function Xne(e){let{Image:t,Canvas:n,Video:r}=Dne.getEnv();return e instanceof t||e instanceof n||e instanceof r}function Yne(e,t,n=!1){let{Image:r,Canvas:a}=Dne.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return jne({width:1,height:1});let s=Hne(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=jne({width:t,height:t}),h=e instanceof a?e:qne(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&One(u).drawImage(h,d,c,o,l),u}var Zne=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+e);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((e,t)=>{if(jte(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(qte(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof Dne.getEnv().Canvas?e:qne(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return ene(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return Jte({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,$o(()=>{let n=ene(this.batchSize,0,1).map(n=>{let r=this.getInput(n);if(r instanceof ys){let n=qte(r)?r:hp(r);return n=dne(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=hb.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof Dne.getEnv().Canvas)return lx.fromPixels(Yne(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)});return hm(n.map(e=>bo(e,"float32"))).as4D(this.batchSize,e,e,3)})}};async function Jne(e){if(e instanceof Zne)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(Mne);return r.forEach((e,r)=>{if(!Xne(e)&&!jte(e)&&!qte(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(qte(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}}),await Promise.all(r.map(e=>Xne(e)&&Gne(e))),new Zne(r,Array.isArray(e))}async function Qne(e,t){let{Canvas:n}=Dne.getEnv(),r=e;if(!(e instanceof n)){let t=await Jne(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await Kne(a)}let a=One(r);return t.map(e=>e instanceof one?e.forSize(r.width,r.height).box.floor():e).map(e=>e.clipAtImageBorders(r.width,r.height)).map(({x:e,y:t,width:n,height:r})=>{let s=jne({width:n,height:r});return n>0&&r>0&&One(s).putImageData(a.getImageData(e,t,n,r),0,0),s})}async function ere(e,t){if(!jte(e)&&!qte(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(qte(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return $o(()=>{let[n,r,a]=e.shape.slice(qte(e)?1:0);return t.map(e=>e instanceof one?e.forSize(r,n).box:e).map(e=>e.clipAtImageBorders(r,n)).filter(e=>e.width>0&&e.height>0).map(({x:t,y:s,width:i,height:o})=>Gf(e.as3D(n,r,a),[s,t,0],[o,i,a]))})}async function tre(e,t){let{fetch:n}=Dne.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function nre(e){return(await tre(e)).json()}function rre(e,t){let n=t+"-weights_manifest.json";if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:"/"+n};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(e=>e),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?"/"+i:i,{modelBaseUri:i,manifestUri:"/"===i?"/"+s:`${i}/${s}`}}async function are(e,t){let{manifestUri:n,modelBaseUri:r}=rre(e,t),a=await nre(n);return Eb.loadWeights(a,r)}var sre=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof xs)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof xs))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=si(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+t.path);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromUri - expected model uri");let t=await are(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromDisk - expected model file path");let{readFile:t}=Dne.getEnv(),{manifestUri:n,modelBaseUri:r}=rre(e,this.getDefaultModelName()),a=e=>Promise.all(e.map(e=>t(e).then(e=>e.buffer))),s=Eb.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof ys))throw new Error("traversePropertyPath - parameter is not a tensor, for path "+e);return{obj:n,objProp:r}}};function ire(e,t,n){return $o(()=>{let r=Af(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Ho(r,t.bias),r})}function ore(e,t,n=!1){return $o(()=>{let r=hf(n?Ho(zu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):ire(e,t.conv0,[2,2])),a=ire(r,t.conv1,[1,1]),s=hf(Ho(r,a)),i=ire(s,t.conv2,[1,1]);return hf(Ho(r,Ho(a,i)))})}function lre(e,t,n=!1,r=!0){return $o(()=>{let a=hf(n?Ho(zu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):ire(e,t.conv0,r?[2,2]:[1,1])),s=ire(a,t.conv1,[1,1]),i=hf(Ho(a,s)),o=ire(i,t.conv2,[1,1]),l=hf(Ho(a,Ho(s,o))),u=ire(l,t.conv3,[1,1]);return hf(Ho(a,Ho(s,Ho(o,u))))})}function ure(e,t,n="same",r=!1){return $o(()=>{let a=Ho(zu(e,t.filters,[1,1],n),t.bias);return r?hf(a):a})}function hre(e,t){Object.keys(e).forEach(n=>{t.some(e=>e.originalPath===n)||e[n].dispose()})}function pre(e,t){return(n,r,a,s)=>{let i=wm(e(n*r*a*a),[a,a,n,r]),o=ym(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}}function dre(e,t){return(n,r,a)=>{let s=bm(e(n*r),[n,r]),i=ym(e(r));return t.push({paramPath:a+"/weights"},{paramPath:a+"/bias"}),{weights:s,bias:i}}}var cre=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function fre(e,t){return(n,r,a)=>{let s=wm(e(9*n),[3,3,n,1]),i=wm(e(n*r),[1,1,n,r]),o=ym(e(r));return t.push({paramPath:a+"/depthwise_filter"},{paramPath:a+"/pointwise_filter"},{paramPath:a+"/bias"}),new cre(s,i,o)}}function mre(e){return t=>{let n=e(t+"/depthwise_filter",4),r=e(t+"/pointwise_filter",4),a=e(t+"/bias",1);return new cre(n,r,a)}}function gre(e,t){return(n,r,a)=>{let s=e[n];if(!Ute(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function yre(e){let t=e;function n(e){let n=t.slice(0,e);return t=t.slice(e),n}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function bre(e,t){let n=pre(e,t),r=fre(e,t);function a(e,t,a,s=!1){let i=s?n(e,t,3,a+"/conv0"):r(e,t,a+"/conv0"),o=r(t,t,a+"/conv1"),l=r(t,t,a+"/conv2");return{conv0:i,conv1:o,conv2:l}}function s(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s),u=r(t,t,n+"/conv3");return{conv0:i,conv1:o,conv2:l,conv3:u}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function xre(e){let t=[],{extractWeights:n,getRemainingWeights:r}=yre(e),{extractDenseBlock4Params:a}=bre(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function wre(e){return t=>{let n=e(t+"/filters",4),r=e(t+"/bias",1);return{filters:n,bias:r}}}function vre(e,t){let n=gre(e,t),r=wre(n),a=mre(n);function s(e,t=!1){let n=t?r(e+"/conv0"):a(e+"/conv0"),s=a(e+"/conv1"),i=a(e+"/conv2");return{conv0:n,conv1:s,conv2:i}}function i(e,t=!1){let n=t?r(e+"/conv0"):a(e+"/conv0"),s=a(e+"/conv1"),i=a(e+"/conv2"),o=a(e+"/conv3");return{conv0:n,conv1:s,conv2:i,conv3:o}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function kre(e){let t=[],{extractDenseBlock4Params:n}=vre(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return hre(e,t),{params:r,paramMappings:t}}var Ire=class extends sre{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return $o(()=>{let n=bo(e.toBatchTensor(112,!0),"float32"),r=pne(n,[122.782,117.001,104.298]).div(255),a=lre(r,t.dense0,!0);return a=lre(a,t.dense1),a=lre(a,t.dense2),a=lre(a,t.dense3),a=jl(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Jne(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return kre(e)}extractParams(e){return xre(e)}};function Sre(e,t){return $o(()=>Ho(Jl(e,t.weights),t.bias))}function Nre(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=yre(e),i=dre(a,r)(t,n,"fc");if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{paramMappings:r,params:{fc:i}}}function Tre(e){let t=[],n=gre(e,t);function r(e){let t=n(e+"/weights",2),r=n(e+"/bias",1);return{weights:t,bias:r}}let a={fc:r("fc")};return hre(e,t),{params:a,paramMappings:t}}function Cre(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var _re=class extends sre{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return $o(()=>{let n=e instanceof Zne?this.faceFeatureExtractor.forwardInput(e):e;return Sre(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Nre(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=Cre(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Tre(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Ere=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Are=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+e.length);Ere.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return Ere.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},$re=class extends _re{constructor(e=new Ire){super("FaceExpressionNet",e)}forwardInput(e){return $o(()=>Kf(this.runNet(e)))}async forward(e){return this.forwardInput(await Jne(e))}async predictExpressions(e){let t=await Jne(e),n=await this.forwardInput(t),r=await Promise.all(Rm(n).map(async e=>{let t=e.dataSync();return e.dispose(),t}));n.dispose();let a=r.map(e=>new Are(e));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Rre(e){return e.expressions instanceof Are}function Fre(e,t){return{...e,expressions:t}}function Dre(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(t=>{let a=t instanceof Are?t:Rre(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter(e=>e.probability>n),i=Ine(t)?t.detection.box.bottomLeft:r||new rne(0,0);new Pne(s.map(e=>`${e.expression} (${Yte(e.probability)})`),i).draw(e)})}function Mre(e){return Ine(e)&&e.landmarks instanceof xne&&e.unshiftedLandmarks instanceof xne&&e.alignedRect instanceof one}function Ore(e){let t=e=>180*e/Math.PI,n=(e,t)=>Math.sqrt((e._x-t._x)**2+(e._y-t._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(e,t,n)=>{let r=Math.floor(e._x-t._x),a=Math.floor(t._x-n._x);return r-a},s=(e,n)=>{let r=Math.hypot(n._x-e._x,n._y-e._y),a=n._y-e._y,s=Math.asin(a/r),i=t(s),o=Math.floor(90-i),l=n._x-e._x<0?-1:1;return o*l},i=(e,r,a)=>{let s=n(e,a),i={_x:(e._x+a._x)/2,_y:(e._y+a._y)/2},o=n(r,i),l=Math.atan(o/s),u=Math.floor(t(l)),h=i._y-r._y<0?-1:1;return u*h};if(!e||!e._positions||68!==e._positions.length)return r;let o=e._positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function Lre(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new one(e.detection.score,a.rescale(s.reverse()),s),o=Ore(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var zre=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},Pre=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new zre(t)}draw(e){let t=One(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof wne&&(t.strokeStyle=s,t.lineWidth=a,Bte(t,this.faceLandmarks.getJawOutline()),Bte(t,this.faceLandmarks.getLeftEyeBrow()),Bte(t,this.faceLandmarks.getRightEyeBrow()),Bte(t,this.faceLandmarks.getNose()),Bte(t,this.faceLandmarks.getLeftEye(),!0),Bte(t,this.faceLandmarks.getRightEye(),!0),Bte(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function Bre(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof xne?t:Mre(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new Pre(n).draw(e)})}function Wre(e,t){let n=pre(e,t),r=fre(e,t);function a(e,t,a){let s=r(e,t,a+"/separable_conv0"),i=r(t,t,a+"/separable_conv1"),o=n(e,t,1,a+"/expansion_conv");return{separable_conv0:s,separable_conv1:i,expansion_conv:o}}function s(e,t){let n=r(e,e,t+"/separable_conv0"),a=r(e,e,t+"/separable_conv1"),s=r(e,e,t+"/separable_conv2");return{separable_conv0:n,separable_conv1:a,separable_conv2:s}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Vre(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=yre(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Wre(r,n),u=s(3,32,3,"entry_flow/conv_in"),h=o(32,64,"entry_flow/reduction_block_0"),p=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:u,reduction_block_0:h,reduction_block_1:p},c={};ene(t,0,1).forEach(e=>{c["main_block_"+e]=l(128,"middle_flow/main_block_"+e)});let f=o(128,256,"exit_flow/reduction_block"),m=i(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(0!==a().length)throw new Error("weights remaing after extract: "+a().length);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}function Ure(e,t){let n=gre(e,t),r=wre(n),a=mre(n);function s(e){let t=a(e+"/separable_conv0"),n=a(e+"/separable_conv1"),s=r(e+"/expansion_conv");return{separable_conv0:t,separable_conv1:n,expansion_conv:s}}function i(e){let t=a(e+"/separable_conv0"),n=a(e+"/separable_conv1"),r=a(e+"/separable_conv2");return{separable_conv0:t,separable_conv1:n,separable_conv2:r}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function Gre(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=Ure(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),h={conv_in:o,reduction_block_0:l,reduction_block_1:u},p={};ene(t,0,1).forEach(e=>{p["main_block_"+e]=i("middle_flow/main_block_"+e)});let d=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),f={reduction_block:d,separable_conv:c};return hre(e,n),{params:{entry_flow:h,middle_flow:p,exit_flow:f},paramMappings:n}}function Hre(e,t,n){return Ho(zu(e,t.filters,n,"same"),t.bias)}function jre(e,t,n=!0){let r=n?hf(e):e;return r=ire(r,t.separable_conv0,[1,1]),r=ire(hf(r),t.separable_conv1,[1,1]),r=Sd(r,[3,3],[2,2],"same"),r=Ho(r,Hre(e,t.expansion_conv,[2,2])),r}function qre(e,t){let n=ire(hf(e),t.separable_conv0,[1,1]);return n=ire(hf(n),t.separable_conv1,[1,1]),n=ire(hf(n),t.separable_conv2,[1,1]),n=Ho(n,e),n}var Kre=class extends sre{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return $o(()=>{let n=bo(e.toBatchTensor(112,!0),"float32"),r=pne(n,[122.782,117.001,104.298]).div(255),a=hf(Hre(r,t.entry_flow.conv_in,[2,2]));return a=jre(a,t.entry_flow.reduction_block_0,!1),a=jre(a,t.entry_flow.reduction_block_1),ene(this._numMainBlocks,0,1).forEach(e=>{a=qre(a,t.middle_flow["main_block_"+e])}),a=jre(a,t.exit_flow.reduction_block),a=hf(ire(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await Jne(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Gre(e,this._numMainBlocks)}extractParams(e){return Vre(e,this._numMainBlocks)}};function Xre(e){let t=[],{extractWeights:n,getRemainingWeights:r}=yre(e),a=dre(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function Yre(e){let t=[],n=gre(e,t);function r(e){let t=n(e+"/weights",2),r=n(e+"/bias",1);return{weights:t,bias:r}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return hre(e,t),{params:a,paramMappings:t}}var Zre=(e=>(e.FEMALE="female",e.MALE="male",e))(Zre||{}),Jre=class extends sre{constructor(e=new Kre(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return $o(()=>{let n=e instanceof Zne?this.faceFeatureExtractor.forwardInput(e):e,r=jl(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=Sre(r,t.fc.age).as1D(),s=Sre(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return $o(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Kf(n)}})}async forward(e){return this.forwardInput(await Jne(e))}async predictAgeAndGender(e){let t=await Jne(e),n=await this.forwardInput(t),r=Rm(n.age),a=Rm(n.gender),s=r.map((e,t)=>({ageTensor:e,genderTensor:a[t]})),i=await Promise.all(s.map(async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Xre(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=Cre(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Yre(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},Qre=class extends _re{postProcess(e,t,n){let r=n.map(({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}}),a=r.length;return $o(()=>{let n=(e,t)=>hm([Tu([68],e,"float32"),Tu([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0},i=e=>s(e,(e,t)=>e<t),o=e=>s(e,(e,t)=>t<e);return e.mul(Tu([a,136],t,"float32")).sub(hm(Array.from(Array(a),(e,t)=>n(i(t),o(t))))).div(hm(Array.from(Array(a),(e,t)=>n(r[t].width,r[t].height))))})}forwardInput(e){return $o(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([e,t])=>({height:e,width:t})))})}async forward(e){return this.forwardInput(await Jne(e))}async detectLandmarks(e){let t=await Jne(e),n=$o(()=>Rm(this.forwardInput(t))),r=await Promise.all(n.map(async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter((e,t)=>Xte(t)),s=r.filter((e,t)=>!Xte(t));return new wne(Array(68).fill(0).map((e,t)=>new rne(a[t],s[t])),{height:t.getInputHeight(n),width:t.getInputWidth(n)})}));return n.forEach(e=>e.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},eae=class extends Qre{constructor(e=new Ire){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function tae(e){let t=[],{extractDenseBlock3Params:n}=vre(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return hre(e,t),{params:r,paramMappings:t}}function nae(e){let t=[],{extractWeights:n,getRemainingWeights:r}=yre(e),{extractDenseBlock3Params:a}=bre(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var rae=class extends sre{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return $o(()=>{let n=bo(e.toBatchTensor(112,!0),"float32"),r=pne(n,[122.782,117.001,104.298]).div(255),a=ore(r,t.dense0,!0);return a=ore(a,t.dense1),a=ore(a,t.dense2),a=jl(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await Jne(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return tae(e)}extractParams(e){return nae(e)}},aae=class extends Qre{constructor(e=new rae){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function sae(e,t){return Ho(Zo(e,t.weights),t.biases)}function iae(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=zu(e,s,n,a);return o=Ho(o,i),o=sae(o,t.scale),r?hf(o):o}function oae(e,t){return iae(e,t,[1,1],!0)}function lae(e,t){return iae(e,t,[1,1],!1)}function uae(e,t){return iae(e,t,[2,2],!0,"valid")}function hae(e,t){function n(t,n,r){let a=e(t),s=a.length/(n*r*r);if(Kte(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return $o(()=>Wm(wm(a,[n,s,r,r]),[2,3,1,0]))}function r(r,a,s,i){let o=n(r,a,s),l=ym(e(a));return t.push({paramPath:i+"/filters"},{paramPath:i+"/bias"}),{filters:o,bias:l}}function a(n,r){let a=ym(e(n)),s=ym(e(n));return t.push({paramPath:r+"/weights"},{paramPath:r+"/biases"}),{weights:a,biases:s}}function s(e,t,n,s){let i=r(e,t,n,s+"/conv"),o=a(t,s+"/scale");return{conv:i,scale:o}}function i(e,t,n,r,a=!1){let i=s((a?.5:1)*e,t,n,r+"/conv1"),o=s(e,t,n,r+"/conv2");return{conv1:i,conv2:o}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function pae(e){let{extractWeights:t,getRemainingWeights:n}=yre(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=hae(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=$o(()=>Wm(bm(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error("weights remaing after extract: "+n().length);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}function dae(e,t){let n=gre(e,t);function r(e){let t=n(e+"/scale/weights",1),r=n(e+"/scale/biases",1);return{weights:t,biases:r}}function a(e){let t=n(e+"/conv/filters",4),a=n(e+"/conv/bias",1),s=r(e);return{conv:{filters:t,bias:a},scale:s}}function s(e){return{conv1:a(e+"/conv1"),conv2:a(e+"/conv2")}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function cae(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=dae(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!Hte(x))throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+x);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return hre(e,t),{params:w,paramMappings:t}}function fae(e,t){let n=oae(e,t.conv1);return n=lae(n,t.conv2),n=Ho(n,e),n=hf(n),n}function mae(e,t){let n=uae(e,t.conv1);n=lae(n,t.conv2);let r=jl(e,2,2,"valid"),a=Fd(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Fd(e);n=Yl([n,t],1);let r=[...n.shape];r[2]=1;let a=Fd(r);n=Yl([n,a],2)}return r=s?Yl([r,a],3):r,n=Ho(r,n),n=hf(n),n}var gae=class extends sre{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return $o(()=>{let n=bo(e.toBatchTensor(150,!0),"float32"),r=pne(n,[122.782,117.001,104.298]).div(255),a=uae(r,t.conv32_down);a=Sd(a,3,2,"valid"),a=fae(a,t.conv32_1),a=fae(a,t.conv32_2),a=fae(a,t.conv32_3),a=mae(a,t.conv64_down),a=fae(a,t.conv64_1),a=fae(a,t.conv64_2),a=fae(a,t.conv64_3),a=mae(a,t.conv128_down),a=fae(a,t.conv128_1),a=fae(a,t.conv128_2),a=mae(a,t.conv256_down),a=fae(a,t.conv256_1),a=fae(a,t.conv256_2),a=mae(a,t.conv256_down_out);let s=a.mean([1,2]);return Jl(s,t.fc)})}async forward(e){return this.forwardInput(await Jne(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some(e=>e<=0))return new Float32Array(128);let n=await Jne(e),r=$o(()=>Rm(this.forwardInput(n))),a=await Promise.all(r.map(e=>e.data()));return r.forEach(e=>e.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return cae(e)}extractParams(e){return pae(e)}};function yae(e,t){return{...e,descriptor:t}}function bae(e,t){return{...e,age:t}}function xae(e,t,n){return{...e,gender:t,genderProbability:n}}function wae(e,t){function n(n,r){let a=wm(e(9*n),[3,3,n,1]),s=ym(e(n)),i=ym(e(n)),o=ym(e(n)),l=ym(e(n));return t.push({paramPath:r+"/filters"},{paramPath:r+"/batch_norm_scale"},{paramPath:r+"/batch_norm_offset"},{paramPath:r+"/batch_norm_mean"},{paramPath:r+"/batch_norm_variance"}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}function r(n,r,a,s,i){let o=wm(e(n*r*a*a),[a,a,n,r]),l=ym(e(r));return t.push({paramPath:s+"/filters"},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function a(e,t,n,a){let{filters:s,bias:i}=r(e,t,n,a,!0);return{filters:s,batch_norm_offset:i}}function s(e,t,r){let s=n(e,r+"/depthwise_conv"),i=a(e,t,1,r+"/pointwise_conv");return{depthwise_conv:s,pointwise_conv:i}}function i(){let e=a(3,32,3,"mobilenetv1/conv_0"),t=s(32,64,"mobilenetv1/conv_1"),n=s(64,128,"mobilenetv1/conv_2"),r=s(128,128,"mobilenetv1/conv_3"),i=s(128,256,"mobilenetv1/conv_4"),o=s(256,256,"mobilenetv1/conv_5"),l=s(256,512,"mobilenetv1/conv_6"),u=s(512,512,"mobilenetv1/conv_7"),h=s(512,512,"mobilenetv1/conv_8"),p=s(512,512,"mobilenetv1/conv_9"),d=s(512,512,"mobilenetv1/conv_10"),c=s(512,512,"mobilenetv1/conv_11"),f=s(512,1024,"mobilenetv1/conv_12"),m=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:e,conv_1:t,conv_2:n,conv_3:r,conv_4:i,conv_5:o,conv_6:l,conv_7:u,conv_8:h,conv_9:p,conv_10:d,conv_11:c,conv_12:f,conv_13:m}}function o(){let e=a(1024,256,1,"prediction_layer/conv_0"),t=a(256,512,3,"prediction_layer/conv_1"),n=a(512,128,1,"prediction_layer/conv_2"),s=a(128,256,3,"prediction_layer/conv_3"),i=a(256,128,1,"prediction_layer/conv_4"),o=a(128,256,3,"prediction_layer/conv_5"),l=a(256,64,1,"prediction_layer/conv_6"),u=a(64,128,3,"prediction_layer/conv_7"),h=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),p=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),d=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),c=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),f=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),m=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),g=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),y=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),b=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),x=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),w=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),v=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:e,conv_1:t,conv_2:n,conv_3:s,conv_4:i,conv_5:o,conv_6:l,conv_7:u,box_predictor_0:{box_encoding_predictor:h,class_predictor:p},box_predictor_1:{box_encoding_predictor:d,class_predictor:c},box_predictor_2:{box_encoding_predictor:f,class_predictor:m},box_predictor_3:{box_encoding_predictor:g,class_predictor:y},box_predictor_4:{box_encoding_predictor:b,class_predictor:x},box_predictor_5:{box_encoding_predictor:w,class_predictor:v}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function vae(e){let t=[],{extractWeights:n,getRemainingWeights:r}=yre(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=wae(n,t),i=a(),o=s(),l={extra_dim:xm(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function kae(e,t){let n=gre(e,t);function r(e,t,r){let a=n(`${e}/Conv2d_${t}_pointwise/weights`,4,r+"/filters"),s=n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,r+"/batch_norm_offset");return{filters:a,batch_norm_offset:s}}function a(e){let t="mobilenetv1/conv_"+e,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=t+"/depthwise_conv",i=t+"/pointwise_conv",o=n(a+"/depthwise_weights",4,s+"/filters"),l=n(a+"/BatchNorm/gamma",1,s+"/batch_norm_scale"),u=n(a+"/BatchNorm/beta",1,s+"/batch_norm_offset"),h=n(a+"/BatchNorm/moving_mean",1,s+"/batch_norm_mean"),p=n(a+"/BatchNorm/moving_variance",1,s+"/batch_norm_variance");return{depthwise_conv:{filters:o,batch_norm_scale:l,batch_norm_offset:u,batch_norm_mean:h,batch_norm_variance:p},pointwise_conv:r("MobilenetV1",e,i)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(e,t){let r=n(e+"/weights",4,t+"/filters"),a=n(e+"/biases",1,t+"/bias");return{filters:r,bias:a}}function o(e){let t=i(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),n=i(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`);return{box_encoding_predictor:t,class_predictor:n}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function Iae(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=kae(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!jte(a))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+a);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return hre(e,t),{params:s,paramMappings:t}}function Sae(e,t,n){return $o(()=>{let r=zu(e,t.filters,n,"same");return r=Ho(r,t.batch_norm_offset),_u(r,0,6)})}var Nae=.0010000000474974513;function Tae(e,t,n){return $o(()=>{let r=hh(e,t.filters,n,"same");return r=pu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Nae),_u(r,0,6)})}function Cae(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function _ae(e,t){return $o(()=>{let n,r=Sae(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((e,t)=>{let a=t+1,s=Cae(a);r=Tae(r,e.depthwise_conv,s),r=Sae(r,e.pointwise_conv,[1,1]),11===a&&(n=r)}),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function Eae(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function Aae(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((e,t)=>({score:e,boxIndex:t})).filter(e=>e.score>a).sort((e,t)=>t.score-e.score),l=e=>e<=r?1:0,u=[];return o.forEach(t=>{if(u.length>=i)return;let n=t.score;for(let r=u.length-1;r>=0;--r){let n=Eae(e,t.boxIndex,u[r]);if(0!==n&&(t.score*=l(n),t.score<=a))break}n===t.score&&u.push(t.boxIndex)}),u}function $ae(e){let t=Rm(Wm(e,[1,0])),n=[id(t[2],t[0]),id(t[3],t[1])],r=[Ho(t[0],Xo(n[0],2)),Ho(t[1],Xo(n[1],2))];return{sizes:n,centers:r}}function Rae(e,t){let{sizes:n,centers:r}=$ae(e),a=Rm(Wm(t,[1,0])),s=Xo(Zo(lp(Xo(a[2],5)),n[0]),2),i=Ho(Zo(Xo(a[0],10),n[0]),r[0]),o=Xo(Zo(lp(Xo(a[3],5)),n[1]),2),l=Ho(Zo(Xo(a[1],10),n[1]),r[1]);return Wm(hm([id(i,s),id(l,o),Ho(i,s),Ho(l,o)]),[1,0])}function Fae(e,t,n){return $o(()=>{let r=e.shape[0],a=Rae(Gl(fp(n.extra_dim,[r,1,1]),[-1,4]),Gl(e,[-1,4]));a=Gl(a,[r,a.shape[0]/r,4]);let s=eu(nu(t,[0,0,1],[-1,-1,-1])),i=nu(s,[0,0,0],[-1,-1,1]);i=Gl(i,[r,i.shape[1]]);let o=Rm(a),l=Rm(i);return{boxes:o,scores:l}})}function Dae(e,t){return $o(()=>{let n=e.shape[0],r=Gl(ure(e,t.box_encoding_predictor),[n,-1,1,4]),a=Gl(ure(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Mae(e,t,n){return $o(()=>{let r=Sae(e,n.conv_0,[1,1]),a=Sae(r,n.conv_1,[2,2]),s=Sae(a,n.conv_2,[1,1]),i=Sae(s,n.conv_3,[2,2]),o=Sae(i,n.conv_4,[1,1]),l=Sae(o,n.conv_5,[2,2]),u=Sae(l,n.conv_6,[1,1]),h=Sae(u,n.conv_7,[2,2]),p=Dae(t,n.box_predictor_0),d=Dae(e,n.box_predictor_1),c=Dae(a,n.box_predictor_2),f=Dae(i,n.box_predictor_3),m=Dae(l,n.box_predictor_4),g=Dae(h,n.box_predictor_5),y=Yl([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),b=Yl([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Oae=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if("number"!=typeof this._maxResults)throw new Error(this._name+" - expected maxResults to be a number")}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Lae=class extends sre{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return $o(()=>{let n=bo(e.toBatchTensor(512,!1),"float32"),r=id(Xo(n,127.5),1),a=_ae(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Mae(a.out,a.conv11,t.prediction_layer);return Fae(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await Jne(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Oae(t),a=await Jne(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),h=Aae(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map(e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map(e=>e*f),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map(e=>e*c);return new one(u[e],new mne(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Iae(e)}extractParams(e){return vae(e)}};var zae=.4,Pae=[new rne(.738768,.874946),new rne(2.42204,2.65704),new rne(4.30971,7.04493),new rne(10.246,4.59428),new rne(12.6868,11.8741)],Bae=[new rne(1.603231,2.094468),new rne(6.041143,7.080126),new rne(2.882459,3.518061),new rne(4.266906,5.178857),new rne(9.041765,10.66308)],Wae=[117.001,114.697,97.404],Vae="tiny_yolov2_model",Uae="tiny_yolov2_separable_conv_model",Gae=e=>"number"==typeof e;function Hae(e){if(!e)throw new Error("invalid config: "+e);if("boolean"!=typeof e.withSeparableConvs)throw new Error("config.withSeparableConvs has to be a boolean, have: "+e.withSeparableConvs);if(!Gae(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+e.iouThreshold);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(e=>"string"==typeof e))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(e.classes));if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(e=>e||{}).every(e=>Gae(e.x)&&Gae(e.y)))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(e.anchors));if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(Gae)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(e.meanRgb))}function jae(e){return $o(()=>{let t=Zo(e,Xh(.10000000149011612));return Ho(hf(id(e,t)),t)})}function qae(e,t){return $o(()=>{let n=rc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=zu(n,t.conv.filters,[1,1],"valid"),n=id(n,t.bn.sub),n=Zo(n,t.bn.truediv),n=Ho(n,t.conv.bias),jae(n)})}function Kae(e,t){return $o(()=>{let n=rc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Af(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Ho(n,t.bias),jae(n)})}function Xae(e,t){let n=pre(e,t);function r(n,r){let a=ym(e(n)),s=ym(e(n));return t.push({paramPath:r+"/sub"},{paramPath:r+"/truediv"}),{sub:a,truediv:s}}function a(e,t,a){let s=n(e,t,3,a+"/conv"),i=r(t,a+"/bn");return{conv:s,bn:i}}let s=fre(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Yae(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=yre(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=Xae(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r,m=t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),g=h(s,i,"conv1"),y=h(i,o,"conv2"),b=h(o,u,"conv3"),x=h(u,p,"conv4"),w=h(p,d,"conv5"),v=c?h(d,c,"conv6"):void 0,k=f?h(c,f,"conv7"):void 0,I=l(f||c||d,5*n,1,"conv8");a={conv0:m,conv1:g,conv2:y,conv3:b,conv4:x,conv5:w,conv6:v,conv7:k,conv8:I}}else{let[e,t,s,i,o,h,p,d,c]=r,f=u(e,t,"conv0"),m=u(t,s,"conv1"),g=u(s,i,"conv2"),y=u(i,o,"conv3"),b=u(o,h,"conv4"),x=u(h,p,"conv5"),w=u(p,d,"conv6"),v=u(d,c,"conv7"),k=l(c,5*n,1,"conv8");a={conv0:f,conv1:m,conv2:g,conv3:y,conv4:b,conv5:x,conv6:w,conv7:v,conv8:k}}if(0!==i().length)throw new Error("weights remaing after extract: "+i().length);return{params:a,paramMappings:o}}function Zae(e,t){let n=gre(e,t);function r(e){let t=n(e+"/sub",1),r=n(e+"/truediv",1);return{sub:t,truediv:r}}function a(e){let t=n(e+"/filters",4),r=n(e+"/bias",1);return{filters:t,bias:r}}function s(e){let t=a(e+"/conv"),n=r(e+"/bn");return{conv:t,bn:n}}let i=mre(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Jae(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=Zae(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return hre(e,r),{params:n,paramMappings:r}}var Qae=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!==0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},ese=class extends sre{constructor(e){super("TinyYolov2"),Hae(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=qae(e,t.conv0);return n=Sd(n,[2,2],[2,2],"same"),n=qae(n,t.conv1),n=Sd(n,[2,2],[2,2],"same"),n=qae(n,t.conv2),n=Sd(n,[2,2],[2,2],"same"),n=qae(n,t.conv3),n=Sd(n,[2,2],[2,2],"same"),n=qae(n,t.conv4),n=Sd(n,[2,2],[2,2],"same"),n=qae(n,t.conv5),n=Sd(n,[2,2],[1,1],"same"),n=qae(n,t.conv6),n=qae(n,t.conv7),ure(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?jae(ure(e,t.conv0,"valid",!1)):Kae(e,t.conv0);return n=Sd(n,[2,2],[2,2],"same"),n=Kae(n,t.conv1),n=Sd(n,[2,2],[2,2],"same"),n=Kae(n,t.conv2),n=Sd(n,[2,2],[2,2],"same"),n=Kae(n,t.conv3),n=Sd(n,[2,2],[2,2],"same"),n=Kae(n,t.conv4),n=Sd(n,[2,2],[2,2],"same"),n=Kae(n,t.conv5),n=Sd(n,[2,2],[1,1],"same"),n=t.conv6?Kae(n,t.conv6):n,n=t.conv7?Kae(n,t.conv7):n,ure(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return $o(()=>{let r=bo(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?pne(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await Jne(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new Qae(t),a=await Jne(e),s=await this.forwardInput(a,n),i=$o(()=>Rm(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map(e=>e.box),h=l.map(e=>e.score),p=l.map(e=>e.classScore),d=l.map(e=>this.config.classes[e.label]);return hne(u.map(e=>e.rescale(n)),h,this.config.iouThreshold,!0).map(e=>new ine(h[e],p[e],d[e],u[e],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return Jae(e,this.config)}extractParams(e){let t=this.config.filterSizes||ese.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return Yae(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=$o(()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]),n=t.slice([0,0,0,0],[l,l,u,4]),r=t.slice([0,0,0,4],[l,l,u,1]),a=this.withClassScores?Kf(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):Xh(0);return[n,r,a]}),c=[],f=await p.array(),m=await h.array();for(let g=0;g<l;g++)for(let e=0;e<l;e++)for(let t=0;t<u;t++){let r=cne(f[g][e][t][0]);if(!n||r>n){let n=(e+cne(m[g][e][t][0]))/l*i,a=(g+cne(m[g][e][t][1]))/l*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/l*i,u=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/l*o,h=n-s/2,p=a-u/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,f):{classScore:1,label:0};c.push({box:new sne(h,p,h+s,p+u),score:r,classScore:r*y,label:b,...f})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((e,t)=>s[n][r][a][t]).map((e,t)=>({classScore:e,label:t})).reduce((e,t)=>e.classScore>t.classScore?e:t)}},tse=ese;tse.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var nse=class extends tse{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:zae,classes:["face"],...e?{anchors:Bae,meanRgb:Wae}:{anchors:Pae,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new one(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?Uae:Vae}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var rse=class extends Qae{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},ase=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function sse(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map(e=>Mre(e)?a(e):e.detection),i=r||(t instanceof ys?await ere(t,s):await Qne(t,s)),o=await n(i);return i.forEach(e=>e instanceof ys&&e.dispose()),o}async function ise(e,t,n,r,a){return sse([e],t,async e=>n(e[0]),r,a)}var ose=.4,lse=[new rne(1.603231,2.094468),new rne(6.041143,7.080126),new rne(2.882459,3.518061),new rne(4.266906,5.178857),new rne(9.041765,10.66308)],use=[117.001,114.697,97.404],hse=class extends tse{constructor(){let e={withSeparableConvs:!0,iouThreshold:ose,classes:["face"],anchors:lse,meanRgb:use,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new one(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},pse={ssdMobilenetv1:new Lae,tinyFaceDetector:new hse,tinyYolov2:new nse,faceLandmark68Net:new eae,faceLandmark68TinyNet:new aae,faceRecognitionNet:new gae,faceExpressionNet:new $re,ageGenderNet:new Jre},dse=e=>pse.tinyFaceDetector.load(e),cse=e=>pse.faceLandmark68TinyNet.load(e),fse=e=>pse.faceRecognitionNet.load(e),mse=class extends ase{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},gse=class extends mse{async run(){let e=await this.parentTask,t=await sse(e,this.input,async e=>Promise.all(e.map(e=>pse.faceExpressionNet.predictExpressions(e))),this.extractedFaces);return e.map((e,n)=>Fre(e,t[n]))}withAgeAndGender(){return new vse(this,this.input)}},yse=class extends mse{async run(){let e=await this.parentTask;if(!e)return;let t=await ise(e,this.input,e=>pse.faceExpressionNet.predictExpressions(e),this.extractedFaces);return Fre(e,t)}withAgeAndGender(){return new kse(this,this.input)}},bse=class extends gse{withAgeAndGender(){return new Ise(this,this.input)}withFaceDescriptors(){return new Tse(this,this.input)}},xse=class extends yse{withAgeAndGender(){return new Sse(this,this.input)}withFaceDescriptor(){return new Cse(this,this.input)}},wse=class extends ase{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},vse=class extends wse{async run(){let e=await this.parentTask,t=await sse(e,this.input,async e=>Promise.all(e.map(e=>pse.ageGenderNet.predictAgeAndGender(e))),this.extractedFaces);return e.map((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return bae(xae(e,a,s),r)})}withFaceExpressions(){return new gse(this,this.input)}},kse=class extends wse{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await ise(e,this.input,e=>pse.ageGenderNet.predictAgeAndGender(e),this.extractedFaces);return bae(xae(e,n,r),t)}withFaceExpressions(){return new yse(this,this.input)}},Ise=class extends vse{withFaceExpressions(){return new bse(this,this.input)}withFaceDescriptors(){return new Tse(this,this.input)}},Sse=class extends kse{withFaceExpressions(){return new xse(this,this.input)}withFaceDescriptor(){return new Cse(this,this.input)}},Nse=class extends ase{constructor(e,t){super(),this.parentTask=e,this.input=t}},Tse=class extends Nse{async run(){let e=await this.parentTask;return(await sse(e,this.input,e=>Promise.all(e.map(e=>pse.faceRecognitionNet.computeFaceDescriptor(e))),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>yae(e[n],t))}withFaceExpressions(){return new bse(this,this.input)}withAgeAndGender(){return new Ise(this,this.input)}},Cse=class extends Nse{async run(){let e=await this.parentTask;if(!e)return;let t=await ise(e,this.input,e=>pse.faceRecognitionNet.computeFaceDescriptor(e),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}));return yae(e,t)}withFaceExpressions(){return new xse(this,this.input)}withAgeAndGender(){return new Sse(this,this.input)}},_se=class extends ase{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?pse.faceLandmark68TinyNet:pse.faceLandmark68Net}},Ese=class extends _se{async run(){let e=await this.parentTask,t=e.map(e=>e.detection),n=this.input instanceof ys?await ere(this.input,t):await Qne(this.input,t),r=await Promise.all(n.map(e=>this.landmarkNet.detectLandmarks(e)));return n.forEach(e=>e instanceof ys&&e.dispose()),e.filter((e,t)=>r[t]).map((e,t)=>Lre(e,r[t]))}withFaceExpressions(){return new bse(this,this.input)}withAgeAndGender(){return new Ise(this,this.input)}withFaceDescriptors(){return new Tse(this,this.input)}},Ase=class extends _se{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof ys?await ere(this.input,[t]):await Qne(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(e=>e instanceof ys&&e.dispose()),Lre(e,r)}withFaceExpressions(){return new xse(this,this.input)}withAgeAndGender(){return new Sse(this,this.input)}withFaceDescriptor(){return new Cse(this,this.input)}},$se=class extends ase{constructor(e,t=new Oae){super(),this.input=e,this.options=t}},Rse=class extends $se{async run(){let e,{input:t,options:n}=this;if(n instanceof rse)e=pse.tinyFaceDetector.locateFaces(t,n);else if(n instanceof Oae)e=pse.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof Qae))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=pse.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(t=>e(t.map(e=>Sne({},e)))).catch(e=>t(e))})}withFaceLandmarks(e=!1){return new Ese(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new gse(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new vse(this.runAndExtendWithFaceDetections(),this.input)}},Fse=class extends $se{async run(){let e=await new Rse(this.input,this.options),t=e[0];return e.forEach(e=>{e.score>t.score&&(t=e)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?Sne({},t):void 0)})}withFaceLandmarks(e=!1){return new Ase(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new yse(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new kse(this.runAndExtendWithFaceDetection(),this.input)}};function Dse(e,t=new Oae){return new Fse(e,t)}function Mse(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((e,t)=>e-r[t]).reduce((e,t)=>e+t*t,0))}var Ose=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map(e=>{if(e instanceof kne)return e;if(e instanceof Float32Array)return new kne(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new kne(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map(t=>Mse(t,e)).reduce((e,t)=>e+t,0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map(({descriptors:t,label:n})=>new vne(n,this.computeMeanDistance(e,t))).reduce((e,t)=>e.distance<t.distance?e:t)}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new vne("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map(e=>e.toJSON())}}static fromJSON(e){let t=e.labeledDescriptors.map(e=>kne.fromJSON(e));return new Ose(t,e.distanceThreshold)}}}).call(this,"/index.js",n("4362"),"/",n("c8ba"),n("b639").Buffer)}}]);
//# sourceMappingURL=page-about~page-index~88d7667b.d3f3d3bf.js.map