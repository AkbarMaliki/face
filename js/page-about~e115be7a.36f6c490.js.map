{"version":3,"sources":["webpack:///./src/pages/about.vue?a334","webpack:///src/pages/about.vue","webpack:///./src/pages/about.vue?fa6c","webpack:///./src/pages/about.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","img","_e","on","test","_v","staticRenderFns","data","message","methods","wajah","cnv","toDataURL","port","postMessage","console","log","JSON","stringify","mounted","window","addEventListener","sdb","loadingOn","loadModel","component"],"mappings":"8HAAA,ICYA,EDZIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAAEN,EAAO,IAAEI,EAAG,MAAM,CAACE,MAAM,CAAC,IAAMN,EAAIO,IAAI,IAAM,MAAMP,EAAIQ,KAAKJ,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,UAAUG,GAAG,CAAC,MAAQT,EAAIU,OAAO,CAACV,EAAIW,GAAG,eACrQC,EAAkB,G,qYCUtB,aAKA,GACEC,KADF,WAEI,MAAO,CACLC,QAAS,aACTP,IAAN,OAGEQ,QAAS,CACPL,KADJ,WAEM,EAAN,qBAEI,UAJJ,SAIA,oMACA,EACA,KACA,mCACA,EACA,YACA,6BAGA,IATA,SAYA,iFAZA,UAYA,EAZA,OAgBA,EAhBA,iBAiBA,KAjBA,+BAmBA,GACA,8FApBA,UAsBA,YAtBA,QAsBA,EAtBA,OAuBA,YACA,KAEA,uBACoBM,EAAQC,EAAIC,eAIhC,GACA,gCAhCA,YAoCA,EApCA,kCAqCA,6BArCA,WAqCA,EArCA,OAsCA,WAGA,YAzCA,kCA2CA,YACA,iBAAkB,IAAlB,wDAAoB,IAApB,IAAoB,OAApB,6EACA,wBACA,EAFA,qBAGA,YAHA,uBAI4B,EAA5B,GAC4B,EAA5B,qBAE8B,EAA9B,4CAPA,kBAUA,2BAC8B,QAA9B,YACA,IAZA,2CAAkB,OAAlB,YAAoB,OAApB,8BA5CA,WA2CgB,EA3ChB,OA8DgB,EAAhB,iBACA,EA/DA,oBAgEgB,EAAhB,8BACA,oBAjEA,qBAkEA,KAlEA,wBAmEgB,EAAhB,qBACgB,QAAhB,oBAGkB,QAAlB,uBACkB,QAAlB,EACkB,WAAlB,uBAzEA,0DA8EgB,EAAhB,oBACgB,EAAhB,4BACkB,QAAlB,0CACkB,QAAlB,EACkB,WAAlB,EACkB,WAAlB,oBACkB,QAAlB,aAEgB,QAAhB,oBAGkB,QAAlB,0CACkB,QAAlB,EACkB,WAAlB,EACkB,WAAlB,oBACkB,QAAlB,aA7FA,0DAmGgBC,EAAKC,YAAY,SACjBC,QAAQC,IAAIC,KAAKC,UAAU,CACzB,QAAlB,+BACkB,QAAlB,KAtGA,0DA2GA,uBACA,4BACA,gCACA,aA9GA,kEAmHI,UAvHJ,WAuHA,0JACA,YADA,SAEA,UAFA,uBAGA,UAHA,uBAIA,UAJA,OAMA,0CACA,eACA,oDARA,gDAWEC,QAzIF,WA0II,IAAJ,OACIC,OAAOC,iBAAiB,WAAW,SAAvC,GACA,uBAEA,mBAGU,EAAV,WAEU,EAAV,sBAEY,EAAZ,WACY,QAAZ,iBAIA,GACIC,EAAIC,YACJ5B,KAAK6B,cC5KsU,I,YCO3UC,EAAY,eACd,EACAhC,EACAa,GACA,EACA,KACA,KACA,MAIa,aAAAmB,E","file":"js/page-about~e115be7a.36f6c490.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"app\"}},[(_vm.img)?_c('img',{attrs:{\"src\":_vm.img,\"alt\":\"\"}}):_vm._e(),_c('button',{attrs:{\"id\":\"button\"},on:{\"click\":_vm.test}},[_vm._v(\"Send\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div id=\"app\">\r\n      <img :src=\"img\" v-if=\"img\" alt=\"\">\r\n      <button id=\"button\" @click=\"test\">Send</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as faceapi from \"@vladmandic/face-api\";\r\nimport autophp from '@/plugins/_autophp'\r\nlet sdb=new autophp();\r\n var port;\r\n// listen for messages\r\n\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      message: \"Hello Vue!\",\r\n      img:null\r\n    };\r\n  },\r\n  methods: {\r\n    test(){\r\n        port.postMessage('test');\r\n    },  \r\n    async startScan(videoEl) {\r\n      let that = this;\r\n      var maxDescriptorDistance = 0.6;\r\n      var video = document.getElementById(\"video\");\r\n      videoEl = video;\r\n      var canvas = faceapi.createCanvasFromMedia(video);\r\n      canvas.style.position = \"absolute;\";\r\n        // taruh base64 ke canvas\r\n        // const img = await canvas.loadImage(req.body.file);\r\n        const img = canvas; // dengan file\r\n        // mendapatkan descriptor dari canvas\r\n        // let descriptorImg = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\r\n        let descriptorImg = await faceapi.detectSingleFace(img,new faceapi.TinyFaceDetectorOptions({ inputSize: 320 })).withFaceLandmarks(true).withFaceDescriptor()\r\n\r\n        let tensor;\r\n        let wajah;\r\n        if (!descriptorImg) {\r\n            wajah = false;\r\n        } else {\r\n            const regionsToExtract = [\r\n                new faceapi.Rect(descriptorImg.detection.box.x, descriptorImg.detection.box.y, descriptorImg.detection.box.width, descriptorImg.detection.box.height)\r\n            ]\r\n            let faceImages = await faceapi.extractFaces(img, regionsToExtract)\r\n            if (faceImages.length == 0) {\r\n                wajah = false;\r\n            } else {\r\n                faceImages.forEach(cnv => {\r\n                    wajah = cnv.toDataURL();\r\n                })\r\n            }\r\n            // mengconvert data face descriptor ke type Float32Array\r\n            tensor = [\r\n                new Float32Array(descriptorImg.descriptor)\r\n            ]\r\n        }\r\n\r\n        if (wajah) {\r\n            let data = await axios.get('./data-wajah.json');\r\n            let datas=data.data\r\n            // let datas = await readJsonWajah();\r\n            // console.log(datas)\r\n            if (datas.length > 0) {\r\n                // CEK DUPLICATE\r\n                const labeledFaceDescriptors = await Promise.all(\r\n                    datas.map(async label => {\r\n                        let faces = JSON.parse(label.tensor)\r\n                        if (faces) {\r\n                            if (faces.length > 0) {\r\n                                const faceDescriptors = []\r\n                                faces.forEach(e => {\r\n                                    // console.log(Object.values(e))\r\n                                    faceDescriptors.push(new Float32Array(Object.values(e))) // multiple tensor data\r\n                                })\r\n                                // console.log(faceDescriptors)\r\n                                return new faceapi.LabeledFaceDescriptors(JSON.stringify({\r\n                                    id_user: label.id_user\r\n                                }), faceDescriptors)\r\n                            }\r\n                        }\r\n                    })\r\n                )\r\n                \r\n                const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\r\n                if (descriptorImg) {\r\n                    const results = faceMatcher.findBestMatch(descriptorImg.descriptor)\r\n                    if (results._label == \"unknown\") {\r\n                        if (tensor[0]) {\r\n                            port.postMessage('false');\r\n                            console.log(JSON.stringify({\r\n                                // tensor: tensor,\r\n                                // wajah: wajah,\r\n                                message: \"wajah tidak dikenali\",\r\n                                status: false,\r\n                                confidence: 100 - (results._distance * 100)\r\n                            }));\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        let user = JSON.parse(results.label);\r\n                        port.postMessage(JSON.stringify({\r\n                            message: \"Wajah Mirip dengan id user = \" + user.id_user,\r\n                            status: true,\r\n                            duplicate:true,\r\n                            confidence: 100 - (results._distance * 100),\r\n                            id_user: user.id_user\r\n                        }));\r\n                        console.log(JSON.stringify({\r\n                            // tensor: tensor,\r\n                            // wajah: wajah,\r\n                            message: \"Wajah Mirip dengan id user = \" + user.id_user,\r\n                            status: true,\r\n                            duplicate:true,\r\n                            confidence: 100 - (results._distance * 100),\r\n                            id_user: user.id_user\r\n                        }));\r\n                        return;\r\n                    }\r\n                }\r\n            } else {\r\n                port.postMessage('false');\r\n                console.log(JSON.stringify({\r\n                    message: 'Tidak ada wajah di Database ',\r\n                    status: false\r\n                }));\r\n                return;\r\n            }\r\n        } else {\r\n            port.postMessage('false');\r\n            console.log(JSON.stringify({\r\n                message: 'Wajah tidak ditemukan',\r\n                status: false\r\n            }));\r\n            return;\r\n        }\r\n    },\r\n    async loadModel() {\r\n      var MODEL_URL = \"./model\";\r\n      await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n      await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n      await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n    //   await faceapi.loadFaceExpressionModel(MODEL_URL);\r\n      console.log(\"loading model berhasil ...\");\r\n      sdb.loadingOff();\r\n      sdb.alert('loading model berhasil ...','bg-blue-500');\r\n    },\r\n  },\r\n  mounted() {\r\n    let that=this\r\n    window.addEventListener('message', function(event) {\r\n        if (event.data == 'capturePort') {\r\n            // capture port2 coming from the Dart side\r\n            if (event.ports[0] != null) {\r\n                // the port is ready for communication,\r\n                // so you can use port.postMessage(message); wherever you want\r\n                port = event.ports[0];\r\n                // To listen to messages coming from the Dart side, set the onmessage event listener\r\n                port.onmessage = function (event) {\r\n                    // event.data contains the message data coming from the Dart side\r\n                    that.img=event.data;\r\n                    console.log(event.data);\r\n                };\r\n            }\r\n        }\r\n    }, false);\r\n    sdb.loadingOn();\r\n    this.loadModel();\r\n    \r\n  },\r\n};\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./about.vue?vue&type=template&id=6e1f31d8&\"\nimport script from \"./about.vue?vue&type=script&lang=js&\"\nexport * from \"./about.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}