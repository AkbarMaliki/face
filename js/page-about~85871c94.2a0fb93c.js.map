{"version":3,"sources":["webpack:///./src/pages/about.vue?aa75","webpack:///src/pages/about.vue","webpack:///./src/pages/about.vue?fa6c","webpack:///./src/pages/about.vue","webpack:///./src/pages/about.vue?7ef1"],"names":["port","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","dbTime","substring","attrs","on","saveDatabase","staticRenderFns","data","img","recognition","loading","dbFace","methods","test","loadDatabase","console","log","$forceUpdate","wajah","cnv","toDataURL","postMessage","that","JSON","stringify","mounted","window","addEventListener","loadModel","component"],"mappings":"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","file":"js/page-about~85871c94.2a0fb93c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"p-3\"},[_c('div',{staticClass:\"p-2 shadow bg-blue-200 rounded shadow\"},[(_vm.recognition)?_c('div',[_c('p',{staticClass:\"p-2 font-semibold text-lg animate__animated animate__bounce animate__infinite\"},[_vm._v(\"Recognition ...\")])]):_c('div',[(_vm.dbFace)?_c('div',[_vm._v(\"DB \"),_c('span',{staticClass:\"font-semibold\"},[_vm._v(\"Ready \")]),_vm._v(\" (\"+_vm._s(_vm.dbTime.substring(0,15))+\") \"),_c('button',{staticClass:\"btn btn-sm btn-style10 ml-4\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.saveDatabase}},[_vm._v(\"Update DB\")])]):_c('div',[_vm._v(\"Loading Getting Database ... \")]),_c('p',{staticClass:\"text-lg\"},[_vm._v(\"Face Recognition : \"),(_vm.loading)?_c('span',[_vm._v(\"Loading ...\")]):_c('span',{staticClass:\"font-semibold\"},[_vm._v(\"Ready\")])])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"p-3\">\r\n      <div  class=\"p-2 shadow bg-blue-200 rounded shadow\">\r\n        <div v-if=\"recognition\">\r\n          <p class=\"p-2 font-semibold text-lg animate__animated animate__bounce animate__infinite\">Recognition ...</p>\r\n        </div>\r\n        <div v-else> \r\n          <div v-if=\"dbFace\">DB <span class=\"font-semibold\">Ready </span> ({{dbTime.substring(0,15)}}) <button type=\"button\" @click=\"saveDatabase\" class=\"btn btn-sm btn-style10 ml-4\">Update DB</button></div>\r\n          <div v-else>Loading Getting Database ... </div>\r\n          <p class=\"text-lg\">Face Recognition :\r\n            <span v-if=\"loading\">Loading ...</span>\r\n            <span v-else class=\"font-semibold\">Ready</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as faceapi from \"@vladmandic/face-api\";\r\nvar port;\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      img:null,\r\n      recognition:false,\r\n      loading:true,\r\n      dbFace:null,\r\n      dbTime:''\r\n    };\r\n  },\r\n  methods: {\r\n    test(){\r\n        port.postMessage('test');\r\n    },  \r\n    async saveDatabase(){\r\n      this.dbFace=false;\r\n      this.dbTime=false;\r\n      let data = await axios.get('https://hitfaceapi.my.id/contact');\r\n      let datas=data.data.datas\r\n      localStorage.setItem('db-face',JSON.stringify(datas));\r\n      localStorage.setItem('db-time',new Date());\r\n      this.loadDatabase();\r\n    },\r\n    loadDatabase(){\r\n      if(localStorage.getItem('db-face')){\r\n        this.dbFace=localStorage.getItem('db-face');\r\n      }\r\n      if(localStorage.getItem('db-time')){\r\n        this.dbTime=localStorage.getItem('db-time');\r\n        console.log(this.dbTime)\r\n      }\r\n      this.$forceUpdate();\r\n    },\r\n    async startScan(videoEl) {\r\n      let that = this;\r\n      that.recognition=false;\r\n      var maxDescriptorDistance = 0.6;\r\n      // var img = document.getElementById(\"image1\");\r\n      var img = new Image();\r\n      img.src=this.img;\r\n      // videoEl = video;\r\n      // var canvas = faceapi.createCanvasFromMedia(video);\r\n      // canvas.style.position = \"absolute;\";\r\n        // taruh base64 ke canvas\r\n        // const img = await canvas.loadImage(this.img);\r\n        // mendapatkan descriptor dari canvas\r\n        // let descriptorImg = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\r\n        let descriptorImg = await faceapi.detectSingleFace(img,new faceapi.TinyFaceDetectorOptions({ inputSize: 320 })).withFaceLandmarks(true).withFaceDescriptor()\r\n\r\n        let tensor;\r\n        let wajah;\r\n        if (!descriptorImg) {\r\n            wajah = false;\r\n        } else {\r\n            const regionsToExtract = [\r\n                new faceapi.Rect(descriptorImg.detection.box.x, descriptorImg.detection.box.y, descriptorImg.detection.box.width, descriptorImg.detection.box.height)\r\n            ]\r\n            let faceImages = await faceapi.extractFaces(img, regionsToExtract)\r\n            if (faceImages.length == 0) {\r\n                wajah = false;\r\n            } else {\r\n                faceImages.forEach(cnv => {\r\n                    wajah = cnv.toDataURL();\r\n                })\r\n            }\r\n            // mengconvert data face descriptor ke type Float32Array\r\n            tensor = [\r\n                new Float32Array(descriptorImg.descriptor)\r\n            ]\r\n        }\r\n\r\n        if (wajah) {\r\n            let data = await axios.get('./data-wajah.json');\r\n            let datas=data.data\r\n            // let datas = await readJsonWajah();\r\n            // console.log(datas)\r\n            if (datas.length > 0) {\r\n                // CEK DUPLICATE\r\n                const labeledFaceDescriptors = await Promise.all(\r\n                    datas.map(async label => {\r\n                        let faces = JSON.parse(label.tensor)\r\n                        if (faces) {\r\n                            if (faces.length > 0) {\r\n                                const faceDescriptors = []\r\n                                faces.forEach(e => {\r\n                                    // console.log(Object.values(e))\r\n                                    faceDescriptors.push(new Float32Array(Object.values(e))) // multiple tensor data\r\n                                })\r\n                                // console.log(faceDescriptors)\r\n                                return new faceapi.LabeledFaceDescriptors(JSON.stringify({\r\n                                    id_user: label.id_user\r\n                                }), faceDescriptors)\r\n                            }\r\n                        }\r\n                    })\r\n                )\r\n                \r\n                const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, maxDescriptorDistance)\r\n                if (descriptorImg) {\r\n                    const results = faceMatcher.findBestMatch(descriptorImg.descriptor)\r\n                    if (results._label == \"unknown\") {\r\n                        if (tensor[0]) {\r\n                            that.recognition=false;\r\n                            port.postMessage(JSON.stringify({\r\n                                message: \"wajah tidak dikenali\",\r\n                                status: false,\r\n                                confidence: 100 - (results._distance * 100)\r\n                            }));\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        let user = JSON.parse(results.label);\r\n                        that.recognition=false;\r\n                        port.postMessage(JSON.stringify({\r\n                            message: \"Wajah Mirip dengan id user = \" + user.id_user,\r\n                            status: true,\r\n                            duplicate:true,\r\n                            confidence: 100 - (results._distance * 100),\r\n                            id_user: user.id_user\r\n                        }));\r\n                        console.log(JSON.stringify({\r\n                            // tensor: tensor,\r\n                            // wajah: wajah,\r\n                            message: \"Wajah Mirip dengan id user = \" + user.id_user,\r\n                            status: true,\r\n                            duplicate:true,\r\n                            confidence: 100 - (results._distance * 100),\r\n                            id_user: user.id_user\r\n                        }));\r\n                        return;\r\n                    }\r\n                }\r\n            } else {\r\n                port.postMessage('false');\r\n                that.recognition=false;\r\n                port.postMessage(JSON.stringify({\r\n                    message: 'Tidak ada wajah di Database ',\r\n                    status: false\r\n                }));\r\n                return;\r\n            }\r\n        } else {\r\n            that.recognition=false;\r\n            port.postMessage('false');\r\n            port.postMessage(JSON.stringify({\r\n                message: 'Wajah tidak ditemukan',\r\n                status: false\r\n            }));\r\n            return;\r\n        }\r\n    },\r\n    async loadModel() {\r\n      var MODEL_URL = \"./model\";\r\n      await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n      await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n      await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n      //   await faceapi.loadFaceExpressionModel(MODEL_URL);\r\n      console.log(\"loading model berhasil ...\");\r\n      this.loading=false;\r\n    },\r\n  },\r\n  mounted() {\r\n    let that=this\r\n    if(!localStorage.getItem('db-face')){\r\n      this.saveDatabase();\r\n    }\r\n    this.loadDatabase();\r\n    window.addEventListener('message', function(event) {\r\n        if (event.data == 'capturePort') {\r\n            // capture port2 coming from the Dart side\r\n            if (event.ports[0] != null) {\r\n                // the port is ready for communication,\r\n                // so you can use port.postMessage(message); wherever you want\r\n                port = event.ports[0];\r\n                // To listen to messages coming from the Dart side, set the onmessage event listener\r\n                port.onmessage = function (event) {\r\n                    // event.data contains the message data coming from the Dart side\r\n                    console.log(event.data);\r\n                    that.img=event.data;\r\n                    that.startScan();\r\n                };\r\n            }\r\n        }\r\n    }, false);\r\n    this.loadModel();\r\n    \r\n  },\r\n};\r\n</script>\r\n<style>\r\nbody{\r\n  margin:0;\r\n  padding:0;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./about.vue?vue&type=template&id=5f76a09e&\"\nimport script from \"./about.vue?vue&type=script&lang=js&\"\nexport * from \"./about.vue?vue&type=script&lang=js&\"\nimport style0 from \"./about.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./about.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}